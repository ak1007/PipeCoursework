Found a 321 line (1715 tokens) duplication in the following files: 
Starting at line 330 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 492 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

				  	modString += ")}\n";
				}
		  		
		  		
		  		/*
		  		 * 3) write action
		  		 */
		  		modString += "\t\t\\action{\n";
		  		arcToTransitions = transitions[i]. getConnectToIterator();
			  	arcFromTransitions = transitions[i]. getConnectFromIterator();
			  	
			  	int[][] incidenceMatrix = pnmldata.getIncidenceMatrix();
			  	
			  	while (arcToTransitions.hasNext()) 
			  	{
			  		final Arc arc = ((Arc)arcToTransitions.next());
			  		String currentId = arc.getSource().getId();
			  		int placeNo = this.getPlaceIndex(currentId);
			  		if( incidenceMatrix!=null && incidenceMatrix[placeNo][i]<0  )
			  		{
			  			modString += "\t\t\tnext->"+currentId;
			  			modString += " = "+currentId+" - " + arc.getWeight() +  ";\n";
			  		}
			  	}
			  	while (arcFromTransitions.hasNext()) 
			  	{
			  		final Arc arc = ((Arc)arcFromTransitions.next());
			  		String currentId = arc.getTarget().getId();
			  		int placeNo = this.getPlaceIndex(currentId);
			  		if( incidenceMatrix!=null && incidenceMatrix[placeNo][i]>0  )
			  		{
			  			modString += "\t\t\tnext->"+currentId;
			  			modString += " = "+currentId+" + " + arc.getWeight() +  ";\n";
			  		}
			  	}
			  	
			  	if(type==CLONED)
					modString += "\t\t\tnext->tagged_location=" + tagOutputPlaceIndex + ";\n"; 
				
				
				modString += "\t\t}\n";
		  		
				/*
				 * 4) rate and weight
				 */
				if(type == UNTAGGED)
				{
					if (transitions[i].isTimed()) 
				  		modString += "\t\t\\rate{" + transitions[i].getRate();  	
					else 
				  		modString += "\t\t\\weight{" + transitions[i].getRate();
					
					if(transitions[i].isInfiniteServer())
					{
						String tagged_place = "(";
						
						arcToTransitions = transitions[i]. getConnectToIterator();
						if(arcToTransitions.hasNext()) 
					  	{
					  		tagged_place += ((Arc)arcToTransitions.next()).getSource().getId();;
					  	}
						while(arcToTransitions.hasNext()) 
					  	{
					  		final Arc arc = ((Arc)arcToTransitions.next());
					  		String currentId = arc.getSource().getId();
					  		tagged_place += "+" + currentId;
					  	}
							
						tagged_place += ")";
						
						modString += "*" + tagged_place + "}\n";	  	
					}
					else
					{
						modString += "}\n";
					}
					
				  	
				}
				else if(type == ORIGINAL)
				{
					double rate = transitions[i].getRate();
					
					if (transitions[i].isTimed())			  	
				  		modString += "\t\t\\rate{";
				  	
				  	else // not timed transition
				  		modString += "\t\t\\weight{";
					
						
					if(transitions[i].isInfiniteServer())
					{
						
						String tagged_place = "(";
						
						arcToTransitions = transitions[i]. getConnectToIterator();
						if(arcToTransitions.hasNext()) 
					  	{
					  		tagged_place += ((Arc)arcToTransitions.next()).getSource().getId();;
					  	}
						while(arcToTransitions.hasNext()) 
					  	{
					  		final Arc arc = ((Arc)arcToTransitions.next());
					  		String currentId = arc.getSource().getId();
					  		tagged_place += "+" + currentId;
					  	}
							
						tagged_place += ")";
				  	
							
							modString += " tagged_location== " + tagInputPlaceIndex[0] + 
				  			"? ( (double)" + rate + " -  ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[0]].getId(), i ) 
				  			+ "/(double)" + places[tagInputPlaceIndex[0]].getId() +") * " + rate + ") * " + tagged_place + " : ";
				  		
							int index=1;
				  		
							while(index<taggedInput)
							{
								modString += " tagged_location== " + tagInputPlaceIndex[index] + 
								"? ( (double)" + rate + " -  ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[index]].getId(), i ) 
								+ "/(double)" + places[tagInputPlaceIndex[index]].getId() +") * " + rate + ") * " + tagged_place + " : ";
				  		
								index++;
							}
				  		
				  		
							modString += rate + "*" + tagged_place +"}\n";
	
					}
						
					else //not infiniteServer
					{
							modString += " tagged_location== " + tagInputPlaceIndex[0] + 
				  			"? ( (double)" + rate + " -  ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[0]].getId(), i ) 
				  			+ "/(double)" + places[tagInputPlaceIndex[0]].getId() +") * " + rate + ") : ";
				  		
							int index=1;
				  		
							while(index<taggedInput)
							{
								modString += " tagged_location== " + tagInputPlaceIndex[index] + 
								"? ( (double)" + rate + " -  ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[index]].getId(), i ) 
								+ "/(double)" + places[tagInputPlaceIndex[index]].getId() +") * " + rate + ") : ";
				  		
								index++;
							}
							modString += rate +"}\n";	
					}

				}// end else if original
				else if(type == CLONED)
				{
					double rate = transitions[i].getRate();
					
				  	if (transitions[i].isTimed())			  	
				  		modString += "\t\t\\rate{";
				  	
				  	else // not timed transition
				  		modString += "\t\t\\weight{";
				  	
				  	if(transitions[i].isInfiniteServer())
				  	{
				  		
				  		String tagged_place = "(";
						
						arcToTransitions = transitions[i]. getConnectToIterator();
						if(arcToTransitions.hasNext()) 
					  	{
					  		tagged_place += ((Arc)arcToTransitions.next()).getSource().getId();;
					  	}
						while(arcToTransitions.hasNext()) 
					  	{
					  		final Arc arc = ((Arc)arcToTransitions.next());
					  		String currentId = arc.getSource().getId();
					  		tagged_place += "+" + currentId;
					  	}
							
						tagged_place += ")";
							
				  			modString += "tagged_location== " + tagInputPlaceIndex[0] + 
				  			"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[0]].getId(), i ) 
				  			+ "/(double)" + places[tagInputPlaceIndex[0]].getId() +") * " + rate + "*" + tagged_place + " : ";
				  		
				  			int index=1;
				  		
				  			while(index<taggedInput)
				  			{
				  				modString += " tagged_location== " + tagInputPlaceIndex[index] + 
				  				"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[index]].getId(), i ) 
				  				+ "/(double)" + places[tagInputPlaceIndex[index]].getId() +") * " + rate + "*" + tagged_place + " : ";
				  		
				  				index++;
				  			}
				  		
				  		
				  			modString += rate + "*" + tagged_place +"}\n";
				  			
				  	}
				  		
				  	else // not InfiniteServer
				  	{
				  			
				  			modString += "tagged_location== " + tagInputPlaceIndex[0] + 
				  			"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[0]].getId(), i ) 
				  			+ "/(double)" + places[tagInputPlaceIndex[0]].getId() +") * " + rate + " : ";
				  		
				  			int index=1;
				  		
				  			while(index<taggedInput)
				  			{
				  				modString += " tagged_location== " + tagInputPlaceIndex[index] + 
				  				"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[index]].getId(), i ) 
				  				+ "/(double)" + places[tagInputPlaceIndex[index]].getId() +") * " + rate + " : ";
				  		
				  				index++;
				  			}
				  		
				  			modString += rate +"}\n";
		
				  	}

				}//end else if cloned
				  	
				modString += "\t}\n";
				
			
		}//end writeTransition
		

		public int getArcWeightFromPlace (String placeId, int i)
		{
			Iterator arcsTo = transitions[i]. getConnectToIterator();
			
			//System.out.println("\n in get arc weight " + placeId);
			while(arcsTo.hasNext())
			{
				final Arc arc = (Arc)arcsTo.next();
				//System.out.println("\n"+arc.getSource().getId());
				if( arc.getSource().getId() == placeId ){
					//System.out.println("\nfound match");
					return arc.getWeight();
				}
			}
			
			return -1;
		}
		
		/*
		 * for each of the place connected to input tagged arc,
		 * check if it equals to tagged_location, if yes then, it must
		 * have marking one more greater than the backward incidence function
		 * otherwise, everything is normal
		 */
		private String getTaggedTransitionConditions(int transitionNum, int[] tagInputPlace) {
			
			String condition = new String();
		  	Iterator arcsTo = transitions[transitionNum]. getConnectToIterator();
		  	if (arcsTo.hasNext()){
		  		final Arc arc = (Arc)arcsTo.next();
		  		if(arc.isTagged())
		  		{
		  			condition += "((tagged_location== "+getPlaceIndex(arc.getSource().getId())
		  				+ " && " + arc.getSource().getId()+" > "+ (arc.getWeight()-1+1)
		  				+ ") || ( tagged_location!="+getPlaceIndex(arc.getSource().getId())
		  				+ " && " + arc.getSource().getId()+" > "+ (arc.getWeight()-1)
		  				+ "))";
		  		}
		  		else condition += arc.getSource().getId()+" > "+ (arc.getWeight() - 1);
		  	}
		  		
		  	while (arcsTo.hasNext())
		  	{
		  		
		  		final Arc arc = (Arc)arcsTo.next();
		  		if(arc.isTagged())
		  		{
		  			condition += " && ((tagged_location== "+getPlaceIndex(arc.getSource().getId())
		  				+ " && " + arc.getSource().getId()+" > "+ (arc.getWeight()-1+1)
		  				+ ") || ( tagged_location!="+getPlaceIndex(arc.getSource().getId())
		  				+ " && " + arc.getSource().getId()+" > "+ (arc.getWeight()-1)
		  				+ "))";
		  		}
		  		else condition += " && "+arc.getSource().getId()+" > "+ (arc.getWeight() - 1);
	  		
		  	}
		  	
		  	return condition;

		}
		
		private int getPlaceIndex(String placeName){		
			int index = -1;
			for(int i=0; i<places.length; i++) {		
				if(places[i].getId()==placeName)
				{
					index = i;
					break;
				}
			}
//			System.out.println("Returning " + index);
			
			return index;
		}
		
		private String getTransitionConditions(int transitionNum) {
			
			String condition = new String();
		  	Iterator arcsTo = transitions[transitionNum]. getConnectToIterator();
		  	if (arcsTo.hasNext()){
		  		final Arc arc = (Arc)arcsTo.next();
		  		condition += arc.getSource().getId()+" > "+ (arc.getWeight() - 1);
		  	}
		  		
		  	while (arcsTo.hasNext())
		  	{
		  		final Arc arc = (Arc)arcsTo.next();
		  		condition += " && "+arc.getSource().getId()+" > "+ (arc.getWeight() - 1);
		  	}
		  	return condition;
			
		}
=====================================================================
Found a 131 line (1142 tokens) duplication in the following files: 
Starting at line 165 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 666 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java

	private static MacroDefinition createMacroNode(final Element inputElement, MacroDefinition macro)
	{
		String nodeID = null;
		String nodeType = null;
		String nodeOperation = null;
		String nodeLabel = null;
		double nodePositionX = 0;
		double nodePositionY = 0;
		String nodeIncomingArcID = null;
		ArrayList<String> nodeOutgoingArcIDs = new ArrayList<String>();

		// retrieve info from element's attributes
		String retrievedNodeID = inputElement.getAttribute("id");
		if (retrievedNodeID.length() > 0)
			nodeID = retrievedNodeID;
		String retrievedNodeType = inputElement.getAttribute("type");
		if (retrievedNodeType.length() > 0)
			nodeType = retrievedNodeType;
		String retrievedNodeOperation = inputElement.getAttribute("operation");
		if (retrievedNodeOperation.length() > 0)
			nodeOperation = retrievedNodeOperation;
		String retrievedNodeLabel = inputElement.getAttribute("label");
		if (retrievedNodeLabel.length() > 0)
			nodeLabel = retrievedNodeLabel;
		String retrievedNodePositionX = inputElement.getAttribute("x");
		if (retrievedNodePositionX.length() > 0)
		{
			nodePositionX = Double.valueOf(retrievedNodePositionX).doubleValue() *
							(false ? QueryConstants.DISPLAY_SCALE_FACTORX : 1) +
							(false ? QueryConstants.DISPLAY_SHIFT_FACTORX : 1);
			nodePositionX += QueryConstants.NODE_HEIGHT / 2 - 1;
		}
		String retrievedNodePositionY = inputElement.getAttribute("y");
		if (retrievedNodePositionY.length() > 0)
		{
			nodePositionY = Double.valueOf(retrievedNodePositionY).doubleValue() *
							(false ? QueryConstants.DISPLAY_SCALE_FACTORY : 1) +
							(false ? QueryConstants.DISPLAY_SHIFT_FACTORY : 1);
			nodePositionY += QueryConstants.NODE_HEIGHT / 2 - 1;
		}

		// extract incoming and outgoing arc ids
		NodeList nodeElementList = inputElement.getChildNodes();
		for (int i = 0; i < nodeElementList.getLength(); i++)
		{
			Node nodeNode = nodeElementList.item(i);
			if (nodeNode instanceof Element)
			{
				Element nodeElement = (Element) nodeNode;
				if ("incomingArc".equals(nodeElement.getNodeName()))
				{
					String retrievedNodeIncomingArcID = nodeElement.getTextContent();
					if (retrievedNodeIncomingArcID.length() > 0)
						nodeIncomingArcID = retrievedNodeIncomingArcID;
				}
				else if ("outgoingArcs".equals(nodeElement.getNodeName()))
				{
					// extract arc IDs and put them into the array of outgoing
					// arc IDs
					NodeList outgoingArcsElementList = nodeElement.getChildNodes();
					for (int j = 0; j < outgoingArcsElementList.getLength(); j++)
					{
						Node outgoingArcsNode = outgoingArcsElementList.item(j);
						if (outgoingArcsNode instanceof Element)
						{
							Element outgoingArcsElement = (Element) outgoingArcsNode;
							if ("arc".equals(outgoingArcsElement.getNodeName()))
							{
								String outgoingArcID = outgoingArcsElement.getAttribute("id");
								nodeOutgoingArcIDs.add(outgoingArcID);
							}
						}
					}
				}
			}
		}

		// create nodes with the retrieved values
		PerformanceTreeNode node = null;
		if (nodeType.equals(PTNode.RESULT.toString()))
			node = new ResultNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.SEQUENTIAL.toString()))
			node = new SequentialNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.ARITHCOMP.toString()))
			node = new ArithCompNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.ARITHOP.toString()))
			node = new ArithOpNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.CONVOLUTION.toString()))
			node = new ConvolutionNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.DISCON.toString()))
			node = new DisconNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.DISTRIBUTION.toString()))
			node = new DistributionNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.FIRINGRATE.toString()))
			node = new FiringRateNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.ININTERVAL.toString()))
			node = new InIntervalNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.MOMENT.toString()))
			node = new MomentNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.PERCENTILE.toString()))
			node = new PercentileNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.NEGATION.toString()))
			node = new NegationNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.PASSAGETIMEDENSITY.toString()))
			node = new PassageTimeDensityNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.PROBININTERVAL.toString()))
			node = new ProbInIntervalNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.PROBINSTATES.toString()))
			node = new ProbInStatesNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.RANGE.toString()))
			node = new RangeNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.STATESATTIME.toString()))
			node = new StatesAtTimeNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.STEADYSTATEPROB.toString()))
			node = new SteadyStateProbNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.STEADYSTATESTATES.toString()))
			node = new SteadyStateStatesNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.MACRO.toString()))
			node = new MacroNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.SUBSET.toString()))
			node = new SubsetNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.ACTIONS.toString()))
			node = new ActionsNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.BOOL.toString()))
			node = new BoolNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.NUM.toString()))
			node = new NumNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.STATEFUNCTION.toString()))
			node = new StateFunctionNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.STATES.toString()))
			node = new StatesNode(nodePositionX, nodePositionY, nodeID);
=====================================================================
Found a 233 line (932 tokens) duplication in the following files: 
Starting at line 37 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 37 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsReceiver.java

public class ResultsReceiver
{
	private SocketIO server;
	private JPanel resultsPanel;
	private JFreeChart pdfGraph, cdfGraph;
	private ChartPanel pdfChartPanel, cdfChartPanel;
	private CardLayout graphFlip;
	private JPanel graphPanel;
	
	
	JButton switchViewBtn;
	private boolean currentlyPDF = true; // Is the graph currently showing a PDF view
	
	XYDataset PDFDataset, CDFDataset;
	
	
	public ResultsReceiver(SocketIO server, JPanel resultsPanel, String currentStatus)
	{
		this.server = server;
		this.resultsPanel = resultsPanel;
	}
	
	public void receive()
	{			
		String results = server.receiveFileContent();
		
		// Generate a set of points from the results
		XYSeries points = new XYSeries("Passage Time Results");
		XYSeries CDFpoints = new XYSeries("Passage Time Results (CDF)");
		boolean doCDF = false;
		String[] lines, values;
		
		// Divide the results into lines
		lines = results.split("\\r+|\n+");
		
				
		try
		{
			int i;
			
			// The first two values of each line are the X,Y cordinates			
			for(i=0; i<lines.length;i++)
			{
				// If we hit the CDF marker, PDF results have finished
				if (lines[i].equals("CDF <br>"))
				{
					doCDF = true;
					i++;
					break;
				}
					
				values = lines[i].split("\\s+");
				points.add(new Double(values[0]).doubleValue(), new Double(values[1]).doubleValue() );
			}
			
			// If there is a set of cumulative distribution function results, add to CDFpoints
			if (doCDF)
			{
				while(i< lines.length)
				{
					values = lines[i].split("\\s+");
					CDFpoints.add(new Double(values[0]).doubleValue(), new Double(values[1]).doubleValue() );
					i++;
				}
				
			
				// Create CDF graph panel
				CDFDataset = new XYSeriesCollection(CDFpoints);
				cdfGraph = ChartFactory.createXYLineChart("Passage Time Results", "Time","Probability Density", CDFDataset, PlotOrientation.VERTICAL, false, false, false); 
				cdfGraph.setBackgroundPaint(Color.white); 
				cdfChartPanel = new ChartPanel(cdfGraph);
			}
		
			// Create PDF graph panel
			PDFDataset = new XYSeriesCollection(points);				
			pdfGraph = ChartFactory.createXYLineChart("Passage Time Results", "Time","Probability Density", PDFDataset, PlotOrientation.VERTICAL, false, false, false); 
			pdfGraph.setBackgroundPaint(Color.white);							
			pdfChartPanel = new ChartPanel(pdfGraph);
			
			
			graphFlip = new CardLayout();
			graphPanel = new JPanel(graphFlip);
			graphPanel.add(pdfChartPanel, "PDF");
			
			if(doCDF)
				graphPanel.add(cdfChartPanel, "CDF");		
			
	
			//	 Create the results panel
			resultsPanel.removeAll(); // clear if previously used
			resultsPanel.setLayout(new BorderLayout());
			resultsPanel.add(graphPanel, BorderLayout.CENTER);
			
			// Create button panel then add
			JPanel buttons = new JPanel();
			
			if (doCDF)
			{
				switchViewBtn = new JButton("Show CDF");
				switchViewBtn.addActionListener(switchView);
				switchViewBtn.setMnemonic(KeyEvent.VK_V);
				
				buttons.add(switchViewBtn);
			}
			
			JButton saveImageBtn = new JButton("Save Graph");
			saveImageBtn.addActionListener(pngListener);
			saveImageBtn.setMnemonic(KeyEvent.VK_S);
			
			JButton saveCordBtn = new JButton("Save Points");
			saveCordBtn.addActionListener(cvsListener);
			saveCordBtn.setMnemonic(KeyEvent.VK_C);		
			
			buttons.add(saveImageBtn);
			buttons.add(saveCordBtn);		
			
			resultsPanel.add(buttons, BorderLayout.PAGE_END);
		}
		
		// If error occurs on the server then the results will be the error message 
		catch(Exception exp)
		{
			HTMLPane errorText = new HTMLPane("Error calculating results");
			errorText.setText(results + exp);
		
			resultsPanel.removeAll(); // clear if previously used
			resultsPanel.setLayout(new BorderLayout());
			resultsPanel.add(errorText, BorderLayout.CENTER);			
		}
	}
	
	
	ActionListener switchView = new ActionListener()
	{
		public void actionPerformed(ActionEvent eve)
		{
			if (currentlyPDF)
			{
				graphFlip.show(graphPanel, "CDF");
				switchViewBtn.setText("Show PDF");
			}
			else
			{
				graphFlip.show(graphPanel, "PDF");
				switchViewBtn.setText("Show CDF");				
			}
			
			currentlyPDF = !currentlyPDF; // flip bool
		}
	};
	
	
	
	ActionListener pngListener = new ActionListener()
	{
		public void actionPerformed(ActionEvent eve) {
			
			RenderedImage graphImage;
			
			if (currentlyPDF)
				graphImage = pdfGraph.createBufferedImage(800, 600);
			else
				graphImage = cdfGraph.createBufferedImage(800, 600);
			
			
			File saveFile;
			JFileChooser fc = new JFileChooser();
			int returnVal = fc.showSaveDialog(resultsPanel);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			try {
				ImageIO.write(graphImage, "png", saveFile);
			}
			catch (IOException e) {
				e.printStackTrace();
			}
		}
	};
	


	private ActionListener cvsListener = new ActionListener() {
	  	public void actionPerformed(ActionEvent arg0) {
	  		XYDataset graphData; 
	  		
	  		if(currentlyPDF)
	  			graphData = pdfGraph.getXYPlot().getDataset();
	  		else
	  			graphData = cdfGraph.getXYPlot().getDataset();
	  			
	  		int size = graphData.getItemCount(0);
	  		
	  		FileWriter fw = null;
	  		StringBuffer content = new StringBuffer();
	  		
	  		File saveFile;
		
			JFileChooser fc = new JFileChooser();			
			
			int returnVal = fc.showSaveDialog(resultsPanel);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			
			try {
				fw = new FileWriter(saveFile);
			}
			catch (IOException e) {
				e.printStackTrace();
			}
			for(int i = 0; i < size; i++) {
				content.append(graphData.getXValue(0, i));
				content.append(",");
				content.append(graphData.getYValue(0, i));
				content.append(",\n");				
			}
	  		String content1 = content.toString();
	  		
	  		try {
		  		fw.write(content1);
		  		fw.close();
	  		}
	  		catch (Exception e) {
	  			e.printStackTrace();
	  		}
	  	}
	  };
}
=====================================================================
Found a 208 line (909 tokens) duplication in the following files: 
Starting at line 283 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java
Starting at line 223 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

	    }

	
	  };
	  
	  
	  /**
	   * This ActionListener responds to the buttons within the
	   * state group selection panel    
	   * i.e. the Add, Remove, Edit buttons
	   */
	  ActionListener stateButtonClick = new ActionListener()
	  {		  
		  public void actionPerformed(ActionEvent event)
		  {
			  if (event.getSource() == addBtn)
			  {
				  StateEditor addState = new StateEditor();
				  addState.setParent(Passage.this);
				  addState.addState(pnmlData);
			  }
			  
			  else if (event.getSource() == removeBtn)
			  {
				  int startSelected[] = startStatesList.getSelectedIndices();
				  int endSelected[] = endStatesList.getSelectedIndices();
				  
				  int maxSize = startSelected.length + endSelected.length;
				  int[] removeList = new int [maxSize];
				  
				  // These loops merges the two sets of selected indices, removing duplicates
				  int i=0,j=0,k=0;
				  for(i =0; i< startSelected.length;i++)
				  {
					  while(j<endSelected.length && endSelected[j]<startSelected[i])
						  removeList[k++] = endSelected[j++];
					  
					  if(j<endSelected.length && endSelected[j] == startSelected[i])
						  j++;
						  
					  removeList[k++] = startSelected[i];
				  }				  
				  while(j<endSelected.length)
					  removeList[k++] = endSelected[j++];
				  
				  
				  // Remove the state groups
				  for(i=0; i<k; i++)
					  pnmlData.removeStateGroup(stateGroupData[ removeList[i] ]);
				  
				  // Update local array and UI  
				  updateStateLists(); 				 					
			  }
			  
			  else if (event.getSource() == editBtn)
			  {
				 int selectedState = startStatesList.getSelectedIndex();
				 
				 // If the state is not selected from the source states, retrieve from endStatesList 
				 if (selectedState == -1)
					 selectedState = endStatesList.getSelectedIndex();
				 
				 
				 if (selectedState != -1)
				 {
					 StateEditor editState = new StateEditor();
					 editState.setParent(Passage.this);					 
					 editState.editState(pnmlData, stateGroupData[selectedState]);
				 }
				
			  }
		  }
	  
	  };

	 
	
	  // Panel for Source and Destination state groups display and editing
	  private JPanel getStatesPanel()
	  {
		    JPanel statesPanel = new JPanel();
		    statesPanel.setBorder((new TitledBorder(new EtchedBorder(),"Source / Destination States")) );
		    statesPanel.setLayout(new BoxLayout(statesPanel, BoxLayout.PAGE_AXIS));
			
		    
		    // Create a panel for the labels
			JPanel labelPanel = new JPanel();
			labelPanel.setLayout(new GridLayout(1,2));
			labelPanel.add(new JLabel("Source States"));
			labelPanel.add(new JLabel("Destination States"));	
			labelPanel.setMaximumSize(new Dimension(Integer.MAX_VALUE,labelPanel.getPreferredSize().height));

						
		    startStatesList = new JList();
			endStatesList = new JList();
			populateLists();
			
			
			// Set the lists' alignment and selection properties
			startStatesList.setLayoutOrientation(JList.VERTICAL);
			startStatesList.setSelectionModel(new ToggleSelectionModel());
			startStatesList.setVisibleRowCount(-1);
			
			endStatesList.setLayoutOrientation(JList.VERTICAL);
			endStatesList.setSelectionModel(new ToggleSelectionModel());
			endStatesList.setVisibleRowCount(-1);
						
			// Add lists to scroller panes to allow scrolling of long lists
			JScrollPane startListScroller = new JScrollPane(startStatesList);
			JScrollPane endListScroller = new JScrollPane(endStatesList);
			
			// Set prefered UI size - this is changed by resizing the window
			startListScroller.setPreferredSize(new Dimension(300, 200));
			endListScroller.setPreferredSize(new Dimension(300, 200));
		
			
			// Create a panel to group the two lists
			JPanel stateListsPanel = new JPanel();
			stateListsPanel.setLayout(new GridLayout(1,2));
			stateListsPanel.add(startListScroller);
			stateListsPanel.add(endListScroller);
			
		
			// Create buttons
			addBtn = new JButton("Add State");
			addBtn.setMnemonic(KeyEvent.VK_A);
			addBtn.addActionListener(stateButtonClick);
			
			removeBtn = new JButton ("Remove State");
			removeBtn.setMnemonic(KeyEvent.VK_R);
			removeBtn.addActionListener(stateButtonClick);
			
			editBtn = new JButton ("Edit State");
			editBtn.setMnemonic(KeyEvent.VK_E);
			editBtn.addActionListener(stateButtonClick);
			
			JPanel buttonPanel = new JPanel();
			buttonPanel.add(addBtn);
			buttonPanel.add(removeBtn);
			buttonPanel.add(editBtn);
			buttonPanel.setMaximumSize(new Dimension(Integer.MAX_VALUE, buttonPanel.getPreferredSize().height ));

			
			// Add components to panel
			statesPanel.add(labelPanel);
			statesPanel.add(stateListsPanel );
			statesPanel.add(buttonPanel);
		
			
			return statesPanel;
	  }	

	  // This method loads the names of the state groups and adds them to the source / destination JLists
	  private void populateLists()
	  {
		  // Load the name of the state groups
		  String[] stateGrpNames = stateNames(stateGroupData);
		  
		  startStatesList.setListData(stateGrpNames);
		  endStatesList.setListData(stateGrpNames);
	  }
	  
	  
	private String[] stateNames(StateGroup[] states)
	{
		int size = states.length;
		String[] names = new String[size];
		
		for (int i=0; i<size; i++)
			names[i] = states[i].getName();
		
		return names;
		
	}
	
	void updateStateLists()
	{
		// refresh state group array
		stateGroupData = pnmlData.getStateGroups();
		
		// refresh the list of state group names
		populateLists();
	}


	
	// This method creates the panel for entering the required start and end time along with the step
	private JPanel getAnalysisPanel()
	{
		JPanel timePanel = new JPanel();
		
		timePanel.setBorder((new TitledBorder(new EtchedBorder(),"Analysis Settings")) );
		timePanel.setLayout(new GridLayout(2,2));
		
		JPanel startEndTime = new JPanel(new GridLayout(2,2));
		
		startEndTime.add(new JLabel("Start Time:") );
		startTime = new JTextField(4);
		startEndTime.add(startTime);
		
		startEndTime.add(new JLabel("End Time:") );
		endTime = new JTextField(4);
		startEndTime.add(endTime);
		
		startEndTime.setMaximumSize(new Dimension(Integer.MAX_VALUE, startEndTime.getPreferredSize().height));
		
		// Create time / method panel holder
		JPanel timeMethodPanel = new JPanel(new GridLayout(2,2));
=====================================================================
Found a 203 line (752 tokens) duplication in the following files: 
Starting at line 65 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateEditor.java
Starting at line 57 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/StateEditor.java

	public void addState(DataLayer pnmlData)
	{
		appModel = pnmlData;
		activeStateGroup = new StateGroup(pnmlData);
		newStateGroup = true;
		init();
	}
	
	public void editState(DataLayer pnmlData, StateGroup editStateGroup)
	{
		appModel = pnmlData;
		activeStateGroup = editStateGroup;
		init();
	}
	
	public void setParent(Passage parentRef)
	{
		parent = parentRef;
	}
	

	private void init()
	{			
		changeBuffer = new ArrayList<StateElement>();
		
		stateDialog = new JDialog(CreateGui.getApp(),"State Editor",true);
		
		Container stateContainer = stateDialog.getContentPane();

		
		JPanel stateViewPanel = new JPanel();
		
		
		stateViewPanel.setBorder((new TitledBorder(new EtchedBorder(),"State Editor")) );
		stateViewPanel.setLayout(new BorderLayout());
		
		
		// Create a panel for the state's title to be entered
		JPanel stateNamePanel = new JPanel();

		JLabel stateNameLabel = new JLabel("Title:");
		stateNameTextField= new JTextField(20);
		stateNameTextField.setText(activeStateGroup.getName());
		
		stateNamePanel.add(stateNameLabel);
		stateNamePanel.add(stateNameTextField);
		
		// Save buttons
		saveStateGroupBtn = new JButton("Save State Group");
		saveStateGroupBtn.addActionListener(saveState);
			
		cancelBtn = new JButton("Cancel");
		cancelBtn.addActionListener(saveState);		
		
		JPanel saveButtonPanel = new JPanel();
		saveButtonPanel.add(saveStateGroupBtn);
		saveButtonPanel.add(cancelBtn);
		
		// Create the top panel
		JPanel topPanel = new JPanel();
		topPanel.add(stateNamePanel);
		topPanel.add(saveButtonPanel);
		
		
		//	Main state editor
		viewer = new StateViewer();
		viewer.setParent(this);
		viewer.drawPetriNet(appModel, activeStateGroup);
		
		
		JScrollPane viewPanel = new JScrollPane(viewer);
		viewPanel.setBorder((new TitledBorder(new EtchedBorder(),"Click on individual places to set up conditions that uniquely identify the state")) );
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		int viewPanelPreferredWidth = screenSize.width*60/100;
		int viewPanelPreferredHeight = screenSize.height*60/100;
		Dimension viewPanelPreferredSize = new Dimension(viewPanelPreferredWidth, viewPanelPreferredHeight);
		viewPanel.setPreferredSize(viewPanelPreferredSize);
		

		
		// Create auto state group button panel
		JPanel autoConfigPanel = new JPanel();
		autoConfigPanel.setBorder((new TitledBorder(new EtchedBorder(),"Automatic Configurations")));
		
		// Auto configuration buttons
		initialStateBtn = new JButton("Initial Marking");		
		allZeroBtn = new JButton("All Equal Zero");
		clearStatesBtn = new JButton("Clear All");
		
		// Add action listeners
		initialStateBtn.addActionListener(autoSetState);
		allZeroBtn.addActionListener(autoSetState);
		clearStatesBtn.addActionListener(autoSetState);
		
		// Add to panel
		autoConfigPanel.add(initialStateBtn);
		autoConfigPanel.add(allZeroBtn);
		autoConfigPanel.add(clearStatesBtn);
		
		
		// Add the panels to the main stateView Panel
		stateViewPanel.add(topPanel, BorderLayout.PAGE_START);
		stateViewPanel.add(viewPanel, BorderLayout.CENTER);
		stateViewPanel.add(autoConfigPanel, BorderLayout.PAGE_END);
		
		
		stateContainer.add(stateViewPanel);
		stateDialog.pack();
		stateDialog.setLocationRelativeTo(null);
		
		stateDialog.setVisible(true);		
	}
	
	// This method adds to the changes buffer, which is committed when the state group is saved
	public void addStateElement(String placeA, String operator, String placeB)
	{
		// Convert equals to double equals for comparison
		if (operator.equals("=" ))
			operator = "==";
		
		// Convert from unicode character to ASCII
		else if (operator.equals("\u2264" ) )
			operator = "<=";
		else if (operator.equals("\u2265"))
			operator = ">=";
				
		
		changeBuffer.add(new StateElement(placeA, operator, placeB));
	}
	
	// This method applies the changes that occurs in the change buffer
	private void applyChanges()
	{
		// Set the title
		activeStateGroup.setName(stateNameTextField.getText());
		
		// Apply each of the changes made to the state group 
		for(StateElement currElement : changeBuffer)
			activeStateGroup.addState(currElement);
		
		
		// If a new state group, add it to the state group arrayList in DataLayer
		if (newStateGroup)
		{
			appModel.addStateGroup(activeStateGroup);

		}	
		
		// Inform CreateGui that the model has been modified
		CreateGui.getView().netChanged = true;
	}
	
	ActionListener saveState = new ActionListener()
	{
		 public void actionPerformed(ActionEvent event)
		 {
			 if (event.getSource() == saveStateGroupBtn)
			 {
				 if (stateNameTextField.getText().equals(""))
					 JOptionPane.showMessageDialog(null, "Please enter a title for this state");
				 
				 else
				 {
					applyChanges();

					if (parent != null)
						parent.updateStateLists();

					closeWindow();
				 }
				 			 
			 }
			 
			 else if (event.getSource() == cancelBtn)
			 	 closeWindow();			 
		 }
		 
		 private void closeWindow()
		 {
			 stateDialog.setVisible(false);
			 stateDialog.dispose();		 
		 }
	};
	
	
	ActionListener autoSetState = new ActionListener()
	{
		 public void actionPerformed(ActionEvent event)
		 {
			 if (event.getSource() == initialStateBtn)
			 	 viewer.setInitialCond();
			 
			 else if (event.getSource() == allZeroBtn)
				 viewer.setEqualZeroCond();
			 
			 else if (event.getSource() == clearStatesBtn)
			 	 viewer.clearAllCond();
			 	
		 }
	};
	
		 
}
=====================================================================
Found a 192 line (701 tokens) duplication in the following files: 
Starting at line 72 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateEditor.java
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateEditor.java

	public void setParent(Passage parentRef)
	{
		parent = parentRef;
	}
	

	private void init()
	{			
		changeBuffer = new ArrayList<StateElement>();
		
		stateDialog = new JDialog(CreateGui.getApp(),"State Editor",true);
		
		Container stateContainer = stateDialog.getContentPane();

		
		JPanel stateViewPanel = new JPanel();
		
		
		stateViewPanel.setBorder((new TitledBorder(new EtchedBorder(),"State Editor")) );
		stateViewPanel.setLayout(new BorderLayout());
		
		
		// Create a panel for the state's title to be entered
		JPanel stateNamePanel = new JPanel();

		JLabel stateNameLabel = new JLabel("Title:");
		stateNameTextField= new JTextField(20);
		stateNameTextField.setText(activeStateGroup.getName());
		
		stateNamePanel.add(stateNameLabel);
		stateNamePanel.add(stateNameTextField);
		
		// Save buttons
		saveStateGroupBtn = new JButton("Save State Group");
		saveStateGroupBtn.addActionListener(saveState);
			
		cancelBtn = new JButton("Cancel");
		cancelBtn.addActionListener(saveState);		
		
		JPanel saveButtonPanel = new JPanel();
		saveButtonPanel.add(saveStateGroupBtn);
		saveButtonPanel.add(cancelBtn);
		
		// Create the top panel
		JPanel topPanel = new JPanel();
		topPanel.add(stateNamePanel);
		topPanel.add(saveButtonPanel);
		
		
		
		
		//	Main state editor
		viewer = new StateViewer();
		viewer.setParent(this);
		viewer.drawPetriNet(appModel, activeStateGroup);
		
		
		JScrollPane viewPanel = new JScrollPane(viewer);
		viewPanel.setBorder((new TitledBorder(new EtchedBorder(),"Click on individual places to set up conditions that uniquely identify the state")) );
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		int viewPanelPreferredWidth = screenSize.width*60/100;
		int viewPanelPreferredHeight = screenSize.height*60/100;
		Dimension viewPanelPreferredSize = new Dimension(viewPanelPreferredWidth, viewPanelPreferredHeight);
		viewPanel.setPreferredSize(viewPanelPreferredSize);
		

		
		// Create auto state group button panel
		JPanel autoConfigPanel = new JPanel();
		autoConfigPanel.setBorder((new TitledBorder(new EtchedBorder(),"Automatic Configurations")));
		
		// Auto configuration buttons
		initialStateBtn = new JButton("Initial Marking");		
		allZeroBtn = new JButton("All Equal Zero");
		clearStatesBtn = new JButton("Clear All");
		
		// Add action listeners
		initialStateBtn.addActionListener(autoSetState);
		allZeroBtn.addActionListener(autoSetState);
		clearStatesBtn.addActionListener(autoSetState);
		
		// Add to panel
		autoConfigPanel.add(initialStateBtn);
		autoConfigPanel.add(allZeroBtn);
		autoConfigPanel.add(clearStatesBtn);
		
		
		// Add the panels to the main stateView Panel
		stateViewPanel.add(topPanel, BorderLayout.PAGE_START);
		stateViewPanel.add(viewPanel, BorderLayout.CENTER);
		stateViewPanel.add(autoConfigPanel, BorderLayout.PAGE_END);
		
		
		stateContainer.add(stateViewPanel);
		stateDialog.pack();
		stateDialog.setLocationRelativeTo(null);
		
		stateDialog.setVisible(true);		
	}
	
	// This method adds to the changes buffer, which is committed when the state group is saved
	public void addStateElement(String placeA, String operator, String placeB)
	{
		// Convert equals to double equals for comparison
		if (operator.equals("=" ))
			operator = "==";
		
		// Convert from unicode character to ASCII
		else if (operator.equals("\u2264" ) )
			operator = "<=";
		else if (operator.equals("\u2265"))
			operator = ">=";
			
		
		changeBuffer.add(new StateElement(placeA, operator, placeB));
	}
	
	// This method applies the changes that occurs in the change buffer
	private void applyChanges()
	{
		// Set the title
		activeStateGroup.setName(stateNameTextField.getText());
		
		// Apply each of the changes made to the state group 
		for(StateElement currElement : changeBuffer)
			activeStateGroup.addState(currElement);
		
		
		// If a new state group, add it to the state group arrayList in DataLayer
		if (newStateGroup)
		{
			appModel.addStateGroup(activeStateGroup);

		}	
		
		// Inform CreateGui that the model has been modified
		CreateGui.getView().netChanged = true;
	}
	
	
	ActionListener saveState = new ActionListener()
	{
		 public void actionPerformed(ActionEvent event)
		 {
			 if (event.getSource() == saveStateGroupBtn)
			 {
				 if (stateNameTextField.getText().equals(""))
					 JOptionPane.showMessageDialog(null, "Please enter a title for this state");
				 
				 else
				 {
					applyChanges();

					if (parent != null)
						parent.updateStateLists();

					closeWindow();
				 }
				 			 
			 }
			 
			 else if (event.getSource() == cancelBtn)
			 	 closeWindow();			 
		 }
		 
	
		 private void closeWindow()
		 {
			 stateDialog.setVisible(false);
			 stateDialog.dispose();		 
		 }
	};
	
	
	ActionListener autoSetState = new ActionListener()
	{
		 public void actionPerformed(ActionEvent event)
		 {
			 if (event.getSource() == initialStateBtn)
			 	 viewer.setInitialCond();
			 
			 else if (event.getSource() == allZeroBtn)
				 viewer.setEqualZeroCond();
			 
			 else if (event.getSource() == clearStatesBtn)
			 	 viewer.clearAllCond();
			 	
		 }
	};
	
		 
}
=====================================================================
Found a 113 line (669 tokens) duplication in the following files: 
Starting at line 408 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 243 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

		tooltip = PassageTimeDensityNode.getTooltip();
		this.actions.put("Draw PassageTimeDensity", new TypeAction(	"PassageTimeDensity",
																	QueryConstants.PASSAGETIMEDENSITY_NODE,
																	tooltip,
																	""));

		tooltip = DistributionNode.getTooltip();
		this.actions.put("Draw Distribution", new TypeAction(	"Distribution",
																QueryConstants.DISTRIBUTION_NODE,
																tooltip,
																""));

		tooltip = ConvolutionNode.getTooltip();
		this.actions.put("Draw Convolution", new TypeAction("Convolution",
															QueryConstants.CONVOLUTION_NODE,
															tooltip,
															""));

		tooltip = ProbInIntervalNode.getTooltip();
		this.actions.put("Draw ProbInInterval", new TypeAction(	"ProbInInterval",
																QueryConstants.PROBININTERVAL_NODE,
																tooltip,
																""));

		tooltip = ProbInStatesNode.getTooltip();
		this.actions.put("Draw ProbInStates", new TypeAction(	"ProbInStates",
																QueryConstants.PROBINSTATES_NODE,
																tooltip,
																""));

		tooltip = MomentNode.getTooltip();
		this.actions.put("Draw Moment", new TypeAction("Moment", QueryConstants.MOMENT_NODE, tooltip, ""));

		tooltip = PercentileNode.getTooltip();
		this.actions.put("Draw Percentile", new TypeAction(	"Percentile",
															QueryConstants.PERCENTILE_NODE,
															tooltip,
															""));

		tooltip = FiringRateNode.getTooltip();
		this.actions.put("Draw FiringRate", new TypeAction(	"FiringRate",
															QueryConstants.FIRINGRATE_NODE,
															tooltip,
															""));

		tooltip = SteadyStateProbNode.getTooltip();
		this.actions.put("Draw SteadyStateProb", new TypeAction("SteadyStateProb",
																QueryConstants.STEADYSTATEPROB_NODE,
																tooltip,
																""));

		tooltip = SteadyStateStatesNode.getTooltip();
		this.actions.put("Draw SteadyStateStates", new TypeAction(	"SteadyStateStates",
																	QueryConstants.STEADYSTATESTATES_NODE,
																	tooltip,
																	""));

		tooltip = StatesAtTimeNode.getTooltip();
		this.actions.put("Draw StatesAtTime", new TypeAction(	"StatesAtTime",
																QueryConstants.STATESATTIME_NODE,
																tooltip,
																""));

		tooltip = InIntervalNode.getTooltip();
		this.actions.put("Draw InInterval", new TypeAction(	"InInterval",
															QueryConstants.ININTERVAL_NODE,
															tooltip,
															""));

		tooltip = SubsetNode.getTooltip();
		this.actions.put("Draw Subset", new TypeAction("Subset", QueryConstants.SUBSET_NODE, tooltip, ""));

		tooltip = DisconNode.getTooltip();
		this.actions.put("Draw Discon", new TypeAction("Discon", QueryConstants.DISCON_NODE, tooltip, ""));

		tooltip = NegationNode.getTooltip();
		this.actions.put("Draw Negation", new TypeAction(	"Negation",
															QueryConstants.NEGATION_NODE,
															tooltip,
															""));

		tooltip = ArithCompNode.getTooltip();
		this.actions.put("Draw ArithComp", new TypeAction(	"ArithComp",
															QueryConstants.ARITHCOMP_NODE,
															tooltip,
															""));

		tooltip = ArithOpNode.getTooltip();
		this.actions.put("Draw ArithOp", new TypeAction("ArithOp", QueryConstants.ARITHOP_NODE, tooltip, ""));

		tooltip = RangeNode.getTooltip();
		this.actions.put("Draw Range", new TypeAction("Range", QueryConstants.RANGE_NODE, tooltip, ""));

		// value nodes
		tooltip = StatesNode.getTooltip();
		this.actions.put("Draw States", new TypeAction("States", QueryConstants.STATES_NODE, tooltip, ""));

		tooltip = ActionsNode.getTooltip();
		this.actions.put("Draw Actions", new TypeAction("Actions", QueryConstants.ACTIONS_NODE, tooltip, ""));

		tooltip = NumNode.getTooltip();
		this.actions.put("Draw Num", new TypeAction("Num", QueryConstants.NUM_NODE, tooltip, ""));

		tooltip = BoolNode.getTooltip();
		this.actions.put("Draw Bool", new TypeAction("Bool", QueryConstants.BOOL_NODE, tooltip, ""));

		tooltip = StateFunctionNode.getTooltip();
		this.actions.put("Draw StateFunction", new TypeAction(	"StateFunction",
																QueryConstants.STATEFUNCTION_NODE,
																tooltip,
																""));

		tooltip = MacroNode.getTooltip();
=====================================================================
Found a 201 line (629 tokens) duplication in the following files: 
Starting at line 30 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 30 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ConditionPlaceHandler.java

public class ConditionPlaceHandler extends MouseAdapter
{
	protected JDialog parent = null; 
	protected ConditionPlace place = null;
	
	protected JDialog conditionEdit;
	JComboBox operaterCombo;
	JButton okButton, cancelButton;
	JTextField conditionValue;
	
	public ConditionPlaceHandler(JDialog parentDialog, ConditionPlace place)
	{
		parent = parentDialog;
		this.place = place;
	}
	
		
	public void showDialog()
	{		
		// Create dialog
		conditionEdit = new JDialog(parent, "Add condition to " + place.getName(), true);
		
		   
		// Set layout
		Container contentPane= conditionEdit.getContentPane();
		contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
		
			
		
		// Panel for entry of place condition for the state
		JPanel mainPanel = new JPanel();
		
		// combo box for operator
		operaterCombo = new JComboBox();
		
		// Add standard operators to combo-box
		operaterCombo.addItem("=");
		operaterCombo.addItem("<");
		operaterCombo.addItem("\u2264"); // <= character
		operaterCombo.addItem(">");
		operaterCombo.addItem("\u2265");		// >= character
		
		conditionValue  = new JTextField(5);
				
		mainPanel.add(new JLabel(place.getName()));
		mainPanel.add(operaterCombo);
		mainPanel.add(conditionValue);
		
		
		// Panel for buttons
		JPanel buttonPanel = new JPanel();
		
		okButton = new JButton("OK");
		conditionEdit.getRootPane().setDefaultButton(okButton); // Pressing 'Enter' key will activate the button
		okButton.setMnemonic(KeyEvent.VK_O);
		okButton.addActionListener(BtnClick);
		
		cancelButton = new JButton("Cancel");
		cancelButton.setMnemonic(KeyEvent.VK_C);
		cancelButton.addActionListener(BtnClick);

		
		buttonPanel.add(okButton);
		buttonPanel.add(cancelButton);
		
		
		// Build UI
		contentPane.add(new JLabel("Please enter the condition for this place:"));
		contentPane.add(mainPanel);
		contentPane.add(buttonPanel);
		
		
		// Pack, Centre, Display
		conditionEdit.pack();
		conditionEdit.setResizable(false);
		conditionEdit.setLocationRelativeTo(null);
		conditionEdit.setVisible(true);
		
	}
	
	
	/**
	  * This action listener responds to the buttons used in
	  * the "Add Condition" pop up dialog
	  * i.e the Cancel / OK buttons 
	  */
	 
	 ActionListener BtnClick = new ActionListener()
	 {
		 public void actionPerformed(ActionEvent event)
		 {
			 if (event.getSource() == cancelButton)
			 {
				 closeWindow();
			 }
			 
			 else if (event.getSource() == okButton)
			 {
				 String operatorStr, targetStr;
				 
				 operatorStr = (String) operaterCombo.getSelectedItem();
				 targetStr = conditionValue.getText();
				 
				 
				 
				 // Check that the input is valid, then check the new condition
				 if (inputValid(targetStr))
				 {
					 try
					 {						 
						 // Update the change buffer					 
						 ((StateEditor)parent).addStateElement(place.getId(), operatorStr, targetStr);
						
						 // Update the UI
						 place.setCondition(operatorStr, targetStr);
						
						 closeWindow();				 
					 }
					 catch (Exception exp) {
						 System.out.println("Error creating state: " + exp);
					 }	
				 }
				 else {
					 JOptionPane.showMessageDialog(null, "Please specify the number of tokens for the condition (under 1,000).",
								"Warning", JOptionPane.ERROR_MESSAGE);
					 }
				 
			 }
		 }
	 };
	
	private void closeWindow()
	{
		conditionEdit.setVisible(false);
		conditionEdit.dispose();		 
	}
	
	 public void mousePressed(MouseEvent e)
	 {
		 // left click will display the add condition dialog
		 if (e.getButton() == MouseEvent.BUTTON1)
			 showDialog();
		 
		 else
		 {
			 JPopupMenu popup = getPopup(e);	
			 popup.show(e.getComponent(), e.getX(), e.getY());
		 }
	 }
	 
	 // Check that the number is a valid integer less than 10000
	 private boolean inputValid(String inputString)
	 {
		 try
		 {
			 int checkInput = Integer.parseInt(inputString);
			 if (checkInput < 1000)			 
				 return true;
			 else
				 return false;
		 }
		 catch(Exception exp)
		 {
			 return false;
		 }
		 
		
	 }
	 
	  /** Creates the popup menu that the user will see when they right click on a component */
	  public JPopupMenu getPopup(MouseEvent e) {

	    JPopupMenu popup = new JPopupMenu();

	    JMenuItem menuItem = new JMenuItem("Remove");
	    
	    // Add action lister for the remove pop up item
	    menuItem.addActionListener ( new ActionListener () {
			public void actionPerformed(ActionEvent e)
			{
				remove(); 
			}

		});


	    popup.add(menuItem);

	    return popup;
	  }
	  
	  // Removes condition from currently selected place
	  private void remove()
	  {
		// Update the change buffer					 
		((StateEditor)parent).addStateElement(place.getId(), "", "");
			
		// Update the UI
		 place.removeCondition();
	  }
}
=====================================================================
Found a 165 line (621 tokens) duplication in the following files: 
Starting at line 31 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java
Starting at line 31 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/StateViewer.java

public class StateViewer extends JLayeredPane implements Constants
{
	private static final long serialVersionUID = 1L;
	
	DataLayer stateDataLayer;
	StateGroup activeStateGroup;
	ArrayList<ConditionPlace> condPlaces;
	JDialog parent;

	public StateViewer()
	{
			setLayout(null);
			setOpaque(true);
			setDoubleBuffered(true);
			setAutoscrolls(true);
			setBackground(ELEMENT_FILL_COLOUR);			
			setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));				
	}
	
	public void setParent(JDialog parent)
	{
		this.parent = parent;	
	}
	
	
	public void drawPetriNet(DataLayer pnmldata, StateGroup stateGroupData)
	{

		// Create a clone of the DataLayer object as only one GUI can display an instance of a PetriNetObject at a time
		// and it is currently being displayed by the primary window (GuiView)
		stateDataLayer = pnmldata.clone();
		activeStateGroup = stateGroupData;
		condPlaces = new ArrayList<ConditionPlace>();
		
		// Iterate through the petri-net objects adding them to the GUI
		Iterator PNObjects = stateDataLayer.getPetriNetObjects();

		while(PNObjects.hasNext())
			insertUI( PNObjects.next() );			
		
		updatePreferredSize();		
	}
	
	public void insertUI(Object diffObj)
	{
		if (diffObj!=null  &&  diffObj instanceof PetriNetObject)
			add((PetriNetObject)diffObj);			
		
		repaint();
	}
	
	public void updatePreferredSize() {
		// iterate over net objects and setPreferredSize() accordingly
		Component[] components=getComponents();
		Dimension d=new Dimension(0,0);
		int x,y;
		
		for(int i=0;i<components.length;i++)
		{
			Rectangle r=components[i].getBounds();
			x=r.x+r.width+100;
			y=r.y+r.height+100;
			if (x>d.width)  d.width =x;
			if (y>d.height) d.height=y;
		}
		setPreferredSize(d);
	}

	
	public void add(PetriNetObject currentObj)
	{
		if (currentObj instanceof Place)
		{
			ConditionPlace place = new ConditionPlace((Place)currentObj);
			
			// Set the state group condition associated with the place
			StateElement placeCondition = activeStateGroup.getCondition(place.getId());
			if (placeCondition != null)
				place.setCondition(placeCondition.getOperator(), placeCondition.getPlaceB());
					

			ConditionPlaceHandler handler = new ConditionPlaceHandler(parent,place);
			place.addMouseListener(handler);
			place.deselect();
					
			super.add(place);
			
			setLayer(place, DEFAULT_LAYER.intValue() + PLACE_TRANSITION_LAYER_OFFSET);
			place.addedToGui(); // this will add the place labels
			
			condPlaces.add(place);
		}

		// We ignore the Annotation nodes - these nodes will need further development
		else if (currentObj instanceof AnnotationNote);
			
		else
		{
			currentObj.deselect();
			super.add(currentObj);
			
	
			if (currentObj instanceof ArcPathPoint)
				setLayer(currentObj, DEFAULT_LAYER.intValue() + ARC_POINT_LAYER_OFFSET);
			
			else if (currentObj instanceof Arc)
				setLayer(currentObj, DEFAULT_LAYER.intValue() + ARC_LAYER_OFFSET);	
			
			else if (currentObj instanceof Transition)
				setLayer(currentObj, DEFAULT_LAYER.intValue() + PLACE_TRANSITION_LAYER_OFFSET);
				
			else if (currentObj instanceof AnnotationNote)
				setLayer(currentObj, DEFAULT_LAYER.intValue() + ANNOTATION_LAYER_OFFSET);	
		}
	}
	
	
	/**
	 * This method sets the condition on all places to be equal zero
	 */
	public void setEqualZeroCond()
	{
		for(ConditionPlace curPlace : condPlaces)
		{
			// Update the 'change buffer' in PassageState
			((StateEditor)parent).addStateElement(curPlace.getId(), "=", "0");
			
			// Update the UI
			curPlace.setCondition("=", "0");
		}
	}
	

	/**
	 * This method clears the marking on all states
	 */
	public void clearAllCond()
	{
		for(ConditionPlace curPlace : condPlaces)
		{
			// Update the 'change buffer' with a blank condition; this will remove the condition
			((StateEditor)parent).addStateElement(curPlace.getId(), "", "");
			
			// Update the UI
			curPlace.removeCondition();
		}
	}
	
	/**
	 * This method sets the condition on each place to be equal its initial marking
	 */
	public void setInitialCond()
	{
		for(ConditionPlace curPlace : condPlaces)
		{
			String currentMarking = Integer.toString(curPlace.getCurrentMarking() );
			((StateEditor)parent).addStateElement(curPlace.getId(), "=", currentMarking);
			
			// Update the UI
			curPlace.setCondition("=", currentMarking);			
		}
	}	
	

}
=====================================================================
Found a 27 line (551 tokens) duplication in the following files: 
Starting at line 568 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 504 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

		drawButtons.add(addIntelligentButton(this.toolBar1, (Action) this.actions.get("Draw Sequential")));
		drawButtons.add(addIntelligentButton(	this.toolBar1,
												(Action) this.actions.get("Draw PassageTimeDensity")));
		drawButtons.add(addIntelligentButton(this.toolBar1, (Action) this.actions.get("Draw Convolution")));
		drawButtons.add(addIntelligentButton(this.toolBar1, (Action) this.actions.get("Draw Distribution")));
		drawButtons.add(addIntelligentButton(this.toolBar1, (Action) this.actions.get("Draw Percentile")));
		drawButtons.add(addIntelligentButton(this.toolBar1, (Action) this.actions.get("Draw SteadyStateProb")));
		drawButtons.add(addIntelligentButton(	this.toolBar1,
												(Action) this.actions.get("Draw SteadyStateStates")));
		drawButtons.add(addIntelligentButton(this.toolBar1, (Action) this.actions.get("Draw StatesAtTime")));
		drawButtons.add(addIntelligentButton(this.toolBar1, (Action) this.actions.get("Draw ProbInInterval")));
		drawButtons.add(addIntelligentButton(this.toolBar1, (Action) this.actions.get("Draw ProbInStates")));
		drawButtons.add(addIntelligentButton(this.toolBar1, (Action) this.actions.get("Draw Moment")));
		drawButtons.add(addIntelligentButton(this.toolBar1, (Action) this.actions.get("Draw FiringRate")));
		drawButtons.add(addIntelligentButton(this.toolBar2, (Action) this.actions.get("Draw InInterval")));
		drawButtons.add(addIntelligentButton(this.toolBar2, (Action) this.actions.get("Draw Subset")));
		drawButtons.add(addIntelligentButton(this.toolBar2, (Action) this.actions.get("Draw Negation")));
		drawButtons.add(addIntelligentButton(this.toolBar2, (Action) this.actions.get("Draw Discon")));
		drawButtons.add(addIntelligentButton(this.toolBar2, (Action) this.actions.get("Draw ArithComp")));
		drawButtons.add(addIntelligentButton(this.toolBar2, (Action) this.actions.get("Draw ArithOp")));
		drawButtons.add(addIntelligentButton(this.toolBar2, (Action) this.actions.get("Draw Num")));
		drawButtons.add(addIntelligentButton(this.toolBar2, (Action) this.actions.get("Draw Range")));
		drawButtons.add(addIntelligentButton(this.toolBar2, (Action) this.actions.get("Draw Actions")));
		drawButtons.add(addIntelligentButton(this.toolBar2, (Action) this.actions.get("Draw States")));
		drawButtons.add(addIntelligentButton(this.toolBar2, (Action) this.actions.get("Draw StateFunction")));
		drawButtons.add(addIntelligentButton(this.toolBar2, (Action) this.actions.get("Draw Bool")));
		drawButtons.add(addIntelligentButton(this.toolBar2, (Action) this.actions.get("Draw Macro")));
=====================================================================
Found a 154 line (534 tokens) duplication in the following files: 
Starting at line 26 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlace.java
Starting at line 26 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ConditionPlace.java

public class ConditionPlace extends PlaceTransitionObject implements Cloneable
{
	private static final long serialVersionUID = 1L;
	public final static String type = "ConditionalPlace";
	
	public static final int DIAMETER = PLACE_TRANSITION_HEIGHT;
	private static Ellipse2D.Double	place = new Ellipse2D.Double(0, 0, DIAMETER, DIAMETER);


	/** Current Marking */
	private Integer currentMarking = null;
	

	private Color defaultColor = Color.lightGray,
				validColor = Color.green,
				currentColor = defaultColor;
	private String condOperator="", condOperand="";
	


	/**
	 * Create a condition Petri-Net Place from an existing Petri-Net Place
	 */
	public ConditionPlace(Place inputPlace)
	{
		super(inputPlace.getPositionX(), inputPlace.getPositionY(), inputPlace.getId(), inputPlace.getName(), 0, 0 );
		
		currentMarking = new Integer( inputPlace.getCurrentMarking() );
		componentWidth = DIAMETER;
		componentHeight = DIAMETER;				

		setCentre((int)positionX, (int)positionY);
		updateBounds();
	}
	

	/**
	 * Paints the Place component taking into account the number of tokens from the currentMarking
	 * @param g The Graphics object onto which the Place is drawn.
	 */
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		
		Graphics2D g2 = (Graphics2D)g;	
		AffineTransform saveXform = g2.getTransform();
		AffineTransform scaledXform = getZoomController().getTransform();
		Insets insets = getInsets();
		int x = insets.left;
		int y = insets.top;
		
		g2.translate(COMPONENT_DRAW_OFFSET, COMPONENT_DRAW_OFFSET);
		g2.transform(scaledXform);

		g2.setStroke(new BasicStroke(1.0f));	
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

		g2.setColor(currentColor);
		g2.fill(place);

		if (selected && !ignoreSelection)
			g2.setPaint(SELECTION_LINE_COLOUR);
		else
			g2.setPaint(ELEMENT_LINE_COLOUR);
		g2.draw(place);

		
		// Print current condition on place
		g.drawString(condOperator+condOperand,x+5,y+20);
		

		g2.setTransform(saveXform);

	}


	/**
	 * Get current marking
	 * @return Integer value for current marking
	 */
	public int getCurrentMarking() {
		if (currentMarking == null)
			return 0;
		else
			return currentMarking.intValue();
	}

	/** Returns the width bounds we want to use when initially creating the place on the gui
	 * @return Width bounds of Place
	 */
	public int boundsWidth() {
		return WIDTH +1;
	}

	/** Returns the height bounds we want to use when initially creating the place on the gui
	 * @return Height bounds of Place
	 */
	public int boundsHeight() {
		return HEIGHT +1;
	}
	
	/**
	 * Returns the diameter of this Place at the current zoom
	 */
	public int getDiameter(){
		int zoomBy = getZoomController().getPercent();
		return (int)(DIAMETER * zoomBy * 0.01);
	}

	/**
	 * Determines whether the point (x,y) is "in" this component. This method is called
	 * when mouse events occur and only events at points for which this method returns true
	 * will be dispatched to mouse listeners
	 */
	public boolean contains(int x, int y) {
		
		int zoomPercentage = getZoomController().getPercent();
		double unZoomedX=(x-COMPONENT_DRAW_OFFSET)/(zoomPercentage/100.0);
		double unZoomedY=(y-COMPONENT_DRAW_OFFSET)/(zoomPercentage/100.0);
		
		return place.contains((int)unZoomedX, (int)unZoomedY);
	}
	
	
	public PetriNetObject clone() {
		return super.clone();
	}
	
	public void setCondition(String operator, String operand)
	{
		// Convert to unicode character for UI appearance
		if (operator.equals("<=") )
			operator = "\u2264";
		else if (operator.equals(">="))
			operator = "\u2265";
		
		
		condOperator = operator;
		condOperand = operand;
		currentColor = validColor;
		repaint();
	}
	
	public void removeCondition()
	{
		condOperator = "";
		condOperand = "";
		currentColor = defaultColor;
		repaint();
	}


	@Override
	public void updateEndPoint(Arc arc) {}
}
=====================================================================
Found a 135 line (522 tokens) duplication in the following files: 
Starting at line 26 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlace.java
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlace.java

public class ConditionPlace extends PlaceTransitionObject implements Cloneable {
	
	private static final long serialVersionUID = 1L;
	public final static String type = "ConditionalPlace";
	
	public static final int DIAMETER = PLACE_TRANSITION_HEIGHT;
	private static Ellipse2D.Double	place = new Ellipse2D.Double(0, 0, DIAMETER, DIAMETER);

	/** Current Marking */
	private Integer currentMarking = null;
	
	private Color defaultColor = Color.lightGray,
				  validColor = Color.green,
				  currentColor = defaultColor;
	private String condOperator = "", 
	               condOperand = "";
	
	/**
	 * Create a condition Petri-Net Place from an existing Petri-Net Place
	 */
	public ConditionPlace(Place inputPlace) {
		super(inputPlace.getPositionX(), inputPlace.getPositionY(), inputPlace.getId(), inputPlace.getName(), 0, 0 );
		currentMarking = new Integer( inputPlace.getCurrentMarking() );
		componentWidth = DIAMETER;
		componentHeight = DIAMETER;				
		setCentre((int)positionX, (int)positionY);
		updateBounds();
	}
	

	/**
	 * Paints the Place component taking into account the number of tokens from the currentMarking
	 * @param g The Graphics object onto which the Place is drawn.
	 */
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		
		Graphics2D g2 = (Graphics2D)g;	
		AffineTransform saveXform = g2.getTransform();
		AffineTransform scaledXform = getZoomController().getTransform();
		Insets insets = getInsets();
		int x = insets.left;
		int y = insets.top;
		
		g2.translate(COMPONENT_DRAW_OFFSET, COMPONENT_DRAW_OFFSET);
		g2.transform(scaledXform);

		g2.setStroke(new BasicStroke(1.0f));	
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

		g2.setColor(currentColor);
		g2.fill(place);

		if (selected && !ignoreSelection)
			g2.setPaint(SELECTION_LINE_COLOUR);
		else
			g2.setPaint(ELEMENT_LINE_COLOUR);
		g2.draw(place);

		
		// Print current condition on place
		g.drawString(condOperator+condOperand,x+5,y+20);
		g2.setTransform(saveXform);
	}


	/**
	 * Get current marking
	 * @return Integer value for current marking
	 */
	public int getCurrentMarking() {
		if (currentMarking == null)
			return 0;
		else
			return currentMarking.intValue();
	}

	/** Returns the width bounds we want to use when initially creating the place on the gui
	 * @return Width bounds of Place
	 */
	public int boundsWidth() {
		return WIDTH +1;
	}

	/** Returns the height bounds we want to use when initially creating the place on the gui
	 * @return Height bounds of Place
	 */
	public int boundsHeight() {
		return HEIGHT +1;
	}
	
	/**
	 * Returns the diameter of this Place at the current zoom
	 */
	public int getDiameter(){
		int zoomBy = getZoomController().getPercent();
		return (int)(DIAMETER * zoomBy * 0.01);
	}

	/**
	 * Determines whether the point (x,y) is "in" this component. This method is called
	 * when mouse events occur and only events at points for which this method returns true
	 * will be dispatched to mouse listeners
	 */
	public boolean contains(int x, int y) {
		int zoomPercentage = getZoomController().getPercent();
		double unZoomedX=(x-COMPONENT_DRAW_OFFSET)/(zoomPercentage/100.0);
		double unZoomedY=(y-COMPONENT_DRAW_OFFSET)/(zoomPercentage/100.0);
		
		return place.contains((int)unZoomedX, (int)unZoomedY);
	}
	
	public PetriNetObject clone() {
		return super.clone();
	}
	
	public void setCondition(String operator, String operand) {
		// Convert to unicode character for UI appearance
		if (operator.equals("<=") )
			operator = "\u2264";
		else if (operator.equals(">="))
			operator = "\u2265";
		
		condOperator = operator;
		condOperand = operand;
		currentColor = validColor;
		repaint();
	}
	
	public void removeCondition() 	{
		condOperator = "";
		condOperand = "";
		currentColor = defaultColor;
		repaint();
	}
=====================================================================
Found a 127 line (521 tokens) duplication in the following files: 
Starting at line 305 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 347 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java

					 editState.setParent(Passage.this);					 
					 editState.editState(pnmlData, stateGroupData[selectedState]);
				 }
				
			  }
		  }
	  
	  };

	 
	
	  // Panel for Source and Destination state groups display and editing
	  private JPanel getStatesPanel()
	  {
		    JPanel statesPanel = new JPanel();
		    statesPanel.setBorder((new TitledBorder(new EtchedBorder(),"Source / Destination States")) );
		    statesPanel.setLayout(new BoxLayout(statesPanel, BoxLayout.PAGE_AXIS));
			
		    
		    // Create a panel for the labels
			JPanel labelPanel = new JPanel();
			labelPanel.setLayout(new GridLayout(1,2));
			labelPanel.add(new JLabel("Source States"));
			labelPanel.add(new JLabel("Destination States"));	
			labelPanel.setMaximumSize(new Dimension(Integer.MAX_VALUE,labelPanel.getPreferredSize().height));

						
		    startStatesList = new JList();
			endStatesList = new JList();
			populateLists();
			
			
			// Set the lists' alignment and selection properties
			startStatesList.setLayoutOrientation(JList.VERTICAL);
			startStatesList.setSelectionModel(new ToggleSelectionModel());
			startStatesList.setVisibleRowCount(-1);
			
			endStatesList.setLayoutOrientation(JList.VERTICAL);
			endStatesList.setSelectionModel(new ToggleSelectionModel());
			endStatesList.setVisibleRowCount(-1);
						
			// Add lists to scroller panes to allow scrolling of long lists
			JScrollPane startListScroller = new JScrollPane(startStatesList);
			JScrollPane endListScroller = new JScrollPane(endStatesList);
			
			// Set prefered UI size - this is changed by resizing the window
			startListScroller.setPreferredSize(new Dimension(300, 200));
			endListScroller.setPreferredSize(new Dimension(300, 200));
		
			
			// Create a panel to group the two lists
			JPanel stateListsPanel = new JPanel();
			stateListsPanel.setLayout(new GridLayout(1,2));
			stateListsPanel.add(startListScroller);
			stateListsPanel.add(endListScroller);
			
		
			// Create buttons
			addBtn = new JButton("Add State");
			addBtn.setMnemonic(KeyEvent.VK_A);
			addBtn.addActionListener(stateButtonClick);
			
			removeBtn = new JButton ("Remove State");
			removeBtn.setMnemonic(KeyEvent.VK_R);
			removeBtn.addActionListener(stateButtonClick);
			
			editBtn = new JButton ("Edit State");
			editBtn.setMnemonic(KeyEvent.VK_E);
			editBtn.addActionListener(stateButtonClick);
			
			JPanel buttonPanel = new JPanel();
			buttonPanel.add(addBtn);
			buttonPanel.add(removeBtn);
			buttonPanel.add(editBtn);
			buttonPanel.setMaximumSize(new Dimension(Integer.MAX_VALUE, buttonPanel.getPreferredSize().height ));

			
			// Add components to panel
			statesPanel.add(labelPanel);
			statesPanel.add(stateListsPanel );
			statesPanel.add(buttonPanel);
		
			
			return statesPanel;
	  }	
	  
	  // This method loads the names of the state groups and adds them to the source / destination JLists
	  private void populateLists()
	  {
		  // Load the name of the state groups
		  String[] stateGrpNames = stateNames(stateGroupData);
		  
		  startStatesList.setListData(stateGrpNames);
		  endStatesList.setListData(stateGrpNames);
	  }
	  
	  
	private String[] stateNames(StateGroup[] states)
	{
		int size = states.length;
		String[] names = new String[size];
		
		for (int i=0; i<size; i++)
			names[i] = states[i].getName();
		
		return names;
		
	}
	
	void updateStateLists()
	{
		// refresh state group array
		stateGroupData = pnmlData.getStateGroups();
		
		// refresh the list of state group names
		populateLists();
	}


	
	// This method creates the panel for entering the required start and end time along with the step
	private JPanel getAnalysisPanel()
	{
		JPanel timePanel = new JPanel();
		
		timePanel.setBorder((new TitledBorder(new EtchedBorder(),"Analysis Settings")) );
		timePanel.setLayout(new GridLayout(2,2));
=====================================================================
Found a 36 line (475 tokens) duplication in the following files: 
Starting at line 247 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 288 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

			node = new MacroNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.ARITHCOMP.toString()))
			node = new ArithCompNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.ARITHOP.toString()))
			node = new ArithOpNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.CONVOLUTION.toString()))
			node = new ConvolutionNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.DISCON.toString()))
			node = new DisconNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.DISTRIBUTION.toString()))
			node = new DistributionNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.FIRINGRATE.toString()))
			node = new FiringRateNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.ININTERVAL.toString()))
			node = new InIntervalNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.MOMENT.toString()))
			node = new MomentNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.PERCENTILE.toString()))
			node = new PercentileNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.NEGATION.toString()))
			node = new NegationNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.PASSAGETIMEDENSITY.toString()))
			node = new PassageTimeDensityNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.PROBININTERVAL.toString()))
			node = new ProbInIntervalNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.PROBINSTATES.toString()))
			node = new ProbInStatesNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.RANGE.toString()))
			node = new RangeNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.STATESATTIME.toString()))
			node = new StatesAtTimeNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.STEADYSTATEPROB.toString()))
			node = new SteadyStateProbNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.STEADYSTATESTATES.toString()))
			node = new SteadyStateStatesNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.SUBSET.toString()))
=====================================================================
Found a 91 line (465 tokens) duplication in the following files: 
Starting at line 154 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 197 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

			throw new RuntimeException(e);
		}
	}

	/**
	 * Create a Node object from a Node DOM Element
	 * 
	 * @param inputElement -
	 *            Input PerformanceTreeNode DOM Element
	 * @return PerformanceTreeNode Object
	 */
	private static void createNode(final Element inputElement)
	{
		String nodeID = null;
		String nodeType = null;
		String nodeOperation = null;
		String nodeLabel = null;
		double nodePositionX = 0;
		double nodePositionY = 0;
		String nodeIncomingArcID = null;
		ArrayList<String> nodeOutgoingArcIDs = new ArrayList<String>();

		// retrieve info from element's attributes
		String retrievedNodeID = inputElement.getAttribute("id");
		if (retrievedNodeID.length() > 0)
			nodeID = retrievedNodeID;
		String retrievedNodeType = inputElement.getAttribute("type");
		if (retrievedNodeType.length() > 0)
			nodeType = retrievedNodeType;
		String retrievedNodeOperation = inputElement.getAttribute("operation");
		if (retrievedNodeOperation.length() > 0)
			nodeOperation = retrievedNodeOperation;
		String retrievedNodeLabel = inputElement.getAttribute("label");
		if (retrievedNodeLabel.length() > 0)
			nodeLabel = retrievedNodeLabel;
		String retrievedNodePositionX = inputElement.getAttribute("x");
		if (retrievedNodePositionX.length() > 0)
		{
			nodePositionX = Double.valueOf(retrievedNodePositionX).doubleValue() *
							(false ? QueryConstants.DISPLAY_SCALE_FACTORX : 1) +
							(false ? QueryConstants.DISPLAY_SHIFT_FACTORX : 1);
			nodePositionX += QueryConstants.NODE_HEIGHT / 2 - 1;
		}
		String retrievedNodePositionY = inputElement.getAttribute("y");
		if (retrievedNodePositionY.length() > 0)
		{
			nodePositionY = Double.valueOf(retrievedNodePositionY).doubleValue() *
							(false ? QueryConstants.DISPLAY_SCALE_FACTORY : 1) +
							(false ? QueryConstants.DISPLAY_SHIFT_FACTORY : 1);
			nodePositionY += QueryConstants.NODE_HEIGHT / 2 - 1;
		}

		// extract incoming and outgoing arc ids
		NodeList nodeElementList = inputElement.getChildNodes();
		for (int i = 0; i < nodeElementList.getLength(); i++)
		{
			Node nodeNode = nodeElementList.item(i);
			if (nodeNode instanceof Element)
			{
				Element nodeElement = (Element) nodeNode;
				if ("incomingArc".equals(nodeElement.getNodeName()))
				{
					String retrievedNodeIncomingArcID = nodeElement.getTextContent();
					if (retrievedNodeIncomingArcID.length() > 0)
						nodeIncomingArcID = retrievedNodeIncomingArcID;
				}
				else if ("outgoingArcs".equals(nodeElement.getNodeName()))
				{
					// extract arc IDs and put them into the array of outgoing
					// arc IDs
					NodeList outgoingArcsElementList = nodeElement.getChildNodes();
					for (int j = 0; j < outgoingArcsElementList.getLength(); j++)
					{
						Node outgoingArcsNode = outgoingArcsElementList.item(j);
						if (outgoingArcsNode instanceof Element)
						{
							Element outgoingArcsElement = (Element) outgoingArcsNode;
							if ("arc".equals(outgoingArcsElement.getNodeName()))
							{
								String outgoingArcID = outgoingArcsElement.getAttribute("id");
								nodeOutgoingArcIDs.add(outgoingArcID);
							}
						}
					}
				}
			}
		}

		// create nodes with the retrieved values
		PerformanceTreeNode node = null;
		if (nodeType.equals(PTNode.MACRO.toString()))
=====================================================================
Found a 80 line (449 tokens) duplication in the following files: 
Starting at line 666 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 208 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

	private static void createNode(final Element inputElement)
	{
		String nodeID = null;
		String nodeType = null;
		String nodeOperation = null;
		String nodeLabel = null;
		double nodePositionX = 0;
		double nodePositionY = 0;
		String nodeIncomingArcID = null;
		ArrayList<String> nodeOutgoingArcIDs = new ArrayList<String>();

		// retrieve info from element's attributes
		String retrievedNodeID = inputElement.getAttribute("id");
		if (retrievedNodeID.length() > 0)
			nodeID = retrievedNodeID;
		String retrievedNodeType = inputElement.getAttribute("type");
		if (retrievedNodeType.length() > 0)
			nodeType = retrievedNodeType;
		String retrievedNodeOperation = inputElement.getAttribute("operation");
		if (retrievedNodeOperation.length() > 0)
			nodeOperation = retrievedNodeOperation;
		String retrievedNodeLabel = inputElement.getAttribute("label");
		if (retrievedNodeLabel.length() > 0)
			nodeLabel = retrievedNodeLabel;
		String retrievedNodePositionX = inputElement.getAttribute("x");
		if (retrievedNodePositionX.length() > 0)
		{
			nodePositionX = Double.valueOf(retrievedNodePositionX).doubleValue() *
							(false ? QueryConstants.DISPLAY_SCALE_FACTORX : 1) +
							(false ? QueryConstants.DISPLAY_SHIFT_FACTORX : 1);
			nodePositionX += QueryConstants.NODE_HEIGHT / 2 - 1;
		}
		String retrievedNodePositionY = inputElement.getAttribute("y");
		if (retrievedNodePositionY.length() > 0)
		{
			nodePositionY = Double.valueOf(retrievedNodePositionY).doubleValue() *
							(false ? QueryConstants.DISPLAY_SCALE_FACTORY : 1) +
							(false ? QueryConstants.DISPLAY_SHIFT_FACTORY : 1);
			nodePositionY += QueryConstants.NODE_HEIGHT / 2 - 1;
		}

		// extract incoming and outgoing arc ids
		NodeList nodeElementList = inputElement.getChildNodes();
		for (int i = 0; i < nodeElementList.getLength(); i++)
		{
			Node nodeNode = nodeElementList.item(i);
			if (nodeNode instanceof Element)
			{
				Element nodeElement = (Element) nodeNode;
				if ("incomingArc".equals(nodeElement.getNodeName()))
				{
					String retrievedNodeIncomingArcID = nodeElement.getTextContent();
					if (retrievedNodeIncomingArcID.length() > 0)
						nodeIncomingArcID = retrievedNodeIncomingArcID;
				}
				else if ("outgoingArcs".equals(nodeElement.getNodeName()))
				{
					// extract arc IDs and put them into the array of outgoing
					// arc IDs
					NodeList outgoingArcsElementList = nodeElement.getChildNodes();
					for (int j = 0; j < outgoingArcsElementList.getLength(); j++)
					{
						Node outgoingArcsNode = outgoingArcsElementList.item(j);
						if (outgoingArcsNode instanceof Element)
						{
							Element outgoingArcsElement = (Element) outgoingArcsNode;
							if ("arc".equals(outgoingArcsElement.getNodeName()))
							{
								String outgoingArcID = outgoingArcsElement.getAttribute("id");
								nodeOutgoingArcIDs.add(outgoingArcID);
							}
						}
					}
				}
			}
		}

		// create nodes with the retrieved values
		PerformanceTreeNode node = null;
		if (nodeType.equals(PTNode.MACRO.toString()))
=====================================================================
Found a 95 line (446 tokens) duplication in the following files: 
Starting at line 637 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 577 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

					msg = SequentialNode.getNodeInfo();
				}
				else if (actionName.equals("PassageTimeDensity"))
				{
					msg = PassageTimeDensityNode.getNodeInfo();
				}
				else if (actionName.equals("Distribution"))
				{
					msg = DistributionNode.getNodeInfo();
				}
				else if (actionName.equals("Convolution"))
				{
					msg = ConvolutionNode.getNodeInfo();
				}
				else if (actionName.equals("ProbInInterval"))
				{
					msg = ProbInIntervalNode.getNodeInfo();
				}
				else if (actionName.equals("ProbInStates"))
				{
					msg = ProbInStatesNode.getNodeInfo();
				}
				else if (actionName.equals("Moment"))
				{
					msg = MomentNode.getNodeInfo();
				}
				else if (actionName.equals("Percentile"))
				{
					msg = PercentileNode.getNodeInfo();
				}
				else if (actionName.equals("FiringRate"))
				{
					msg = FiringRateNode.getNodeInfo();
				}
				else if (actionName.equals("SteadyStateProb"))
				{
					msg = SteadyStateProbNode.getNodeInfo();
				}
				else if (actionName.equals("SteadyStateStates"))
				{
					msg = SteadyStateStatesNode.getNodeInfo();
				}
				else if (actionName.equals("StatesAtTime"))
				{
					msg = StatesAtTimeNode.getNodeInfo();
				}
				else if (actionName.equals("InInterval"))
				{
					msg = InIntervalNode.getNodeInfo();
				}
				else if (actionName.equals("Subset"))
				{
					msg = SubsetNode.getNodeInfo();
				}
				else if (actionName.equals("Discon"))
				{
					msg = DisconNode.getNodeInfo();
				}
				else if (actionName.equals("Negation"))
				{
					msg = NegationNode.getNodeInfo();
				}
				else if (actionName.equals("ArithComp"))
				{
					msg = ArithCompNode.getNodeInfo();
				}
				else if (actionName.equals("ArithOp"))
				{
					msg = ArithOpNode.getNodeInfo();
				}
				else if (actionName.equals("Range"))
				{
					msg = RangeNode.getNodeInfo();
				}
				else if (actionName.equals("States"))
				{
					msg = StatesNode.getNodeInfo();
				}
				else if (actionName.equals("Actions"))
				{
					msg = ActionsNode.getNodeInfo();
				}
				else if (actionName.equals("Num"))
				{
					msg = NumNode.getNodeInfo();
				}
				else if (actionName.equals("Bool"))
				{
					msg = BoolNode.getNodeInfo();
				}
				else if (actionName.equals("StateFunction"))
				{
					msg = StateFunctionNode.getNodeInfo();
				}
				else if (actionName.equals("Macro"))
=====================================================================
Found a 103 line (418 tokens) duplication in the following files: 
Starting at line 7 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StatusListener.java
Starting at line 7 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/StatusListener.java

public class StatusListener
{
	private final SocketIO				server;
	private final ProgressBarHTMLPane	progress;
	String								statusHTML	= "";

	public StatusListener(	final SocketIO server,
							final ProgressBarHTMLPane progressPane,
							final String currentStatus) {
		this.server = server;
		this.progress = progressPane;
		this.statusHTML = currentStatus;
	}

	public String listen() throws IOException
	{
		String status = null;
		String[] components;
		int statusCount = 0;
		boolean progressBar = false;

		status = this.server.receiveStatus();

		// Continue reading status until the socket returns null, or we have
		// completed analysis (finished or failed)
		while (!(status == null) && !(status.equals("Finished") || status.equals("Failed")))
		{

			components = status.split(" ");

			if (status.equalsIgnoreCase("Wait"))
			{
				if (statusCount == 0)
					status = "Queuing";

				else status = ".";

				this.statusHTML += status;
				this.progress.setText(this.statusHTML);
				sleep(500); // allow server to progress
			}

			// Check if the status is progress for the progress bar
			else if (components.length == 3 && components[1].equals("of"))
			{
				this.progress.setText(this.statusHTML + "<br>" + status + " paths explored");

				if (!progressBar)
				{
					this.progress.initProgressBar(	Integer.parseInt(components[0]),
													Integer.parseInt(components[2]));
					progressBar = true;
				}

				this.progress.updateProgressBar(Integer.parseInt(components[0]));

				if (components[0].equals(components[2]))
					this.statusHTML += "<br>" + status + " paths explored";

				sleep(10);
			}

			else if (statusCount > 0)
			{
				this.statusHTML += "<br>" + status;
				this.progress.setText(this.statusHTML);
				sleep(300); // smoother gui update
			}

			// Don't include a <br> if its the first message
			else
			{
				this.statusHTML += status;
				this.progress.setText(this.statusHTML);
			}

			status = this.server.receiveStatus();
			statusCount++;
		}

		if (status != null && status.equals("Finished"))
			this.statusHTML += "<br>" + "Job finished successfully";

		else if (status != null && status.equals("Failed"))
			this.statusHTML += "<br>" + "Job failed to complete";

		this.statusHTML += "<br>" + "Transferring results..";

		return this.statusHTML + "<br>";
	}

	private void sleep(final int time_ms)
	{
		try
		{
			Thread.sleep(time_ms);
		}
		catch (InterruptedException e)
		{
		}
	}

}
=====================================================================
Found a 111 line (410 tokens) duplication in the following files: 
Starting at line 49 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlace.java
Starting at line 56 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlace.java

	public ConditionPlace(Place inputPlace)
	{
		super(inputPlace.getPositionX(), inputPlace.getPositionY(), inputPlace.getId(), inputPlace.getName(), 0, 0 );
		
		currentMarking = new Integer( inputPlace.getCurrentMarking() );
		componentWidth = DIAMETER;
		componentHeight = DIAMETER;				

		setCentre((int)positionX, (int)positionY);
		updateBounds();
	}
	

	/**
	 * Paints the Place component taking into account the number of tokens from the currentMarking
	 * @param g The Graphics object onto which the Place is drawn.
	 */
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		
		Graphics2D g2 = (Graphics2D)g;	
		AffineTransform saveXform = g2.getTransform();
		AffineTransform scaledXform = getZoomController().getTransform();
		Insets insets = getInsets();
		int x = insets.left;
		int y = insets.top;
		
		g2.translate(COMPONENT_DRAW_OFFSET, COMPONENT_DRAW_OFFSET);
		g2.transform(scaledXform);

		g2.setStroke(new BasicStroke(1.0f));	
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

		g2.setColor(currentColor);
		g2.fill(place);

		if (selected && !ignoreSelection)
			g2.setPaint(SELECTION_LINE_COLOUR);
		else
			g2.setPaint(ELEMENT_LINE_COLOUR);
		g2.draw(place);

		
		// Print current condition on place
		g.drawString(condOperator+condOperand,x+5,y+20);
		

		g2.setTransform(saveXform);

	}


	/**
	 * Get current marking
	 * @return Integer value for current marking
	 */
	public int getCurrentMarking() {
		if (currentMarking == null)
			return 0;
		else
			return currentMarking.intValue();
	}

	/** Returns the width bounds we want to use when initially creating the place on the gui
	 * @return Width bounds of Place
	 */
	public int boundsWidth() {
		return WIDTH +1;
	}

	/** Returns the height bounds we want to use when initially creating the place on the gui
	 * @return Height bounds of Place
	 */
	public int boundsHeight() {
		return HEIGHT +1;
	}
	
	/**
	 * Returns the diameter of this Place at the current zoom
	 */
	public int getDiameter(){
		int zoomBy = getZoomController().getPercent();
		return (int)(DIAMETER * zoomBy * 0.01);
	}

	/**
	 * Determines whether the point (x,y) is "in" this component. This method is called
	 * when mouse events occur and only events at points for which this method returns true
	 * will be dispatched to mouse listeners
	 */
	public boolean contains(int x, int y) {
		
		int zoomPercentage = getZoomController().getPercent();
		double unZoomedX=(x-COMPONENT_DRAW_OFFSET)/(zoomPercentage/100.0);
		double unZoomedY=(y-COMPONENT_DRAW_OFFSET)/(zoomPercentage/100.0);
		
		return place.contains((int)unZoomedX, (int)unZoomedY);
	}
	
	
	public PetriNetObject clone() {
		return super.clone();
	}
	
	public void setCondition(String operator, String operand)
	{
		// Convert to unicode character for UI appearance
		if (operator.equals("<=") )
			operator = "\u2264";
		else if (operator.equals(">="))
			operator = "\u2265";
=====================================================================
Found a 109 line (400 tokens) duplication in the following files: 
Starting at line 600 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 528 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

	}
	/**
	 * rateorprob()
	 * Calculate the PROBABILITY of a transition from a VANISHING state to another
	 * state or the RATE of transition from a TANGIBLE state to another state.
	 * Works out the transitions enabled to fire at a particular
	 * marking, transitions that can be reached from a particular marking and the 
	 * intersection of the two.  Then sums the firing rates of the intersection
	 * and divides it by the sum of the firing rates of the enabled transitions.
	 * 
	 * @author Matthew Cook (original code), Nadeem Akharware (adaption and
	 * optimisation)
	 * 
	 * @param pnmlData  
	 * @param v
	 * @param vprime
	 * @return double - the probability
	 */
	
	private static double rateorprob(DataLayer pnmlData, State s, State sprime, boolean rp){
	
		int[] marking1 = s.getState();
		int[] marking2 = sprime.getState();
		int markSize = marking1.length;
		int[][] incidenceMatrix = pnmlData.getIncidenceMatrix();
		int transCount = pnmlData.getTransitionsCount();
		boolean[] marking1EnabledTransitions = getTransitionEnabledStatusArray(pnmlData, marking1, false); //get list of transitions enabled at marking1
		boolean[] matchingTransition = new boolean[transCount];
		
		
		//**************************************************** *************************************************
		for (int j = 0; j <transCount; j ++) {
			matchingTransition[j] = true;  //initialise matrix of potential transition values to true
		}
		//*****************************************************************************************************
		//get transition needed to fire to get from marking1 to marking2
		for (int i = 0; i < transCount; i++) {
			for (int k = 0; k < markSize; k++) {
			//if the sum of the incidence matrix and marking 1 doesn't equal marking 2, 
			//set that candidate transition possibility to be false 
				if (((int)marking1[k] + (int)incidenceMatrix[k][i])!= (int)marking2[k]){
					matchingTransition[i] = false;
					}
			}
		}
		
		// If the state marking1 is tangible (i.e. we must be calculating a rate),
		// all transitions will be timed, so all can be considered 
		// in the calculation.
		// Otherwise, reset the enabled status of timed transitions to false,
		// as immediate transitions will always fire first.
		if(rp==PROBABILITY){
			Transition[] transitions = pnmlData.getTransitions();
			for (int i = 0; i <transCount; i++) {
				if (transitions[i].isTimed() == true) {
					marking1EnabledTransitions[i] = false;
				}
			}
		}
		
		//*****************************************************************************************************
		//check if there are any potential transitions from marking 1 to marking 2 and whether they are
		// enabled or not.
		boolean enabledAndMatching = false;
		for (int i = 0; i < transCount; i++) {	
			if (matchingTransition[i] == true){
				if(marking1EnabledTransitions[i] == true){
					enabledAndMatching = true;
				}
			}
		}
		if (enabledAndMatching == false) {
			return 0.0;
		}
		
		//******************************************************************************************************	
		//work out the sum of firing weights of input transitions
		double candidateTransitionWeighting = 0.0;
		for (int i = 0; i < transCount; i++) {
			if((matchingTransition[i] == true) && (marking1EnabledTransitions[i] == true)){
				candidateTransitionWeighting += pnmlData.getTransitions()[i].getRate(); 	
			}
		}
		if(rp==RATE){
			return candidateTransitionWeighting;
		}
		else{
			//*****************************************************************************************************	
			//work out the sum of firing weights of enabled transitions
			double enabledTransitionWeighting = 0.0;
			for (int i = 0; i < transCount; i++) {
				if (marking1EnabledTransitions[i] == true) {
					enabledTransitionWeighting += pnmlData.getTransitions()[i].getRate();
				}
			}
			return (candidateTransitionWeighting/enabledTransitionWeighting);
		}
	}
	
	/**
	 * explored()
	 * Tests whether the state passed as an argument has already
	 * been explored.
	 * 
	 * @param test				The state to look for
	 * @param exploredStates	The hashtable to check for the state
	 * @return
	 */
	private static boolean explored(State test, LinkedList[] es){
=====================================================================
Found a 74 line (392 tokens) duplication in the following files: 
Starting at line 361 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java
Starting at line 868 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java

	private void createSparsePTMatrix(File rgGraph) throws ImmediateAbortException {
		NewRGFileHeader rgHeader;
		FileChannel ipfc = null;
		//Open reachability graph file for reading
		MappedByteBuffer inputBuf = null;
		try {
			ipfc = new FileInputStream(rgGraph).getChannel();
			inputBuf = ipfc.map(FileChannel.MapMode.READ_ONLY, 0, length);
		}
		catch (Exception e) {
			e.printStackTrace();
		}
		
		int row, column, dataIndex = 0;
		
		NewTransitionRecord currentTrans = new NewTransitionRecord();
		NewStateRecord currentState = new NewStateRecord();
		
		//Read in header of file to get data about contents
		rgHeader = new NewRGFileHeader();
		try {			
			rgHeader.read(inputBuf);
		} 
		catch (IOException e) {
			System.out.println("IO error!2");
			throw new ImmediateAbortException("IO error");
		}
		
		//NOTE: Array is constructed with column access ie MatrixQTind[ref to columns][contents of column]
		try {
		// Calculate how large each column of MatrixQTind needs to be
		int numColumns = rgHeader.getNumStates();//dimension of nxn array
		numtransitions = rgHeader.getNumTransitions();//number of non zero elements in array
		
		int[] colSize = new int[numColumns];//array to store size of columns in MatrixATind
		MatrixQTind = new int[numColumns][];
		MatrixQTdata = new double[numtransitions+numColumns];
		double [] rowSum = new double[numColumns];
		inputBuf.position((int)rgHeader.getOffsetToTransitions());
		for(int record = 0; record < numtransitions; record++){
			currentTrans.read(inputBuf);
				//System.out.println("From: " + (current.getFromState()) + ":(" + ")" + " To: " + current.getToState() + " via " + current.getTransitionNo()+ " Rate: " + current.getRate());

			if(currentTrans.getFromState() != currentTrans.getToState()){
				//row = currentTrans.getFromState();
				column = currentTrans.getToState();
				colSize[column]++;
			}
		}
		//Now create rows of sparse matrix:
		for(int i = 0; i < numColumns; i++) {
			MatrixQTind[i] = new int[(colSize[i]+1)*2+1];//increment as need to add diagonal
		}
		
		//Now go back though file and fill sparse matrix
		inputBuf.position((int)rgHeader.getOffsetToTransitions());
		for(int record = 0; record < numtransitions; record++){
			currentTrans.read(inputBuf);
			if(currentTrans.getFromState() != currentTrans.getToState()){
				row = currentTrans.getFromState();
				column = currentTrans.getToState();
				MatrixQTind[column][++MatrixQTind[column][0]] = row;
				MatrixQTind[column][++MatrixQTind[column][0]] = dataIndex;
				rowSum[row] += MatrixQTdata[dataIndex++] = currentTrans.getRate();
				/*if(currentTrans.getIsFromTan()) {						
					rowSum[row] += MatrixQTdata[dataIndex++] = currentTrans.getRate();
				}
				else {
					rowSum[row] += MatrixQTdata[dataIndex++] = 20000;
				}*/
			}
		}
		//Now divide all the data elements by the row sum
		for(int i = 0; i < numColumns; i++) {
=====================================================================
Found a 106 line (383 tokens) duplication in the following files: 
Starting at line 164 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 303 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

	      t.printStackTrace(); 
	    }    
		
		
	}
	
	ActionListener switchView = new ActionListener()
	{
		public void actionPerformed(ActionEvent eve)
		{
			if (currentlyPDF)
			{
				graphFlip.show(graphPanel, "CDF");
				switchViewBtn.setText("Show PDF");
			}
			else
			{
				graphFlip.show(graphPanel, "PDF");
				switchViewBtn.setText("Show CDF");				
			}
			
			currentlyPDF = !currentlyPDF; // flip bool
		}
	};
	ActionListener pngListener = new ActionListener()
	{
		public void actionPerformed(ActionEvent eve) {
			
			RenderedImage graphImage;
			
			if (currentlyPDF)
				graphImage = pdfGraph.createBufferedImage(800, 600);
			else
				graphImage = cdfGraph.createBufferedImage(800, 600);
			
			
			File saveFile;
			JFileChooser fc = new JFileChooser();
			int returnVal = fc.showSaveDialog(resultsPanel);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			try {
				ImageIO.write(graphImage, "png", saveFile);
			}
			catch (IOException e) {
				e.printStackTrace();
			}
		}
	};
	


	private ActionListener cvsListener = new ActionListener() {
	  	public void actionPerformed(ActionEvent arg0) {
	  		XYDataset graphData; 
	  		
	  		if(currentlyPDF)
	  			graphData = pdfGraph.getXYPlot().getDataset();
	  		else
	  			graphData = cdfGraph.getXYPlot().getDataset();
	  			
	  		int size = graphData.getItemCount(0);
	  		
	  		FileWriter fw = null;
	  		StringBuffer content = new StringBuffer();
	  		
	  		File saveFile;
		
			JFileChooser fc = new JFileChooser();			
			
			int returnVal = fc.showSaveDialog(resultsPanel);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			
			try {
				fw = new FileWriter(saveFile);
			}
			catch (IOException e) {
				e.printStackTrace();
			}
			for(int i = 0; i < size; i++) {
				content.append(graphData.getXValue(0, i));
				content.append(",");
				content.append(graphData.getYValue(0, i));
				content.append(",\n");				
			}
	  		String content1 = content.toString();
	  		
	  		try {
		  		fw.write(content1);
		  		fw.close();
	  		}
	  		catch (Exception e) {
	  			e.printStackTrace();
	  		}
	  	}
	  };
	

}
=====================================================================
Found a 47 line (332 tokens) duplication in the following files: 
Starting at line 488 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 550 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

	arg[1] = parg.getHeight();
	val[0] = arg[0];
	val[1] = arg[1];
	orig_precision = precision;

	for(int i=0; i<2; i++) {
	    precision = orig_precision;
	    ival[i] = (int)val[i];
	    val[i] = (val[i] < 0) ? -val[i] : val[i];

	    if (val[i] >= 1) {
		exp[i] = Math.log(val[i])/LOG10;
	    } else {
		exp[i] = Math.log(val[i]/10)/LOG10;
	    }

	    iexp[i] = (int)exp[i];
	    precision = (precision >= 0) ? --precision : 5;

	    if (val[i] == ival[i]) {
		if (alternate) {
		    if (precision < 0 || iexp[i] <= precision) {
			precision -= iexp[i];
			retbuf = buildFloat(buf, arg[i]);
		    } else retbuf = buildExp(buf, arg[i], upper);
		} else {
		    if (precision < 0 || iexp[i] <= precision) {
			precision = -1;
			retbuf = buildInteger(buf, (long)arg[i]);
		    } else retbuf = buildExp(buf, arg[i], upper);
		}
	    } else if (iexp[i] < -4 || iexp[i] > precision)
		retbuf = buildExp(buf, arg[i], upper);
	    else retbuf = buildFloat(buf, arg[i]);

	    if(i == 0) {
		retbuf = retbuf.append(',');
		buf = retbuf;
	    }
	}

	return(retbuf);
    }

    ///////////////////////////////////////////////////////////////////////////

    final StringBuffer
=====================================================================
Found a 104 line (330 tokens) duplication in the following files: 
Starting at line 206 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 356 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

			  	Iterator arcsFrom = transitions[i]. getConnectFromIterator();
			  	/*since the net has been validated, if the transition has a tagged input arc
			  	 * it must have corresponding tagged output, hence need to check for tagged input
			  	 */ 
			  	while(arcsTo.hasNext()){
			  		
			  		if(  ((Arc)arcsTo.next()).isTagged() )
			  		{
			  			taggedArc = true;
			  			numInputArc++;
			  		}
			  		
			  	}
			  	
			  	if(taggedArc) 
			  	{
				  	writeTransition(ORIGINAL, i, numInputArc);
			  		writeTransition(CLONED, i,  numInputArc);
			  	}
			  	else 
			  	{
				  	writeTransition(UNTAGGED, i, numInputArc);
			  	}
			  		
			}//end for
		}//end transition
		
		
		private void writeTransition(int type, int i, int numInputArc) 
		{
			Iterator arcToTransitions = transitions[i]. getConnectToIterator();
		  	Iterator arcFromTransitions = transitions[i]. getConnectFromIterator();
			
			int[] tagInputPlaceIndex = new int[numInputArc];
			int taggedInput=0;
			int tagOutputPlaceIndex = -1;

		  	
		  	/* if type is CLONED or ORIGINAL, 
		  	 * need to find tagged input places and tagged output place
		  	 */
		  	if(type != UNTAGGED) 
		  	{
		  		
		  		while(arcToTransitions.hasNext())
		  		{
			  		
		  			/*
		  			 * if the arc is tagged, 
		  			 * there's possibility that the place attach to it
		  			 * may contain a tagged token
		  			 */
		  			final Arc arc = ((Arc)arcToTransitions.next());
			  		if( arc.isTagged()  )
			  		{
			  			tagInputPlaceIndex[taggedInput] = getPlaceIndex(((Place)arc.getSource()).getId());
			  			taggedInput++;
			  		}
			  		
			  	}
		  		
		  		while(arcFromTransitions.hasNext())
		  		{
		  			/*
		  			 * obtain tagged outputPlace index
		  			 */
		  			final Arc arc = ((Arc)arcFromTransitions.next());
			  		if( arc.isTagged()  )
			  		{
			  			tagOutputPlaceIndex = getPlaceIndex(((Place)arc.getTarget()).getId());
			  			break;
			  		}
		  			
		  		}
		  		
		  	}//if !untagged

		  		/*
		  		 * 1) write transition id
		  		 */
		  		if(type == ORIGINAL || type == UNTAGGED) 
					modString += "\t\\transition{"+ transitions[i].getId() +"}{\n";
				
				else if(type == CLONED)	
					modString += "\t\\transition{"+ transitions[i].getId() +"_tagged}{\n";
				
		  		
		  		/*
		  		 * 2) write enabling condition 
		  		 */
		  		if(type == UNTAGGED)
					modString += "\t\t\\condition{" + getTransitionConditions(i) + "}\n";
				
		  		/*
		  		 * this is transition in mode ut'
		  		 * fire when the input places doesn't contain tagged token
		  		 * if it contains tagged token, then it is enable if the marking on this
		  		 * place is greater than 1
		  		 */
				else if(type == ORIGINAL) 
				{
					
				  	modString += "\t\t\\condition{(" + getTransitionConditions(i) + 
			  		" && tagged_location != " + tagInputPlaceIndex[0];
=====================================================================
Found a 78 line (317 tokens) duplication in the following files: 
Starting at line 31 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java
Starting at line 26 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java

public class StateViewer extends JLayeredPane implements Constants
{
	private static final long serialVersionUID = 1L;
	
	DataLayer stateDataLayer;
	StateGroup activeStateGroup;
	ArrayList<ConditionPlace> condPlaces;
	JDialog parent;

	public StateViewer()
	{
			setLayout(null);
			setOpaque(true);
			setDoubleBuffered(true);
			setAutoscrolls(true);
			setBackground(ELEMENT_FILL_COLOUR);			
			setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));				
	}
	
	public void setParent(JDialog parent)
	{
		this.parent = parent;	
	}
	
	
	public void drawPetriNet(DataLayer pnmldata, StateGroup stateGroupData)
	{

		// Create a clone of the DataLayer object as only one GUI can display an instance of a PetriNetObject at a time
		// and it is currently being displayed by the primary window (GuiView)
		stateDataLayer = pnmldata.clone();
		activeStateGroup = stateGroupData;
		condPlaces = new ArrayList<ConditionPlace>();
		
		// Iterate through the petri-net objects adding them to the GUI
		Iterator PNObjects = stateDataLayer.getPetriNetObjects();

		while(PNObjects.hasNext())
			insertUI( PNObjects.next() );			
		
		updatePreferredSize();		
	}
	
	public void insertUI(Object diffObj)
	{
		if (diffObj!=null  &&  diffObj instanceof PetriNetObject)
			add((PetriNetObject)diffObj);			
		
		repaint();
	}
	
	public void updatePreferredSize() {
		// iterate over net objects and setPreferredSize() accordingly
		Component[] components=getComponents();
		Dimension d=new Dimension(0,0);
		int x,y;
		
		for(int i=0;i<components.length;i++)
		{
			Rectangle r=components[i].getBounds();
			x=r.x+r.width+100;
			y=r.y+r.height+100;
			if (x>d.width)  d.width =x;
			if (y>d.height) d.height=y;
		}
		setPreferredSize(d);
	}

	
	public void add(PetriNetObject currentObj)
	{
		if (currentObj instanceof Place)
		{
			ConditionPlace place = new ConditionPlace((Place)currentObj);
			
			// Set the state group condition associated with the place
			StateElement placeCondition = activeStateGroup.getCondition(place.getId());
			if (placeCondition != null){
=====================================================================
Found a 64 line (307 tokens) duplication in the following files: 
Starting at line 396 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 425 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

								MacroLoader.createNode(childNodesElement);
							}
						}
					}
				}
			}
		}
	}

	/**
	 * Create a PerformanceTreeArc object from an PerformanceTreeArc DOM Element
	 * 
	 * @param inputElement -
	 *            Input PerformanceTreeArc DOM Element
	 * @return PerformanceTreeArc Object
	 */
	private static void createArc(final Element inputElement)
	{
		String arcID = null;
		String arcLabel = null;
		String arcSourceID = null;
		String arcTargetID = null;
		double arcStartX = 0;
		double arcStartY = 0;
		double arcEndX = 0;
		double arcEndY = 0;
		boolean arcRequired = true;
		boolean labelRequired = true;

		// retrieve info from element's attributes
		String retrievedArcID = inputElement.getAttribute("id");
		if (retrievedArcID.length() > 0)
			arcID = retrievedArcID;
		String retrievedArcLabel = inputElement.getAttribute("label");
		if (retrievedArcLabel.length() > 0)
			arcLabel = retrievedArcLabel;
		String retrievedArcSourceID = inputElement.getAttribute("source");
		if (retrievedArcSourceID.length() > 0)
			arcSourceID = retrievedArcSourceID;
		String retrievedArcTargetID = inputElement.getAttribute("target");
		if (retrievedArcTargetID.length() > 0)
			arcTargetID = retrievedArcTargetID;
		String retrievedArcRequired = inputElement.getAttribute("required");
		if (retrievedArcRequired.length() > 0)
		{
			if (retrievedArcRequired.equals("true"))
				arcRequired = true;
			else if (retrievedArcRequired.equals("false"))
				arcRequired = false;
		}
		String retrievedArcStartX = inputElement.getAttribute("startX");
		if (retrievedArcStartX.length() > 0)
			arcStartX = Double.parseDouble(retrievedArcStartX);
		String retrievedArcStartY = inputElement.getAttribute("startY");
		if (retrievedArcStartY.length() > 0)
			arcStartY = Double.parseDouble(retrievedArcStartY);
		String retrievedArcEndX = inputElement.getAttribute("endX");
		if (retrievedArcEndX.length() > 0)
			arcEndX = Double.parseDouble(retrievedArcEndX);
		String retrievedArcEndY = inputElement.getAttribute("endY");
		if (retrievedArcEndY.length() > 0)
			arcEndY = Double.parseDouble(retrievedArcEndY);

		PTNode parentNodeType = MacroLoader.macro.getMacroNode(arcSourceID).getNodeType();
=====================================================================
Found a 55 line (298 tokens) duplication in the following files: 
Starting at line 370 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 366 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

			if (node instanceof StatesNode)
			{
				StatesNode statesNode = (StatesNode) node;
				if (statesNode.getNodeLabelObject() != null)
				{
					String stateLabel = statesNode.getNodeLabel();
					ArrayList<String> states = retrievedStateLabels.get(stateLabel);
					stateLabels.put(stateLabel, states);
				}
			}
			else if (node instanceof ActionsNode)
			{
				ActionsNode actionsNode = (ActionsNode) node;
				if (actionsNode.getNodeLabelObject() != null)
				{
					String actionLabel = actionsNode.getNodeLabel();
					actionLabels.add(actionLabel);
				}
			}
		}

		// serialise state labels
		Element stateLabelsElement = document.createElement("stateLabels");
		tree.appendChild(stateLabelsElement);
		Iterator<String> i = stateLabels.keySet().iterator();
		while (i.hasNext())
		{
			Element stateLabelElement = document.createElement("statelabel");
			stateLabelsElement.appendChild(stateLabelElement);
			String stateLabel = i.next();
			ArrayList<String> stateLabelsStates = stateLabels.get(stateLabel);
			stateLabelElement.setAttribute("name", stateLabel);
			Iterator<String> j = stateLabelsStates.iterator();
			while (j.hasNext())
			{
				Element stateElement = document.createElement("state");
				stateLabelElement.appendChild(stateElement);
				String stateName = j.next();
				stateElement.setAttribute("name", stateName);
			}
		}

		// serialise action labels
		Element actionLabelsElement = document.createElement("actionLabels");
		tree.appendChild(actionLabelsElement);
		Element actionLabelElement;
		i = actionLabels.iterator();
		while (i.hasNext())
		{
			actionLabelElement = document.createElement("actionlabel");
			actionLabelsElement.appendChild(actionLabelElement);
			String actionLabel = i.next();
			actionLabelElement.setAttribute("label", actionLabel);
		}
	}
=====================================================================
Found a 48 line (287 tokens) duplication in the following files: 
Starting at line 412 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 903 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java

	private static MacroDefinition createMacroArc(final Element inputElement, final MacroDefinition macro)
	{
		String arcID = null;
		String arcLabel = null;
		String arcSourceID = null;
		String arcTargetID = null;
		double arcStartX = 0;
		double arcStartY = 0;
		double arcEndX = 0;
		double arcEndY = 0;
		boolean arcRequired = true;
		boolean labelRequired = true;

		// retrieve info from element's attributes
		String retrievedArcID = inputElement.getAttribute("id");
		if (retrievedArcID.length() > 0)
			arcID = retrievedArcID;
		String retrievedArcLabel = inputElement.getAttribute("label");
		if (retrievedArcLabel.length() > 0)
			arcLabel = retrievedArcLabel;
		String retrievedArcSourceID = inputElement.getAttribute("source");
		if (retrievedArcSourceID.length() > 0)
			arcSourceID = retrievedArcSourceID;
		String retrievedArcTargetID = inputElement.getAttribute("target");
		if (retrievedArcTargetID.length() > 0)
			arcTargetID = retrievedArcTargetID;
		String retrievedArcRequired = inputElement.getAttribute("required");
		if (retrievedArcRequired.length() > 0)
		{
			if (retrievedArcRequired.equals("true"))
				arcRequired = true;
			else if (retrievedArcRequired.equals("false"))
				arcRequired = false;
		}
		String retrievedArcStartX = inputElement.getAttribute("startX");
		if (retrievedArcStartX.length() > 0)
			arcStartX = Double.parseDouble(retrievedArcStartX);
		String retrievedArcStartY = inputElement.getAttribute("startY");
		if (retrievedArcStartY.length() > 0)
			arcStartY = Double.parseDouble(retrievedArcStartY);
		String retrievedArcEndX = inputElement.getAttribute("endX");
		if (retrievedArcEndX.length() > 0)
			arcEndX = Double.parseDouble(retrievedArcEndX);
		String retrievedArcEndY = inputElement.getAttribute("endY");
		if (retrievedArcEndY.length() > 0)
			arcEndY = Double.parseDouble(retrievedArcEndY);

		PTNode parentNodeType = macro.getMacroNode(arcSourceID).getNodeType();
=====================================================================
Found a 59 line (282 tokens) duplication in the following files: 
Starting at line 950 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 488 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

		PTNode parentNodeType = MacroLoader.macro.getMacroNode(arcSourceID).getNodeType();
		if (parentNodeType.equals(PTNode.MACRO))
			labelRequired = false;

		// create arc
		PerformanceTreeArc tempArc = new PerformanceTreeArc(arcStartX,
															arcStartY,
															arcEndX,
															arcEndY,
															arcSourceID,
															arcTargetID,
															arcLabel,
															labelRequired,
															arcRequired,
															arcID);

		// extract arcPathPoint details and attach them to arc
		float arcPathPointX = 0;
		float arcPathPointY = 0;
		boolean arcPathPointType = false;
		NodeList arcChildNodes = inputElement.getChildNodes();
		if (arcChildNodes.getLength() > 0)
		{
			// delete arc path points, so that we can add these ones
			tempArc.getArcPath().purgePathPoints();
			for (int i = 1; i < arcChildNodes.getLength() - 1; i++)
			{
				Node arcChildNode = arcChildNodes.item(i);
				if (arcChildNode instanceof Element)
				{
					Element arcElement = (Element) arcChildNode;
					if (arcElement.getNodeName().equals("arcpathpoint"))
					{
						String retrievedArcPathPointType = arcElement.getAttribute("type");
						if (retrievedArcPathPointType.length() > 0)
						{
							if (retrievedArcPathPointType.equals("true"))
								arcPathPointType = true;
							else if (retrievedArcPathPointType.equals("false"))
								arcPathPointType = false;
						}
						String retrievedArcPathPointX = arcElement.getAttribute("x");
						if (retrievedArcPathPointX.length() > 0)
						{
							arcPathPointX = Float.parseFloat(retrievedArcPathPointX);
							arcPathPointX += QueryConstants.ARC_CONTROL_POINT_CONSTANT + 1;
						}
						String retrievedArcPathPointY = arcElement.getAttribute("y");
						if (retrievedArcPathPointY.length() > 0)
						{
							arcPathPointY = Float.parseFloat(retrievedArcPathPointY);
							arcPathPointY += QueryConstants.ARC_CONTROL_POINT_CONSTANT + 1;
						}
						// attach arc path point to arc
						tempArc.getArcPath().addPoint(arcPathPointX, arcPathPointY, arcPathPointType);
					}
				}
			}
		}
=====================================================================
Found a 89 line (279 tokens) duplication in the following files: 
Starting at line 112 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java
Starting at line 112 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java

			ConditionPlaceHandler handler = new ConditionPlaceHandler(parent,place,stateDataLayer);
			place.addMouseListener(handler);
			place.deselect();
					
			super.add(place);
			
			setLayer(place, DEFAULT_LAYER.intValue() + PLACE_TRANSITION_LAYER_OFFSET);
			place.addedToGui(); // this will add the place labels
			
			condPlaces.add(place);
		}

		// We ignore the Annotation nodes - these nodes will need further development
		else if (currentObj instanceof AnnotationNote);
			
		else
		{
			currentObj.deselect();
			super.add(currentObj);
			
	
			if (currentObj instanceof ArcPathPoint)
				setLayer(currentObj, DEFAULT_LAYER.intValue() + ARC_POINT_LAYER_OFFSET);
			
			else if (currentObj instanceof Arc)
				setLayer(currentObj, DEFAULT_LAYER.intValue() + ARC_LAYER_OFFSET);	
			
			else if (currentObj instanceof Transition)
				setLayer(currentObj, DEFAULT_LAYER.intValue() + PLACE_TRANSITION_LAYER_OFFSET);
				
			else if (currentObj instanceof AnnotationNote)
				setLayer(currentObj, DEFAULT_LAYER.intValue() + ANNOTATION_LAYER_OFFSET);	
		}
	}
	
	
	/**
	 * This method sets the condition on all places to be equal zero
	 */
	
	public void setEqualZeroCond()
	{
		for(ConditionPlace curPlace : condPlaces)
		{
			// Update the 'change buffer' in PassageState
			((StateEditor)parent).addStateElement(curPlace.getId(), "=", "0");
			
			// Update the UI
			curPlace.setCondition("=", "0");
		}
	}
	



	/**
	 * This method clears the marking on all states
	 */
	
	public void clearAllCond()
	{
		for(ConditionPlace curPlace : condPlaces)
		{
			// Update the 'change buffer' with a blank condition; this will remove the condition
			((StateEditor)parent).addStateElement(curPlace.getId(), "", "");
			
			// Update the UI
			curPlace.removeCondition();
		}
	}
	
	/**
	 * This method sets the condition on each place to be equal its initial marking
	 */
	
	public void setInitialCond()
	{
		for(ConditionPlace curPlace : condPlaces)
		{
			String currentMarking = Integer.toString(curPlace.getCurrentMarking() );
			((StateEditor)parent).addStateElement(curPlace.getId(), "=", currentMarking);
			
			// Update the UI
			curPlace.setCondition("=", currentMarking);			
		}
	}	
	

}
=====================================================================
Found a 31 line (277 tokens) duplication in the following files: 
Starting at line 493 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 630 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

	for(int i=0; i<4; i++) {
	    precision = orig_precision;
	    ival[i] = (int)val[i];
	    val[i] = (val[i] < 0) ? -val[i] : val[i];

	    if (val[i] >= 1) {
		exp[i] = Math.log(val[i])/LOG10;
	    } else {
		exp[i] = Math.log(val[i]/10)/LOG10;
	    }

	    iexp[i] = (int)exp[i];
	    precision = (precision >= 0) ? --precision : 5;

	    if (val[i] == ival[i]) {
		if (alternate) {
		    if (precision < 0 || iexp[i] <= precision) {
			precision -= iexp[i];
			retbuf = buildFloat(buf, arg[i]);
		    } else retbuf = buildExp(buf, arg[i], upper);
		} else {
		    if (precision < 0 || iexp[i] <= precision) {
			precision = -1;
			retbuf = buildInteger(buf, (long)arg[i]);
		    } else retbuf = buildExp(buf, arg[i], upper);
		}
	    } else if (iexp[i] < -4 || iexp[i] > precision)
		retbuf = buildExp(buf, arg[i], upper);
	    else retbuf = buildFloat(buf, arg[i]);

	    if(i < 3) {
=====================================================================
Found a 48 line (265 tokens) duplication in the following files: 
Starting at line 195 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/PerformanceTreeExporter.java
Starting at line 52 of /usr/local/git/PipeCoursework/src/pipe/gui/Export.java

    if (factories.length == 0) throw new RuntimeException("No suitable factory found for export to PS");

    FileOutputStream f = new FileOutputStream(filename);
    // Get a print service from the factory, create a print job and print
    factories[0].getPrintService(f).createPrintJob().print(
        new SimpleDoc(g, flavour, null), 
        new HashPrintRequestAttributeSet()
    );
    f.close();
  }
  
  
  public static void toPNG(JComponent g,String filename) throws IOException {
    Iterator i=ImageIO.getImageWritersBySuffix("png");
    if(!i.hasNext()) throw new RuntimeException("No ImageIO exporters can handle PNG");
    
    File f=new File(filename);
    BufferedImage img=new BufferedImage(g.getPreferredSize().width,g.getPreferredSize().height,BufferedImage.TYPE_3BYTE_BGR);
    g.print(img.getGraphics());
    ImageIO.write(img,"png",f);
  }
  
  public static void toPrinter(Object g) throws PrintException {
    ///* The Swing way
    PrintRequestAttributeSet pras = new HashPrintRequestAttributeSet();
    DocFlavor flavour = DocFlavor.SERVICE_FORMATTED.PRINTABLE;
    PrintService printService[] = PrintServiceLookup.lookupPrintServices(flavour, pras);
    if(printService.length==0) throw new PrintException("\nUnable to locate a compatible printer service.\nTry exporting to PostScript.");
    PrintService defaultService = PrintServiceLookup.lookupDefaultPrintService();
    PrintService service = ServiceUI.printDialog(null, 200, 200, printService, defaultService, flavour, pras);
    if (service != null) {
      DocPrintJob job = service.createPrintJob();
      DocAttributeSet das = new HashDocAttributeSet();
      Doc doc = new SimpleDoc(g, flavour, das);
      job.print(doc, pras);
    }
    //*/  
    /* The AWT way:
    PrinterJob pjob = PrinterJob.getPrinterJob();
    PageFormat pf = pjob.defaultPage();
    pjob.setPrintable(g, pf);
    try {
      if (pjob.printDialog()) pjob.print();
    } catch (PrinterException e) {
      error=e.toString();
    }
    //*/
  }
=====================================================================
Found a 58 line (263 tokens) duplication in the following files: 
Starting at line 460 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 951 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java

		if (parentNodeType.equals(PTNode.MACRO))
			labelRequired = false;

		// create arc
		PerformanceTreeArc tempArc = new PerformanceTreeArc(arcStartX,
															arcStartY,
															arcEndX,
															arcEndY,
															arcSourceID,
															arcTargetID,
															arcLabel,
															labelRequired,
															arcRequired,
															arcID);

		// extract arcPathPoint details and attach them to arc
		float arcPathPointX = 0;
		float arcPathPointY = 0;
		boolean arcPathPointType = false;
		NodeList arcChildNodes = inputElement.getChildNodes();
		if (arcChildNodes.getLength() > 0)
		{
			// delete arc path points, so that we can add these ones
			tempArc.getArcPath().purgePathPoints();
			for (int i = 1; i < arcChildNodes.getLength() - 1; i++)
			{
				Node arcChildNode = arcChildNodes.item(i);
				if (arcChildNode instanceof Element)
				{
					Element arcElement = (Element) arcChildNode;
					if (arcElement.getNodeName().equals("arcpathpoint"))
					{
						String retrievedArcPathPointType = arcElement.getAttribute("type");
						if (retrievedArcPathPointType.length() > 0)
						{
							if (retrievedArcPathPointType.equals("true"))
								arcPathPointType = true;
							else if (retrievedArcPathPointType.equals("false"))
								arcPathPointType = false;
						}
						String retrievedArcPathPointX = arcElement.getAttribute("x");
						if (retrievedArcPathPointX.length() > 0)
						{
							arcPathPointX = Float.parseFloat(retrievedArcPathPointX);
							arcPathPointX += QueryConstants.ARC_CONTROL_POINT_CONSTANT + 1;
						}
						String retrievedArcPathPointY = arcElement.getAttribute("y");
						if (retrievedArcPathPointY.length() > 0)
						{
							arcPathPointY = Float.parseFloat(retrievedArcPathPointY);
							arcPathPointY += QueryConstants.ARC_CONTROL_POINT_CONSTANT + 1;
						}
						// attach arc path point to arc
						tempArc.getArcPath().addPoint(arcPathPointX, arcPathPointY, arcPathPointType);
					}
				}
			}
		}
=====================================================================
Found a 73 line (262 tokens) duplication in the following files: 
Starting at line 50 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/PerformanceTreeExporter.java
Starting at line 115 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/PerformanceTreeExporter.java

	public static void exportMacroView(MacroView g,int format) {
		boolean gridEnabled = Grid.enabled();
		String filename = null;

		if(g.getComponentCount() == 0) 
			return;

		if(QueryManager.getFile() != null) {
			filename = QueryManager.getFile().getAbsolutePath();
			// change file extension
			int dotpos = filename.lastIndexOf('.');
			if(dotpos > filename.lastIndexOf(System.getProperty("file.separator"))) {
				// dot is for extension
				filename = filename.substring(0,dotpos+1);
				switch(format) {
				case PNG:        
					filename += "png"; 
					break;
				case EPS: 
					filename += "eps";  
					break;
				}
			}
		}

		// Stuff to make it export properly
		g.updatePreferredSize();
		PerformanceTreeObject.ignoreSelection(true);
		
		if(gridEnabled)
			Grid.disableGrid();

		try {
			switch(format) {
			case PNG:
				filename = new FileBrowser("PNG image","png",filename).saveFile();
				if(filename != null)
					toPNG(g,filename);
				break;
			case EPS:
				filename = new FileBrowser("ExtendedPostScript file","eps",filename).saveFile();
				if(filename != null)
					toPostScript(g,filename);
				break;
			case PRINTER:
				toPrinter(g);
				break;
			}
		} catch (Exception e) {
			// There was some problem with the action
			JOptionPane.showMessageDialog(QueryManager.getEditor(),
					"There were errors performing the requested action:\n"+e,
					"Error",JOptionPane.ERROR_MESSAGE
			);
		}

		if(gridEnabled)
			Grid.enableGrid();
		
		PerformanceTreeObject.ignoreSelection(false);
		g.repaint();

		return;
	}
	
	/**
	 * Exports a Performance Tree query to an EPS file
	 * @param g
	 * @param filename
	 * @throws PrintException
	 * @throws IOException
	 */
	public static void toPostScript(Object g,String filename) throws PrintException, IOException {
=====================================================================
Found a 19 line (254 tokens) duplication in the following files: 
Starting at line 134 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 207 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

    results.add("Comparison transition name");
    results.add("Comparison");
    
    for(i = 0 ; i < source.length ; i++) {
      k = -1;
      // Find matching Transition with a match for either id or name
      for(j = 0 ; j < comparison.length; j++) {
        if(comparison[j] != null && source[i] != null && source[i].getId() != null && comparison[j].getId() != null && source[i].getName() != null && comparison[j].getName() != null)
          if(source[i].getId().equals(comparison[j].getId()) || source[i].getName().equals(comparison[j].getName()))
            k = j;
      }
      j = k;

      if(j != -1 && source[i] != null && comparison[j] != null) {
        results.add(source[i].getName());
        results.add(comparison[j].getName());
        if((!compareID   || source[i].getId().equals(comparison[j].getId())) &&
           (!compareName || source[i].getName().equals(comparison[j].getName())) &&
           (!compareRate || source[i].getRate() == comparison[j].getRate())) {
=====================================================================
Found a 49 line (247 tokens) duplication in the following files: 
Starting at line 257 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 299 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java

				  addState.setParent(Passage.this);
				  addState.addState(pnmlData);
			  }
			  
			  else if (event.getSource() == removeBtn)
			  {
				  int startSelected[] = startStatesList.getSelectedIndices();
				  int endSelected[] = endStatesList.getSelectedIndices();
				  
				  int maxSize = startSelected.length + endSelected.length;
				  int[] removeList = new int [maxSize];
				  
				  // These loops merges the two sets of selected indices, removing duplicates
				  int i=0,j=0,k=0;
				  for(i =0; i< startSelected.length;i++)
				  {
					  while(j<endSelected.length && endSelected[j]<startSelected[i])
						  removeList[k++] = endSelected[j++];
					  
					  if(j<endSelected.length && endSelected[j] == startSelected[i])
						  j++;
						  
					  removeList[k++] = startSelected[i];
				  }				  
				  while(j<endSelected.length)
					  removeList[k++] = endSelected[j++];
				  
				  
				  // Remove the state groups
				  for(i=0; i<k; i++)
					  pnmlData.removeStateGroup(stateGroupData[ removeList[i] ]);
				  
				  // Update local array and UI  
				  updateStateLists(); 				 					
			  }
			  
			  else if (event.getSource() == editBtn)
			  {
				 int selectedState = startStatesList.getSelectedIndex();
				 
				 // If the state is not selected from the source states, retrieve from endStatesList 
				 if (selectedState == -1)
					 selectedState = endStatesList.getSelectedIndex();
				 
				 
				 if (selectedState != -1)
				 {
					 StateEditor editState = new StateEditor();
					 editState.setParent(Passage.this);					 
=====================================================================
Found a 65 line (240 tokens) duplication in the following files: 
Starting at line 23 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ProgressBarHTMLPane.java
Starting at line 23 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ProgressBarHTMLPane.java

public class ProgressBarHTMLPane extends JPanel
{
	private static final long serialVersionUID = 1L;
	JEditorPane results;
	JProgressBar progressBar;
  
	public ProgressBarHTMLPane(String title)
	{
		super(new BorderLayout());
	
		// Add results pane
	    results=new JEditorPane();
	    results.setEditable(false);	  
	    results.setContentType("text/html");    
	
	    JScrollPane scroller=new JScrollPane(results);
	    scroller.setPreferredSize(new Dimension(400,450));
	    scroller.setBorder(new BevelBorder(BevelBorder.LOWERED));

	    progressBar = new JProgressBar();
	    
	    this.add(scroller, BorderLayout.CENTER);

	    this.add(progressBar, BorderLayout.PAGE_END);
	    
	    this.setBorder(new TitledBorder(new EtchedBorder(),title));
  }
  
  public void setText(String text)
  {
    results.setText("<html><head><style type=\"text/css\">" +
        "body{font-family:Arial,Helvetica,sans-serif;text-align:center;background:#ffffff}" +
        "td.colhead{font-weight:bold;text-align:center;background:#ffffff}" +
        "td.rowhead{font-weight:bold;background:#ffffff}"+
        "td.cell{text-align:center;padding:5px,0}" +
        "tr.even{background:#a0a0d0}" +
        "tr.odd{background:#c0c0f0}" +
        "td.empty{background:#ffffff}" +
        "</style></head><body>"+text+"</body></html>");
    results.setCaretPosition(0); // scroll to top
  }
  
  public String getText(){
  	return results.getText();
  }
  
  public void initProgressBar(int min, int max)
  {
	  progressBar.setIndeterminate(false);
	  progressBar.setMinimum(min);
	  progressBar.setMaximum(max);
  }
  
  public void updateProgressBar(int newValue)
  {
	  progressBar.setValue(newValue);
  }
  
  public void resetPane()
  {
	  setText("");
	  progressBar.setValue(0);
  }
 
} 
=====================================================================
Found a 48 line (237 tokens) duplication in the following files: 
Starting at line 26 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsGraph.java
Starting at line 26 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsGraph.java

public class ResultsGraph extends JPanel
{

	private static final long serialVersionUID = 1L;

	GraphPanel graph;
  
	public ResultsGraph()
	{
		
		super(new BorderLayout());
		setBorder(new TitledBorder(new EtchedBorder(),"Results"));
    
		graph=new GraphPanel();
		graph.setPreferredSize(new Dimension(400,450));
		
		add(graph,BorderLayout.CENTER);
    
		add(new ButtonBar("Save",saveButtonClick),BorderLayout.PAGE_END);
  }  
  
  private ActionListener saveButtonClick=new ActionListener()
  {
    public void actionPerformed(ActionEvent e)
    {
      String filename=null;
      if(CreateGui.getFile()!=null) filename=CreateGui.getFile()+" graph.png";
      filename=new FileBrowser("PNG image","png",filename).saveFile();
      if(filename!=null) try {
        graph.setIgnoreRepaint(true);
        Border b=graph.getBorder();
        graph.setBorder(null);
        Dimension d=graph.getPreferredSize(); // Export uses preferred size for exported file dimensions
        graph.setSize(640,480);
        graph.setPreferredSize(graph.getSize());
        Export.toPNG(graph,filename);
        graph.setPreferredSize(d);
        graph.setBorder(b);
        graph.setIgnoreRepaint(false);
      } catch (IOException ex) {
      }
    }
  };
  
  public synchronized GraphPanel getGraph() {
    return graph;
  }
}
=====================================================================
Found a 22 line (236 tokens) duplication in the following files: 
Starting at line 1941 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 2022 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

		frac = sz / total;
		if(el instanceof Node) {
		    if(dir > 1) {
			el.setPatch(box.getX(), previous, box.getWidth(), (next = frac * box.getHeight()));
		    } else {
			el.setPatch(previous, box.getY(), (next = frac * box.getWidth()), box.getHeight());
		    }
		    p = el.getPatch();
		    el.setAttribute(POS_ATTR, new GrappaPoint(p.getCenterX(), -p.getCenterY()));
		    el.setAttribute(WIDTH_ATTR, new Double(p.getWidth()/72.0));
		    el.setAttribute(HEIGHT_ATTR, new Double(p.getHeight()/72.0));
		    if (el.getLocalAttribute(COLOR_ATTR) == null)
		        el.setAttribute(COLOR_ATTR,"white");
		    attr = el.getAttribute(STYLE_ATTR);
		    if(attr == null) {
			el.setAttribute(STYLE_ATTR, "filled,lineColor(black)");
		    } else {
			style = attr.getStringValue();
			el.setAttribute(STYLE_ATTR,style == null || style.length() == 0 ? "filled,lineColor(black)" : style + ",filled,lineColor(black)");
		    }
		} else {
		    if(dir > 1) {
=====================================================================
Found a 74 line (229 tokens) duplication in the following files: 
Starting at line 456 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 321 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

	}

	
	/**
	 * fire()
	 * Determines all the states resulting from firing enabled transitions
	 * in the state passed as an argument
	 * 
	 * @param vs		The state to determine successors from
	 * @param succ		A stack in which to store successors
	 */
	private static int fire(DataLayer pnmlData, State vs, Stack succ, boolean immediateTransition){
		int transCount = pnmlData.getTransitionsCount();
		int transitionsfired = 0;
		int[] newstate = null;
		boolean[] enabledTransitions = getTransitionEnabledStatusArray(pnmlData, vs.getState(), immediateTransition);
		for(int index = 0; index < transCount; index++){
			if(enabledTransitions[index]){ // If the current transition is enabled
				newstate = fireTransition(pnmlData, vs.getState(), index);
				succ.push(new State(newstate));
				transitionsfired++;
				transitions.push(new Integer (index));
							
			}
		}
		return transitionsfired;
	}
	
	/**
	 * fireTransition()
	 * 
	 * Produces a new markup vector to simulate the firing of a transition.
	 * Destroys the number of tokens shown in CMinus for a given place and
	 * transition, and creates the number of tokens shown in CPlus.
	 * 
	 * @author Matthew Cook, James Bloom and Clare Clark (original code)
	 * 			Nadeem Akharware (optimisation)
	 * 
	 * @param pnmlData		The petri net data model
	 * @param marking		The state/marking to fire from
	 * @param transIndex	Which transition to fire
	 * @return				The new marking/state vector resulting from the fired transition
	 */
	private static int[] fireTransition(DataLayer pnmlData, int[] marking, int transIndex) {
		int count;               //index for 'for loop'
		int CMinusValue;         //Value from C- matrix
		int CPlusValue;          //Value from C+ matrix
		
		int[][] CMinus = pnmlData.getBackwardsIncidenceMatrix();
		int[][] CPlus = pnmlData.getForwardsIncidenceMatrix();

		//Create marking array to return
		int[] newmarking = new int[marking.length];

		for(count = 0; count < marking.length; count++)
		{
			CMinusValue = CMinus[count][transIndex];
			CPlusValue = CPlus[count][transIndex];
			newmarking[count] = marking[count] - CMinusValue + CPlusValue;
		}
		return newmarking;
	}
	
	/**
	 * getTransitionEnabledStatusArray()
	 * Calculate which transitions are enabled given a specific marking.
	 * 
	 * @author Matthew Cook (original code), Nadeem Akharware (optimisation)
	 * 
	 * @param DataLayer - the net  
	 * @param int[] - the marking
	 * @return boolean[] - an array of booleans specifying which transitions are enabled in the specified marking
	 */
	private static boolean[] getTransitionEnabledStatusArray(DataLayer pnmlData, int[] marking, boolean immediateTransitions) {
=====================================================================
Found a 30 line (220 tokens) duplication in the following files: 
Starting at line 429 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 141 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

		final float[] D = new float[n + 1];
		int i;
		/*
		 * We solve the equation [2 1 ] [D[0]] [3(x[1] - x[0]) ] |1 4 1 | |D[1]|
		 * |3(x[2] - x[0]) | | 1 4 1 | | . | = | . | | ..... | | . | | . | | 1 4
		 * 1| | . | |3(x[n] - x[n-2])| [ 1 2] [D[n]] [3(x[n] - x[n-1])]
		 * 
		 * by using row operations to convert the matrix to upper triangular and
		 * then back sustitution. The D[i] are the derivatives at the knots.
		 */

		gamma[0] = 1.0f / 2.0f;
		for (i = 1; i < n; i++)
		{
			gamma[i] = 1 / (4 - gamma[i - 1]);
		}
		gamma[n] = 1 / (2 - gamma[n - 1]);

		delta[0] = 3 * (x[1] - x[0]) * gamma[0];
		for (i = 1; i < n; i++)
		{
			delta[i] = (3 * (x[i + 1] - x[i - 1]) - delta[i - 1]) * gamma[i];
		}
		delta[n] = (3 * (x[n] - x[n - 1]) - delta[n - 1]) * gamma[n];

		D[n] = delta[n];
		for (i = n - 1; i >= 0; i--)
		{
			D[i] = delta[i] - gamma[i] * D[i + 1];
		}
=====================================================================
Found a 23 line (218 tokens) duplication in the following files: 
Starting at line 300 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 295 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

			arcTargetID = inputArc.getTarget().getId();
		else arcTargetID = "";
		String arcRequired = Boolean.toString(inputArc.isRequired());
		String arcStartX = Double.toString(inputArc.getArcPath().getStartPoint().getX());
		String arcStartY = Double.toString(inputArc.getArcPath().getStartPoint().getY());
		String arcEndX = Double.toString(inputArc.getArcPath().getEndPoint().getX());
		String arcEndY = Double.toString(inputArc.getArcPath().getEndPoint().getY());

		arcElement.setAttribute("id", arcID);
		arcElement.setAttribute("label", arcLabel);
		arcElement.setAttribute("source", arcSourceID);
		arcElement.setAttribute("target", arcTargetID);
		arcElement.setAttribute("required", arcRequired);
		arcElement.setAttribute("startX", arcStartX);
		arcElement.setAttribute("startY", arcStartY);
		arcElement.setAttribute("endX", arcEndX);
		arcElement.setAttribute("endY", arcEndY);

		// arcPathPoint information needs to be saved, too
		int arcPathPoints = inputArc.getArcPath().getArcPathDetails().length;
		String[][] point = inputArc.getArcPath().getArcPathDetails();
		for (int i = 0; i < arcPathPoints; i++)
		{
=====================================================================
Found a 18 line (208 tokens) duplication in the following files: 
Starting at line 784 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 322 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

			node = new SteadyStateStatesNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.SUBSET.toString()))
			node = new SubsetNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.ACTIONS.toString()))
			node = new ActionsNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.BOOL.toString()))
			node = new BoolNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.NUM.toString()))
			node = new NumNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.STATEFUNCTION.toString()))
			node = new StateFunctionNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.STATES.toString()))
			node = new StatesNode(nodePositionX, nodePositionY, nodeID);
		else if (nodeType.equals(PTNode.ARGUMENT.toString()))
			node = new ArgumentNode(nodePositionX, nodePositionY, nodeID);

		if (nodeIncomingArcID != null)
			node.setIncomingArcID(nodeIncomingArcID);
=====================================================================
Found a 32 line (197 tokens) duplication in the following files: 
Starting at line 76 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java
Starting at line 82 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java

		if((diffObj instanceof PetriNetObject) && (diffObj != null))
			add((PetriNetObject)diffObj);			
		repaint();
	}

	public void updatePreferredSize() {
		// iterate over net objects and setPreferredSize() accordingly
		Component[] components=getComponents();
		Dimension d=new Dimension(0,0);
		int x,y;
		for(int i = 0; i < components.length; i++) {
			Rectangle r=components[i].getBounds();
			x = r.x + r.width + 100;
			y = r.y + r.height + 100;
			if (x > d.width)  
				d.width = x;
			if (y > d.height) 
				d.height = y;
		}
		setPreferredSize(d);
	}

	public void add(PetriNetObject currentObj) {
		if (currentObj instanceof Place) {
			ConditionPlace place = new ConditionPlace((Place)currentObj);
			// Set the state group condition associated with the place
			StateElement placeCondition = activeStateGroup.getCondition(place.getId());
			if (placeCondition != null)
				place.setCondition(placeCondition.getOperator(), placeCondition.getPlaceB());

			ConditionPlaceHandler handler = new ConditionPlaceHandler(parent,place);
			place.addMouseListener(handler);			
=====================================================================
Found a 59 line (195 tokens) duplication in the following files: 
Starting at line 82 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/Analyse.java
Starting at line 87 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Analyse.java

			  serverSock.send(clearCache);
			  
			  //System.out.println("We will be telling the server that clearCache = " + clearCache);
			  
			  updateUI("Server Scheduling Process");
			  StatusListener serverListener = new StatusListener(serverSock, progressPane, status);
			  status = serverListener.listen();
			  
			
			  
			  updateUI("Receiving Results");
			  ResultsReceiver resultsReceiver = new ResultsReceiver(serverSock, resultsPanel, status);
			  resultsReceiver.receive();
			  
			  updateUI("Closing Connection");		  
			  serverSock.close();
			  
			  
			  // Slow the transition between progress tab and results tab
			  try {
				Thread.sleep(800);
			  } catch (InterruptedException e) {} 

			  
			  			  
			  // Add results pane and set active
			  tabbedPane.addTab("Results", resultsPanel);
			  tabbedPane.setSelectedComponent(resultsPanel);
			  
		  }
		  catch (StreamCorruptedException sce) {
		    	 updateUI("Stream Corrupted Exception" + sce.getMessage());
		  }
		  catch(UnknownHostException uhe){
		    	 updateUI("Unknown host exception " + uhe.getMessage());
		  }
		  catch (OptionalDataException ode) {
		   	 updateUI("Data Exception" + ode.getMessage());
		  }
		  catch (IOException ioe) {
		   	 updateUI("Unable to connect to server " + serverAddr + " : " +  serverPort + ": " + ioe.getMessage());	 
	      }
		
	}
	
	private void updateUI(String update)
	{
	  // setText is a thread safe operation so we can freely use it within this thread
	  status += update + "<br>";
	  progressPane.setText(status); 
	}


	public void setTabbedPane(JTabbedPane inputPane)
	{
		tabbedPane = inputPane;
	}

}
=====================================================================
Found a 36 line (193 tokens) duplication in the following files: 
Starting at line 30 of /usr/local/git/PipeCoursework/test/pipe/modules/reachabilityGraphGenerator/ReachabilityGraphTest.java
Starting at line 21 of /usr/local/git/PipeCoursework/test/pipe/modules/reachabilityGraphGenerator/ReachabilityGraphGeneratorTest.java

	protected void setUp() throws Exception {
		super.setUp();
		nets = new File(new URI(this.getClass().getClassLoader().
				getResource("Example nets").toString())).listFiles();
		currentMarkings = new ArrayList();
		testNets = new ArrayList();
		addNets("classicgspn");
		addNets("gspn1");	
		addNets("readers & writers");
	}


	protected void tearDown() throws Exception {
		super.tearDown();
		nets = null;
		testNets = null;
		currentMarkings = null;
	}


	private void addNets (String a) {
		int i = 0;
		try {
			for (i = 0; i < nets.length && !nets[i].getName().toLowerCase().endsWith(a + ".xml"); i++);
			DataLayer testNet = new DataLayer(nets[i]);
			testNets.add(testNet);
			currentMarkings.add(testNet.getCurrentMarkingVector());
		}
		catch (Exception e){
			System.out.println("Unable to start test - error opening example files for testing");
		}

	}


	public void testDotFile()throws Exception{
=====================================================================
Found a 27 line (187 tokens) duplication in the following files: 
Starting at line 2279 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 2312 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	Enumeration elems = null;
	if((types&NODE) != 0 && nodedict != null) {
	    count += nodedict.size(); 
	    retVec.ensureCapacity(count);
	    elems = nodedict.elements();
	    while(elems.hasMoreElements()) {
		retVec.addElement(elems.nextElement());
	    }
	}
	if((types&EDGE) != 0 && edgedict != null) {
	    count += edgedict.size(); 
	    retVec.ensureCapacity(count);
	    elems = edgedict.elements();
	    while(elems.hasMoreElements()) {
		retVec.addElement(elems.nextElement());
	    }
	}
	if(graphdict != null) {
	    if((types&SUBGRAPH) != 0) {
		count += graphdict.size(); 
		retVec.ensureCapacity(count);
	    }
	    elems = graphdict.elements();
	    while(elems.hasMoreElements()) {
		((Subgraph)(elems.nextElement())).recurseVectorOfElements(types,retVec,count);
	    }
	}
=====================================================================
Found a 50 line (184 tokens) duplication in the following files: 
Starting at line 1078 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java
Starting at line 346 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java

	}

	/** This method takes care of the case when a node is linked directly to
	 *  a SequentialNode through an optional arc. In such as case, the arc 
	 *  should be removed along with the node.
	 * @return
	 */
	private boolean sequentialNodeCase(PerformanceTreeNode node) {
		if (node.getIncomingArc() != null) {
			PerformanceTreeArc incomingArc = node.getIncomingArc();
			PerformanceTreeNode parentNode = incomingArc.getSource();
			if (!incomingArc.isRequired() && 
					parentNode instanceof SequentialNode &&
					sequentialNodeHasAtLeastOneOptionalArc(parentNode)) {
				node.delete();
				incomingArc.delete();
				return true;
			}
			else
				return false;
		}
		else
			return false;
	}

	/**
	 * We should only allow deletion of the associated optional arc if there are
	 * at least two optional arcs. This is so, because a new optional arc is only
	 * created whenever the last free arc is assigned to a node.
	 * @param node
	 * @return
	 */
	private boolean sequentialNodeHasAtLeastOneOptionalArc(PerformanceTreeNode node) {
		if (node instanceof SequentialNode) {
			SequentialNode seqNode = (SequentialNode)node;
			ArrayList<String> outgoingArcIDs = (ArrayList<String>)seqNode.getOutgoingArcIDs();
			Iterator<String> i = outgoingArcIDs.iterator();
			int optionalArcCount = 0;
			while (i.hasNext()) {
				PerformanceTreeArc arc = QueryManager.getData().getArc(i.next());
				if (!arc.isRequired()) 
					optionalArcCount++;
			}
			if (optionalArcCount > 1) 
				return true;
			else
				return false;
		}
		else return false;
	}
=====================================================================
Found a 46 line (182 tokens) duplication in the following files: 
Starting at line 594 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 530 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

		drawButtons.add(addIntelligentButton(this.toolBar2, (Action) this.actions.get("Draw Macro")));

		JToolBar[] toolbars = new JToolBar[2];
		toolbars[0] = this.toolBar1;
		toolbars[1] = this.toolBar2;
		return toolbars;
	}

	/**
	 * Creates a button that can keep in synch with its associated action i.e.
	 * will be automatically pressed if the equivalent menu option is clicked
	 * The new button is added to the "toolBar" parameter
	 * 
	 * @param toolBar -
	 *            the JToolBar to add the button to
	 * @param action -
	 *            the action that the button should perform
	 * @return
	 */
	private AbstractButton addIntelligentButton(final JToolBar toolbar, final Action action)
	{
		URL selectedIconURL = (URL) action.getValue("selectedIconURL");
		ImageIcon selectedIcon = new ImageIcon(selectedIconURL);

		final AbstractButton b = new JToggleButton(action);
		b.setText(null);
		b.setSelectedIcon(selectedIcon);
		String actionName = (String) action.getValue(Action.NAME);
		b.setActionCommand(actionName);

		ActionListener actionListener = new ActionListener()
		{
			public void actionPerformed(ActionEvent e)
			{
				String actionName = e.getActionCommand();
				String msg = "";
				if (actionName.equals("Select"))
				{
					msg = QueryManager.addColouring("Select individual objects, arc endpoints or groups of objects.");
				}
				else if (actionName.equals("Drag"))
				{
					msg = QueryManager.addColouring("Drag around the contents of the canvas by holding down the mouse "
													+ "button and moving the mouse.");
				}
				else if (actionName.equals("Sequential"))
=====================================================================
Found a 42 line (179 tokens) duplication in the following files: 
Starting at line 290 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 242 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java

	}

	/**
	 * This method is called whenever the frame is moved, resized etc. It
	 * iterates over the existing query objects and repaints them.
	 */
	@Override
	public void paintComponent(final Graphics g)
	{
		Graphics2D g2 = (Graphics2D) g;
		super.paintComponent(g2);
		if (Grid.enabled())
		{
			Grid.updateSize(this);
			Grid.drawGrid(g);
		}
		this.selection.updateBounds();
	}

	public void updatePreferredSize()
	{
		// iterate over net objects
		// setPreferredSize() accordingly
		Component[] components = getComponents();
		Dimension d = new Dimension(0, 0);
		for (int i = 0; i < components.length; i++)
		{
			if (components[i] instanceof PerformanceTreeSelectionObject)
				continue; // PerformanceTreeSelectionObject not included
			Rectangle r = components[i].getBounds();
			int x = r.x + r.width + 100;
			int y = r.y + r.height + 100;
			if (x > d.width)
				d.width = x;
			if (y > d.height)
				d.height = y;
		}
		setPreferredSize(d);
		getParent().validate();
	}

	public void zoom()
=====================================================================
Found a 70 line (177 tokens) duplication in the following files: 
Starting at line 39 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeZoomController.java
Starting at line 24 of /usr/local/git/PipeCoursework/src/pipe/gui/ZoomController.java

		myNet = view;
	}

	public void zoomOut() {

		percent -= 10;
	
		if(percent<40){
			percent += 10;
			return;
		}
		transform.setToScale(percent * 0.01,percent * 0.01);
	}
	
	public void zoomIn(){
		percent += 10;
		transform.setToScale(percent * 0.01,percent * 0.01);		
	}

	public AffineTransform getTransform() {
		return transform;
	}

	public int getPercent() {
		return percent;
	}
	
	public void setPercent(int newPercent) {
		if(newPercent>=40 && newPercent<=2000)
			percent=newPercent;
	}

	/**
	 * Calculates the value of the screen distance val at 100% zoom
	 * 
	 * @param val
	 * @return
	 */
	public int getUnzoomedValue(double val) {
		return (int)(val / (percent * 0.01));
	}

	/**
	 * Calculates where the correct screen x position at the current zoom is
	 * for an object with "real" x value locationX.
	 * 
	 * @param locationX
	 * @return
	 */
	public double getZoomPositionForXLocation(double locationX) {
		return locationX * percent * 0.01;
	}

	/**
	 * Calculates where the correct screen y position at the current zoom is
	 * for an object with "real" y value locationY.
	 * 
	 * @param locationY
	 * @return
	 */
	public double getZoomPositionForYLocation(double locationY) {
		return locationY * percent * 0.01;
	}

	public void setZoom(int newPercent) {
		setPercent(newPercent);
		transform.setToScale(percent * 0.01,percent * 0.01);
	}
	
}
=====================================================================
Found a 37 line (177 tokens) duplication in the following files: 
Starting at line 323 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 318 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

			MacroWriter.createArcPathPoint(point[i][0], point[i][1], point[i][2], arcElement, document, i);
		}
	}

	/**
	 * This method serialises the information of an ArcPathPoint
	 */
	private static void createArcPathPoint(	final String x,
											final String y,
											final String type,
											final Element arcElement,
											final Document document,
											final int id)
	{
		Element arcPathPoint = document.createElement("arcpathpoint");
		arcElement.appendChild(arcPathPoint);

		String pointId = String.valueOf(id);
		if (pointId.length() < 3)
			pointId = "0" + pointId;
		if (pointId.length() < 3)
			pointId = "0" + pointId;

		arcPathPoint.setAttribute("id", pointId);
		arcPathPoint.setAttribute("type", type);
		arcPathPoint.setAttribute("x", x);
		arcPathPoint.setAttribute("y", y);
	}

	/**
	 * This method serialises the state and action labels
	 * 
	 * @param document
	 */
	private static void serialiseStateAndActionLabels(final Element tree, final Document document)
	{
		HashMap<String, ArrayList<String>> retrievedStateLabels = QueryManager.getData().getStateLabels();
=====================================================================
Found a 44 line (176 tokens) duplication in the following files: 
Starting at line 354 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 69 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/DeletePerformanceTreeObjectAction.java

		if (node.getIncomingArc() != null) {
			PerformanceTreeArc incomingArc = node.getIncomingArc();
			PerformanceTreeNode parentNode = incomingArc.getSource();
			if (!incomingArc.isRequired() && 
				parentNode instanceof SequentialNode &&
				sequentialNodeHasAtLeastOneOptionalArc(parentNode)) {
				node.delete();
				incomingArc.delete();
				return true;
			}
			else
				return false;
		}
		else
			return false;
	}
	
	/**
	 * We should only allow deletion of the associated optional arc if there are
	 * at least two optional arcs. This is so, because a new optional arc is only
	 * created whenever the last free arc is assigned to a node.
	 * @param node
	 * @return
	 */
	private boolean sequentialNodeHasAtLeastOneOptionalArc(PerformanceTreeNode node) {
		if (node instanceof SequentialNode) {
			SequentialNode seqNode = (SequentialNode)node;
			ArrayList<String> outgoingArcIDs = (ArrayList<String>)seqNode.getOutgoingArcIDs();
			Iterator<String> i = outgoingArcIDs.iterator();
			int optionalArcCount = 0;
			while (i.hasNext()) {
				PerformanceTreeArc arc = QueryManager.getData().getArc(i.next());
				if (!arc.isRequired()) 
					optionalArcCount++;
			}
			if (optionalArcCount > 1) 
				return true;
			else
				return false;
		}
		else return false;
	}

}
=====================================================================
Found a 42 line (175 tokens) duplication in the following files: 
Starting at line 1085 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java
Starting at line 69 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/DeletePerformanceTreeObjectAction.java

		if (node.getIncomingArc() != null) {
			PerformanceTreeArc incomingArc = node.getIncomingArc();
			PerformanceTreeNode parentNode = incomingArc.getSource();
			if (!incomingArc.isRequired() && 
				parentNode instanceof SequentialNode &&
				sequentialNodeHasAtLeastOneOptionalArc(parentNode)) {
				node.delete();
				incomingArc.delete();
				return true;
			}
			else
				return false;
		}
		else
			return false;
	}
	
	/**
	 * We should only allow deletion of the associated optional arc if there are
	 * at least two optional arcs. This is so, because a new optional arc is only
	 * created whenever the last free arc is assigned to a node.
	 * @param node
	 * @return
	 */
	private boolean sequentialNodeHasAtLeastOneOptionalArc(PerformanceTreeNode node) {
		if (node instanceof SequentialNode) {
			SequentialNode seqNode = (SequentialNode)node;
			ArrayList<String> outgoingArcIDs = (ArrayList<String>)seqNode.getOutgoingArcIDs();
			Iterator<String> i = outgoingArcIDs.iterator();
			int optionalArcCount = 0;
			while (i.hasNext()) {
				PerformanceTreeArc arc = QueryManager.getData().getArc(i.next());
				if (!arc.isRequired()) 
					optionalArcCount++;
			}
			if (optionalArcCount > 1) 
				return true;
			else
				return false;
		}
		else return false;
	}
=====================================================================
Found a 36 line (172 tokens) duplication in the following files: 
Starting at line 1429 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 1205 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

			QueryEditor.this.queryView.getParent().validate();

			double newZoomedX = zoomer.getZoomPositionForXLocation(currentXNoZoom);
			double newZoomedY = zoomer.getZoomPositionForYLocation(currentYNoZoom);

			int newViewX = (int) (newZoomedX - thisView.getWidth() * 0.5);
			if (newViewX < 0)
			{
				newViewX = 0;
			}
			int newViewY = (int) (newZoomedY - thisView.getHeight() * 0.5);
			if (newViewY < 0)
			{
				newViewY = 0;
			}

			thisView.setViewPosition(new Point(newViewX, newViewY));
		}

		private String validatePercent(final String selection)
		{
			try
			{
				String toTest = selection;

				if (selection.endsWith("%"))
				{
					toTest = selection.substring(0, selection.length() - 1);
				}

				if (Integer.parseInt(toTest) < 40 || Integer.parseInt(toTest) > 2000)
					throw new Exception();
				else return toTest;
			}
			catch (Exception e)
			{
=====================================================================
Found a 26 line (169 tokens) duplication in the following files: 
Starting at line 131 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 96 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

		String osName = System.getProperty("os.name").toLowerCase();
		try {
			if (osName.indexOf("windows") > -1 ) {
				// it's a Windows system, so safe to use the system L&F
				UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
			}
			else {
				// Unix or MacOS - Need to use cross-platform L&F, since the system L&F
				// can be dodgy in Ubuntu and in Mac OS
				UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
			}
		} catch ( UnsupportedLookAndFeelException e ) {
			System.err.println("Unsupported L&F Exception: " + e);
		} catch ( ClassNotFoundException e ) {
			System.err.println("L&F CLass Not Found Exception: " + e);
		} catch ( InstantiationException e ) {
			System.err.println("L&F Instantiation Exception: " + e);
		} catch ( IllegalAccessException e ) {
			System.err.println("Illegal L&F Access Exception: " + e);
		} catch ( Exception e ) {
			System.err.println("Error loading L&F: " + e);
		}

		this.setIconImage(new ImageIcon(
				Thread.currentThread().getContextClassLoader().getResource(
						CreateGui.imgPath + "icon.png")).getImage());
=====================================================================
Found a 35 line (169 tokens) duplication in the following files: 
Starting at line 89 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ArithOpNode.java
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ArithCompNode.java

			description += QueryManager.addColouring("is it true that ");
		
		ArrayList children = getChildNodes();
		if (children != null) {
			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();	
				QueryManager.colourUp();
				description += child.printTextualRepresentation();
				QueryManager.colourDown();
				if (i.hasNext()) 
					description += QueryManager.addColouring(op);
				else {
					if (children.size() == 1) {
						description += QueryManager.addColouring(op);
						QueryManager.colourUp();
						description += QueryManager.addColouring("another numerical value that has not been specified yet ");
						QueryManager.colourDown();
					}
				}	
			}
		}
		else {
			QueryManager.colourUp();
			description += QueryManager.addColouring("a numerical value that has not been specified yet ");
			QueryManager.colourDown();
			description += QueryManager.addColouring(op);
			QueryManager.colourUp();
			description += QueryManager.addColouring("another numerical value that has also not been specified yet ");
			QueryManager.colourDown();
		}
		return description;	
	}
	
}
=====================================================================
Found a 33 line (165 tokens) duplication in the following files: 
Starting at line 82 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java
Starting at line 71 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java

		if (diffObj!=null  &&  diffObj instanceof PetriNetObject)
			add((PetriNetObject)diffObj);			
		
		repaint();
	}
	
	public void updatePreferredSize() {
		// iterate over net objects and setPreferredSize() accordingly
		Component[] components=getComponents();
		Dimension d=new Dimension(0,0);
		int x,y;
		
		for(int i=0;i<components.length;i++)
		{
			Rectangle r=components[i].getBounds();
			x=r.x+r.width+100;
			y=r.y+r.height+100;
			if (x>d.width)  d.width =x;
			if (y>d.height) d.height=y;
		}
		setPreferredSize(d);
	}

	
	public void add(PetriNetObject currentObj)
	{
		if (currentObj instanceof Place)
		{
			ConditionPlace place = new ConditionPlace((Place)currentObj);
			
			// Set the state group condition associated with the place
			StateElement placeCondition = activeStateGroup.getCondition(place.getId());
			if (placeCondition != null){
=====================================================================
Found a 30 line (165 tokens) duplication in the following files: 
Starting at line 431 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 415 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

		timePanel.setLayout(new GridLayout(2,2));
		
		JPanel startEndTime = new JPanel(new GridLayout(2,2));
		
		startEndTime.add(new JLabel("Start Time:") );
		startTime = new JTextField(4);
		startEndTime.add(startTime);
		
		startEndTime.add(new JLabel("End Time:") );
		endTime = new JTextField(4);
		startEndTime.add(endTime);
		
		startEndTime.setMaximumSize(new Dimension(Integer.MAX_VALUE, startEndTime.getPreferredSize().height));
		
		// Create time / method panel holder
		JPanel timeMethodPanel = new JPanel(new GridLayout(2,2));
		
		
		
		// Create time / method panel
		timeMethodPanel.add(new JLabel("Time Step:") );		
		timeStep = new JSpinner(new SpinnerNumberModel(0.10, 0.0, 100, 0.1) );		
		timeMethodPanel.add(timeStep);				

		timeMethodPanel.add(new JLabel("Method:"));
		
		methodCombo = new JComboBox();
		methodCombo.addItem("Laguerre");
		methodCombo.addItem("Euler");		
		timeMethodPanel.add(methodCombo);
=====================================================================
Found a 18 line (160 tokens) duplication in the following files: 
Starting at line 1913 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1946 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

			    el.setPatch(previous, box.getY(), (next = frac * box.getWidth()), box.getHeight());
			}
			p = el.getPatch();
			el.setAttribute(POS_ATTR, new GrappaPoint(p.getCenterX(), -p.getCenterY()));
			el.setAttribute(WIDTH_ATTR, new Double(p.getWidth()/72.0));
			el.setAttribute(HEIGHT_ATTR, new Double(p.getHeight()/72.0));
		        if (el.getLocalAttribute(COLOR_ATTR) == null)
			    el.setAttribute(COLOR_ATTR,"white");
			attr = el.getAttribute(STYLE_ATTR);
			if(attr == null) {
			    el.setAttribute(STYLE_ATTR, "filled,lineColor(black)");
			} else {
			    style = attr.getStringValue();
			    el.setAttribute(STYLE_ATTR,style == null || style.length() == 0 ? "filled,lineColor(black)" : style + ",filled,lineColor(black)");
			}
		    } else {
			if(dir > 1) {
			    p = new GrappaBox(box.getX(), previous, box.getWidth(), (next = frac * box.getHeight()));
=====================================================================
Found a 33 line (159 tokens) duplication in the following files: 
Starting at line 1253 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1430 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

		infiniteServer = !(nameInfiniteServer.length() == 0 || nameInfiniteServer.length() == 5);

		if (positionXTempStorage.length() > 0)
		{
			positionXInput = Double.valueOf(positionXTempStorage).doubleValue() *
								(false ? this.DISPLAY_SCALE_FACTORX : 1) +
								(false ? this.DISPLAY_SHIFT_FACTORX : 1);
		}
		if (positionYTempStorage.length() > 0)
		{
			positionYInput = Double.valueOf(positionYTempStorage).doubleValue() *
								(false ? this.DISPLAY_SCALE_FACTORY : 1) +
								(false ? this.DISPLAY_SHIFT_FACTORY : 1);
		}
		if (idTempStorage.length() > 0)
		{
			idInput = idTempStorage;
		}
		else if (nameTempStorage.length() > 0)
		{
			idInput = nameTempStorage;
		}

		if (nameTempStorage.length() > 0)
		{
			nameInput = nameTempStorage;
		}
		else if (idTempStorage.length() > 0)
		{
			nameInput = idTempStorage;
		}

		if (nameOffsetXTempStorage.length() > 0)
=====================================================================
Found a 32 line (156 tokens) duplication in the following files: 
Starting at line 1416 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 1511 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

		   (LP_HASH == attrHash && LP_ATTR.equals(attrName))
		   ||
		   (FONTSIZE_HASH == attrHash && FONTSIZE_ATTR.equals(attrName))
		   ||
		   (FONTNAME_HASH == attrHash && FONTNAME_ATTR.equals(attrName))
		   ||
		   (FONTSTYLE_HASH == attrHash && FONTSTYLE_ATTR.equals(attrName))
		   ) {
		    if(lastTextUpdate < thisUpdate) {
			updateText();
		    }
		} else if(
			  (STYLE_HASH == attrHash && STYLE_ATTR.equals(attrName))
			  ) {
		    if(lastStyleUpdate < thisUpdate) {
			updateStyle();
		    }
		} else if(
			  (COLOR_HASH == attrHash && COLOR_ATTR.equals(attrName))
			  ||
			  (FONTCOLOR_HASH == attrHash && FONTCOLOR_ATTR.equals(attrName))
			  ) {
		    if(lastDecorationUpdate < thisUpdate) {
			updateDecoration();
		    }
		} else if(
			  (IMAGE_HASH == attrHash && IMAGE_ATTR.equals(attrName))
			  ) {
		    if(lastImageUpdate < thisUpdate) {
			updateImage();
		    }
		} else if(
=====================================================================
Found a 17 line (155 tokens) duplication in the following files: 
Starting at line 1913 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 2027 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

			el.setPatch(previous, box.getY(), (next = frac * box.getWidth()), box.getHeight());
		    }
		    p = el.getPatch();
		    el.setAttribute(POS_ATTR, new GrappaPoint(p.getCenterX(), -p.getCenterY()));
		    el.setAttribute(WIDTH_ATTR, new Double(p.getWidth()/72.0));
		    el.setAttribute(HEIGHT_ATTR, new Double(p.getHeight()/72.0));
		    if (el.getLocalAttribute(COLOR_ATTR) == null)
		        el.setAttribute(COLOR_ATTR,"white");
		    attr = el.getAttribute(STYLE_ATTR);
		    if(attr == null) {
			el.setAttribute(STYLE_ATTR, "filled,lineColor(black)");
		    } else {
			style = attr.getStringValue();
			el.setAttribute(STYLE_ATTR,style == null || style.length() == 0 ? "filled,lineColor(black)" : style + ",filled,lineColor(black)");
		    }
		} else {
		    if(dir > 1) {
=====================================================================
Found a 52 line (155 tokens) duplication in the following files: 
Starting at line 410 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PlaceTransitionObject.java
Starting at line 42 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/FiringTaggedButton.java

		this.firingTaggedButton = new Ellipse2D.Double(x,y,DIAMETER, DIAMETER);
	
	}
	

	/**
	 * Set X-axis position
	 * 
	 * @param positionXInput
	 *            Double value for X-axis position
	 */
	public void setPositionX(final double positionXInput)
	{
		this.positionX = positionXInput;
		if (this.getZoomController() != null)
		{
			this.locationX = this.getZoomController().getUnzoomedValue(this.positionX);
		}
		else
		{
			this.locationX = (int) this.positionX;
		}
	}

	/**
	 * Set Y-axis position
	 * 
	 * @param positionYInput
	 *            Double value for Y-axis position
	 */
	public void setPositionY(final double positionYInput)
	{
		this.positionY = positionYInput;
		if (this.getZoomController() != null)
		{
			this.locationY = this.getZoomController().getUnzoomedValue(this.positionY);
		}
		else
		{
			this.locationY = (int) this.positionY;
		}
	}
	
	/** Translates the component by x,y */
	public void translate(final int x, final int y)
	{
		this.setPositionX(this.positionX + x);
		this.setPositionY(this.positionY + y);
		this.updateBounds();
	}
	
	public void paintComponent(final Graphics g)
=====================================================================
Found a 19 line (152 tokens) duplication in the following files: 
Starting at line 1803 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1875 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

			tsz = ((Element)elPatches[j]).getPatchSize();
			tot = psz + sz + tsz;
			tfrac = tot / total;
			if(dir > 1) {
			    nscore = score(box.getWidth() * sz / tot, tfrac*box.getHeight());
			} else {
			    nscore = score(tfrac*box.getWidth(), box.getHeight() * sz / tot);
			}
			if(nscore <= pscore) {
			    if(dir > 1) {
				pscore = score(box.getWidth() * tsz / tot, tfrac*box.getHeight());
			    } else {
				pscore = score(tfrac*box.getWidth(), box.getHeight() * tsz / tot);
			    }
			    psz += sz;
			    sz = tsz;
			    tsz = 0;
			    j++;
			    if(j < elPatches.length)
=====================================================================
Found a 29 line (151 tokens) duplication in the following files: 
Starting at line 70 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 69 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java

		operaterCombo.setSelectedIndex(2);
		conditionValue  = new JTextField(5);	
		mainPanel.add(new JLabel(place.getName()));
		mainPanel.add(operaterCombo);
		mainPanel.add(conditionValue);

		// Panel for buttons
		JPanel buttonPanel = new JPanel();	
		okButton = new JButton("OK");
		conditionEdit.getRootPane().setDefaultButton(okButton); // Pressing 'Enter' key will activate the button
		okButton.setMnemonic(KeyEvent.VK_O);
		okButton.addActionListener(BtnClick);
		cancelButton = new JButton("Cancel");
		cancelButton.setMnemonic(KeyEvent.VK_C);
		cancelButton.addActionListener(BtnClick);
		buttonPanel.add(okButton);
		buttonPanel.add(cancelButton);

		// Build UI
		contentPane.add(new JLabel("Please enter the condition for this place:"));
		contentPane.add(mainPanel);
		contentPane.add(buttonPanel);

		// Pack, Centre, Display
		conditionEdit.pack();
		conditionEdit.setResizable(false);
		conditionEdit.setLocationRelativeTo(null);
		conditionEdit.setVisible(true);
	}
=====================================================================
Found a 27 line (150 tokens) duplication in the following files: 
Starting at line 1231 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 1263 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

    Rectangle2D rawBounds2D() {

	if(dirty) {
	    bbox = null;
	    updateShape();
	}

	if(bbox == null) {

	    if(shape != null) {
		bbox = shape.getBounds2D();
	    }

	    if(textArea != null && Grappa.shapeBoundText && boundText) {
		if(bbox == null) {
		    bbox = textArea.getBounds();
		} else {
		    bbox.add(textArea.getBounds());
		}
	    }

	    if(bbox.getHeight() == 0)
		bbox.setRect(bbox.getX(),bbox.getY(),bbox.getWidth(),0.01);
	    if(bbox.getWidth() == 0)
		bbox.setRect(bbox.getX(),bbox.getY(),0.01,bbox.getHeight());
	}
	return(bbox);
=====================================================================
Found a 23 line (148 tokens) duplication in the following files: 
Starting at line 75 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/PetriNetBrowsePanel.java
Starting at line 49 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/PetriNetChooserPanel.java

    textField=new JTextField((defaultNet!=null?defaultNet.getURI():null),15);
//    textField.setMaximumSize(new Dimension(Integer.MAX_VALUE,this.getPreferredSize().height));
//    textField.setPreferredSize(new Dimension());
    this.add(textField);
    this.add(Box.createHorizontalStrut(5));
    
    browse=new JButton("Browse");
    browse.addActionListener(browseButtonClick);
    this.add(browse);
    
    this.setBorder(new TitledBorder(new EtchedBorder(EtchedBorder.LOWERED),title));
    
    this.setMaximumSize(new Dimension(Integer.MAX_VALUE,this.getPreferredSize().height));
    
    if(useCurrent!=null) useCurrent.getActionListeners()[0].actionPerformed(null); // update 
  }
  
  private ActionListener useCurrentClick=new ActionListener() {
    public void actionPerformed(ActionEvent e) {
      boolean enabled=!useCurrent.isSelected();
      label.setEnabled(enabled);
      textField.setEnabled(enabled);
      browse.setEnabled(enabled);
=====================================================================
Found a 24 line (145 tokens) duplication in the following files: 
Starting at line 861 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 394 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

	private static boolean[] getTransitionEnabledStatusArray(DataLayer pnmlData, int[] marking, boolean immediateTransitions) {
		int transCount = pnmlData.getTransitionsCount();
		boolean[] result = new boolean[transCount];
		boolean hasTimed = false;
		boolean hasImmediate = false;
		
		Transition[] transArray = pnmlData.getTransitions();
		
		int[][] CMinus = pnmlData.getBackwardsIncidenceMatrix();
		int placeCount = pnmlData.getPlacesCount();
		
		// Initialise the result array
		for(int t = 0; t < transCount; t++){
			result[t] = true;
		}
		
		for (int i = 0; i <transCount ;i++) {
			for (int j = 0; j <placeCount; j++){
				if (marking[j] < CMinus[j][i]){
					result[i] = false;
					//System.err.println("Set transition enabled status to false " + i + "of " + transCount);
				}
			}
		}
=====================================================================
Found a 46 line (145 tokens) duplication in the following files: 
Starting at line 86 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java
Starting at line 72 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ConditionPlaceHandler.java

		conditionValue  = new JTextField(5);
				
		mainPanel.add(new JLabel(place.getName()));
		mainPanel.add(operaterCombo);
		mainPanel.add(conditionValue);
		
		
		// Panel for buttons
		JPanel buttonPanel = new JPanel();
		
		okButton = new JButton("OK");
		conditionEdit.getRootPane().setDefaultButton(okButton); // Pressing 'Enter' key will activate the button
		okButton.setMnemonic(KeyEvent.VK_O);
		okButton.addActionListener(BtnClick);
		
		cancelButton = new JButton("Cancel");
		cancelButton.setMnemonic(KeyEvent.VK_C);
		cancelButton.addActionListener(BtnClick);

		
		buttonPanel.add(okButton);
		buttonPanel.add(cancelButton);
		
		
		// Build UI
		contentPane.add(new JLabel("Please enter the condition for this place:"));
		contentPane.add(mainPanel);
		contentPane.add(buttonPanel);
		
		
		// Pack, Centre, Display
		conditionEdit.pack();
		conditionEdit.setResizable(false);
		conditionEdit.setLocationRelativeTo(null);
		conditionEdit.setVisible(true);
		
	}
	
	
	/**
	  * This action listener responds to the buttons used in
	  * the "Add Condition" pop up dialog
	  * i.e the Cancel / OK buttons 
	  */
	 
	 ActionListener BtnClick = new ActionListener()
=====================================================================
Found a 45 line (145 tokens) duplication in the following files: 
Starting at line 126 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 114 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

		}									
	}

	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		Graphics2D g2d = (Graphics2D) g;
		
		g2d.setPaint(selectionColor);
		g2d.fill(selectionRectangle);
		g2d.setPaint(selectionColorOutline);
		g2d.draw(selectionRectangle);
	}

	public boolean contains(int x, int y) {
		return true;
	}

	public void mouseClicked(MouseEvent arg0) {
		// Not needed
	}

	public void mouseEntered(MouseEvent arg0) {
	  // Not needed
	}

	public void mouseExited(MouseEvent arg0) {
		// Not needed
	}

	/* (non-Javadoc)
	 * @see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
	 */
	public void mousePressed(MouseEvent arg0) {
		isSelecting = true;
		edit_window.setLayer(this, SELECTION_LAYER_OFFSET);
		selectionInit = arg0.getPoint();
		selectionRectangle.setRect(selectionInit.getX(), selectionInit.getY(), 0, 0);
		processSelection(arg0);	// Select anything that intersects with the rectangle.
		repaint();
	}

	/* (non-Javadoc)
	 * @see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
	 */
	public void mouseReleased(MouseEvent arg0) {
=====================================================================
Found a 41 line (145 tokens) duplication in the following files: 
Starting at line 72 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 86 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

		operaterCombo.addActionListener(combo);
		
		
				
		mainPanel.add(new JLabel(place.getName()));
		mainPanel.add(operaterCombo);
		mainPanel.add(conditionValue);
		
		
		// Panel for buttons
		JPanel buttonPanel = new JPanel();
		
		okButton = new JButton("OK");
		conditionEdit.getRootPane().setDefaultButton(okButton); // Pressing 'Enter' key will activate the button
		okButton.setMnemonic(KeyEvent.VK_O);
		okButton.addActionListener(BtnClick);
		
		cancelButton = new JButton("Cancel");
		cancelButton.setMnemonic(KeyEvent.VK_C);
		cancelButton.addActionListener(BtnClick);

		
		buttonPanel.add(okButton);
		buttonPanel.add(cancelButton);
		
		
		// Build UI
		contentPane.add(new JLabel("Please enter the condition for this place:"));
		contentPane.add(mainPanel);
		contentPane.add(buttonPanel);
		
		
		// Pack, Centre, Display
		conditionEdit.pack();
		conditionEdit.setResizable(false);
		conditionEdit.setLocationRelativeTo(null);
		conditionEdit.setVisible(true);
		
	}
	
	ActionListener combo = new ActionListener()
=====================================================================
Found a 39 line (144 tokens) duplication in the following files: 
Starting at line 70 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java
Starting at line 86 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

		operaterCombo.addActionListener(combo);
		
		
				
		mainPanel.add(new JLabel(place.getName()));
		mainPanel.add(operaterCombo);
		mainPanel.add(conditionValue);
		
		
		// Panel for buttons
		JPanel buttonPanel = new JPanel();
		
		okButton = new JButton("OK");
		conditionEdit.getRootPane().setDefaultButton(okButton); // Pressing 'Enter' key will activate the button
		okButton.setMnemonic(KeyEvent.VK_O);
		okButton.addActionListener(BtnClick);
		
		cancelButton = new JButton("Cancel");
		cancelButton.setMnemonic(KeyEvent.VK_C);
		cancelButton.addActionListener(BtnClick);

		
		buttonPanel.add(okButton);
		buttonPanel.add(cancelButton);
		
		
		// Build UI
		contentPane.add(new JLabel("Please enter the condition for this place:"));
		contentPane.add(mainPanel);
		contentPane.add(buttonPanel);
		
		
		// Pack, Centre, Display
		conditionEdit.pack();
		conditionEdit.setResizable(false);
		conditionEdit.setLocationRelativeTo(null);
		conditionEdit.setVisible(true);
		
	}
=====================================================================
Found a 29 line (143 tokens) duplication in the following files: 
Starting at line 531 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 520 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java

			if (QueryManager.getMode() == QueryConstants.DRAG)
			{

				// Drag only works when the frame is smaller than the actual
				// viewport,
				// so that scrollbars appear at the sides, or when the image is
				// zoomed.
				// Otherwise, it doesn't make sense to drag.

				JViewport viewer = (JViewport) getParent();
				Point offScreen = viewer.getViewPosition();
				if (this.dragStart.x > e.getX())
				{
					offScreen.translate(viewer.getWidth(), 0);
				}
				if (this.dragStart.y > e.getY())
				{
					offScreen.translate(0, viewer.getHeight());
				}
				offScreen.translate(this.dragStart.x - e.getX(), this.dragStart.y - e.getY());
				Rectangle r = new Rectangle(offScreen.x, offScreen.y, 1, 1);
				scrollRectToVisible(r);
				super.mouseDragged(e);
			}
		}
	}


}
=====================================================================
Found a 26 line (139 tokens) duplication in the following files: 
Starting at line 1755 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1829 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            int holdy = 0;


            for(int i=0; i<n; i++){
                cc[i]=aa[i];
                dd[i]=bb[i];
            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(cc[i]<cc[index]){
                        index=i;
                    }
                }
                lastIndex++;
                holdx=cc[index];
                cc[index]=cc[lastIndex];
                cc[lastIndex]=holdx;
                holdy=dd[index];
                dd[index]=dd[lastIndex];
                dd[lastIndex]=holdy;
            }
        }

        public static void selectionSort(int[] aa, long[] bb, int[] cc, long[] dd){
=====================================================================
Found a 44 line (139 tokens) duplication in the following files: 
Starting at line 141 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 178 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

						 ((StateEditor)parent).addStateElement(placeStr, operatorStr, targetStr);
						
						 // Update the UI
						 place.setCondition(operatorStr, targetStr);
						
						 closeWindow();				 
					 }
					 catch (Exception exp) {
						 System.out.println("Error creating state: " + exp);
					 }	
				 }
				 else {
					 JOptionPane.showMessageDialog(null, "Please specify the number of tokens for the condition (under 1,000).",
								"Warning", JOptionPane.ERROR_MESSAGE);
					 }
				 
			 }
		 }
	 };
	
	private void closeWindow()
	{
		conditionEdit.setVisible(false);
		conditionEdit.dispose();		 
	}
	
	 public void mousePressed(MouseEvent e)
	 {
		 // left click will display the add condition dialog
		 if (e.getButton() == MouseEvent.BUTTON1)
			 showDialog();
		 
		 else
		 {
			 JPopupMenu popup = getPopup(e);	
			 popup.show(e.getComponent(), e.getX(), e.getY());
		 }
	 }
	 
	 // Check that the number is a valid integer less than 10000
	 private boolean inputValid(String inputString)
	 {
		 try
		 {
=====================================================================
Found a 29 line (138 tokens) duplication in the following files: 
Starting at line 328 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 291 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java

		validate();
	}

	public PerformanceTreeSelectionObject getSelectionObject()
	{
		return this.selection;
	}

	public void setCursorType(final String type)
	{
		if (type.equals("arrow"))
			setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
		else if (type.equals("crosshair"))
			setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
		else if (type.equals("move"))
			setCursor(Cursor.getPredefinedCursor(Cursor.MOVE_CURSOR));
	}

	public void setShiftDown(final boolean down)
	{
		this.shiftDown = down;
		if (this.arcBeingModified != null)
		{
			this.arcBeingModified.getArcPath().setFinalPointType(this.shiftDown);
			this.arcBeingModified.getArcPath().createPath();
		}
	}

	public PerformanceTreeZoomController getZoomController()
=====================================================================
Found a 34 line (138 tokens) duplication in the following files: 
Starting at line 806 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 343 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

		MacroManager.getView().addNewMacroObject(node);

		if (node instanceof OperationNode)
		{
			if (nodeOutgoingArcIDs.size() != 0)
				((OperationNode) node).setOutgoingArcIDs(nodeOutgoingArcIDs);
			if (nodeOperation != null)
			{
				((OperationNode) node).setOperation(nodeOperation);
			}
		}
		else if (node instanceof ValueNode)
		{
			if (nodeLabel != null)
			{
				// set the visible label
				((ValueNode) node).setNodeLabel(nodeLabel);
				if (node instanceof StatesNode)
				{
					// set the state label variable
					((StatesNode) node).setStateLabel(nodeLabel);
				}
				else if (node instanceof ActionsNode)
				{
					// set the action label variable
					((ActionsNode) node).setActionLabel(nodeLabel);
				}
				else if (node instanceof ArgumentNode)
				{
					// set the argument name
					((ArgumentNode) node).setArgumentName(nodeLabel);
				}
			}
		}
=====================================================================
Found a 30 line (137 tokens) duplication in the following files: 
Starting at line 79 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java
Starting at line 108 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

	public void addPointsToGui(JLayeredPane editWindow)
	{
		ArcPathPoint pathPoint;
		((ArcPathPoint) this.pathPoints.get(0)).setDraggable(false);
		((ArcPathPoint) this.pathPoints.get(this.pathPoints.size() - 1)).setDraggable(false);

		ArcPathPointHandler pointHandler;
		for (int i = 0; i < this.pathPoints.size(); i++)
		{
			pathPoint = (ArcPathPoint) this.pathPoints.get(i);
			pathPoint.setVisible(false);

			// Check whether the point has already been added to the gui
			// as addPointsToGui() may have been called after the user
			// split an existing point. If this is the case, we don't want
			// to add all the points again along with new action listeners,
			// we just want to add the new point.
			// Nadeem 21/06/2005
			if (editWindow.getIndexOf(pathPoint) < 0)
			{
				editWindow.add(pathPoint);
				pointHandler = new ArcPathPointHandler(editWindow, pathPoint);
				pathPoint.addMouseListener(pointHandler);
				pathPoint.addMouseMotionListener(pointHandler);
				pathPoint.updatePointLocation();
			}
		}
	}

	public Cubic[] calcNaturalCubic(int n, int[] x)
=====================================================================
Found a 15 line (136 tokens) duplication in the following files: 
Starting at line 152 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 225 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

           (!compareRate || source[i].getRate() == comparison[j].getRate())) {
           s="Identical";
        } else {
          s="";
          if(compareID) {
            s+="Id";
            if(source[i].getId().equals(comparison[j].getId())) s+=" (match)";
            s+=": Source = \"" + source[i].getId() + "\"  Comparison  = \"" + comparison[j].getId() + "\"<br>";
          }
          if(compareName) {
            s+="Name";
            if(source[i].getName().equals(comparison[j].getName())) s+=" (match)";
            s+=": Source = \"" + source[i].getName() + "\"  Comparison  = \"" + comparison[j].getName() + "\"<br>";
          }
          if(compareRate) {
=====================================================================
Found a 20 line (136 tokens) duplication in the following files: 
Starting at line 120 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 144 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java

	protected boolean[] getTangibleTransitionEnabledStatusArray(DataLayer pnmlData, int[] marking) {
//		int transCount = pnmlData.getTransitions().length;
		int transCount = pnmlData.getTransitionsCount();
		boolean[] result;
		result = new boolean[transCount];
		boolean hasTimed = false;
		boolean hasImmediate = false;
		int[][] CMinus = pnmlData.getBackwardsIncidenceMatrix();
		int placeCount = pnmlData.getPlacesCount();
		Transition[] transArray = pnmlData.getTransitions();
		
		for (int k = 0; k < transCount; k++) { //initialise matrix to true
			result[k] = true;
		}
		for (int i = 0; i <transCount;i++) {
			for (int j = 0; j <placeCount; j++){
				if (marking[j] < CMinus[j][i])
					result[i] = false;
			}
		}
=====================================================================
Found a 21 line (136 tokens) duplication in the following files: 
Starting at line 273 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 242 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

          p=((PetriNetObject)netObj[i]).getLocation();
          if(topleft==null) {
            topleft=p;
          }
          else {
            if(p.x<topleft.x)topleft.x=p.x;
            if(p.y<topleft.y)topleft.y=p.y;
          }
        }
      } 
    }
    
    if(topleft!=null) {
      topleft.translate(transX,transY);
      if(topleft.x<0) transX-=topleft.x;
      if(topleft.y<0) transY-=topleft.y;
      if(transX==0 && transY==0)return;
    }
        
		for (int i=0; i<netObj.length; i++) {
			if (netObj[i] instanceof PlaceTransitionObject) {
=====================================================================
Found a 23 line (135 tokens) duplication in the following files: 
Starting at line 1683 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1795 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            for(int i=0; i<n; i++){
                cc[i]=aa[i];
                dd[i]=bb[i];
            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(cc[i]<cc[index]){
                        index=i;
                    }
                }
                lastIndex++;
                holdx=cc[index];
                cc[index]=cc[lastIndex];
                cc[lastIndex]=holdx;
                holdy=dd[index];
                dd[index]=dd[lastIndex];
                dd[lastIndex]=holdy;
            }
       }

         public static void selectionSort(long[] aa, int[] bb, long[] cc, int[] dd){
=====================================================================
Found a 24 line (135 tokens) duplication in the following files: 
Starting at line 1646 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1720 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            for(int i=0; i<n; i++){
                cc[i]=aa[i];
                dd[i]=bb[i];
            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(cc[i]<cc[index]){
                        index=i;
                    }
                }
                lastIndex++;
                holdx=cc[index];
                cc[index]=cc[lastIndex];
                cc[lastIndex]=holdx;
                holdy=dd[index];
                dd[index]=dd[lastIndex];
                dd[lastIndex]=holdy;
            }
       }


       public static void selectionSort(double[] aa, int[] bb, double[] cc, int[] dd){
=====================================================================
Found a 23 line (135 tokens) duplication in the following files: 
Starting at line 1609 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1758 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            for(int i=0; i<n; i++){
                cc[i]=aa[i];
                dd[i]=bb[i];
            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(cc[i]<cc[index]){
                        index=i;
                    }
                }
                lastIndex++;
                holdx=cc[index];
                cc[index]=cc[lastIndex];
                cc[lastIndex]=holdx;
                holdy=dd[index];
                dd[index]=dd[lastIndex];
                dd[lastIndex]=holdy;
            }
       }

       public static void selectionSort(int[] aa, double[] bb, int[] cc, double[] dd){
=====================================================================
Found a 23 line (135 tokens) duplication in the following files: 
Starting at line 1572 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1683 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            for(int i=0; i<n; i++){
                cc[i]=aa[i];
                dd[i]=bb[i];
            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(cc[i]<cc[index]){
                        index=i;
                    }
                }
                lastIndex++;
                holdx=cc[index];
                cc[index]=cc[lastIndex];
                cc[lastIndex]=holdx;
                holdy=dd[index];
                dd[index]=dd[lastIndex];
                dd[lastIndex]=holdy;
            }
       }

    public static void selectionSort(long[] aa, double[] bb, long[] cc, double[] dd){
=====================================================================
Found a 26 line (134 tokens) duplication in the following files: 
Starting at line 1717 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1792 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            double holdy = 0.0D;


            for(int i=0; i<n; i++){
                cc[i]=aa[i];
                dd[i]=bb[i];
            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(cc[i]<cc[index]){
                        index=i;
                    }
                }
                lastIndex++;
                holdx=cc[index];
                cc[index]=cc[lastIndex];
                cc[lastIndex]=holdx;
                holdy=dd[index];
                dd[index]=dd[lastIndex];
                dd[lastIndex]=holdy;
            }
       }

         public static void selectionSort(long[] aa, int[] bb, long[] cc, int[] dd){
=====================================================================
Found a 26 line (134 tokens) duplication in the following files: 
Starting at line 1643 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1755 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            int holdy = 0;


            for(int i=0; i<n; i++){
                cc[i]=aa[i];
                dd[i]=bb[i];
            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(cc[i]<cc[index]){
                        index=i;
                    }
                }
                lastIndex++;
                holdx=cc[index];
                cc[index]=cc[lastIndex];
                cc[lastIndex]=holdx;
                holdy=dd[index];
                dd[index]=dd[lastIndex];
                dd[lastIndex]=holdy;
            }
       }

       public static void selectionSort(int[] aa, double[] bb, int[] cc, double[] dd){
=====================================================================
Found a 26 line (134 tokens) duplication in the following files: 
Starting at line 1606 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1680 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            long holdy = 0L;


            for(int i=0; i<n; i++){
                cc[i]=aa[i];
                dd[i]=bb[i];
            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(cc[i]<cc[index]){
                        index=i;
                    }
                }
                lastIndex++;
                holdx=cc[index];
                cc[index]=cc[lastIndex];
                cc[lastIndex]=holdx;
                holdy=dd[index];
                dd[index]=dd[lastIndex];
                dd[lastIndex]=holdy;
            }
       }

    public static void selectionSort(long[] aa, double[] bb, long[] cc, double[] dd){
=====================================================================
Found a 36 line (134 tokens) duplication in the following files: 
Starting at line 422 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 447 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

	}
	
	/**
	 * isTangible()
	 * Tests whether the state passed as an argument is tangible or vanishing.
	 * 
	 * @param pnmlData
	 * @param marking
	 * @return
	 */
	private static boolean isTangible(DataLayer pnmlData, State marking) {
		Transition[] trans = pnmlData.getTransitions();
		int numTrans = trans.length;
		boolean hasTimed = false;
		boolean hasImmediate = false;
		boolean[] enabledTransitions = getTransitionEnabledStatusArray(pnmlData, marking.getState(),false);
		for (int i = 0; i < numTrans; i++ ){
			if(enabledTransitions[i]){ // If the transition is enabled
				if (trans[i].isTimed()== true){  
					//If any immediate transtions exist, the state is vanishing 
					//as they will fire immediately
				hasTimed = true;
				}
				else if (trans[i].isTimed()!= true) {
					hasImmediate = true;
				}
			}
		}
		if (hasTimed == true && hasImmediate == false){
			return true;
		}
		else
			return false;
		
	}
	private static double prob(DataLayer pnmlData, State v, State vprime){
=====================================================================
Found a 30 line (133 tokens) duplication in the following files: 
Starting at line 408 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 479 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

				else if(type == CLONED)
				{
					double rate = transitions[i].getRate();
					
				  	if (transitions[i].isTimed())			  	
				  		modString += "\t\t\\rate{";
				  	
				  	else // not timed transition
				  		modString += "\t\t\\weight{";
				  	
				  	if(transitions[i].isInfiniteServer())
				  	{
				  		
				  		String tagged_place = "(";
						
						arcToTransitions = transitions[i]. getConnectToIterator();
						if(arcToTransitions.hasNext()) 
					  	{
					  		tagged_place += ((Arc)arcToTransitions.next()).getSource().getId();;
					  	}
						while(arcToTransitions.hasNext()) 
					  	{
					  		final Arc arc = ((Arc)arcToTransitions.next());
					  		String currentId = arc.getSource().getId();
					  		tagged_place += "+" + currentId;
					  	}
							
						tagged_place += ")";
							
				  			modString += "tagged_location== " + tagInputPlaceIndex[0] + 
=====================================================================
Found a 24 line (133 tokens) duplication in the following files: 
Starting at line 269 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 154 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

			if(components[i] instanceof SelectionObject) continue; // SelectionObject not included
			Rectangle r=components[i].getBounds();
			int x=r.x+r.width+100;
			int y=r.y+r.height+100;
			if(x>d.width)  d.width =x;
			if(y>d.height) d.height=y;
		}
		setPreferredSize(d);

		getParent().validate();
	}
	
	public void zoom() {
		Component[] children = getComponents();
		
		for (int i = 0; i < children.length; i++){
			if (children[i] instanceof Zoomable)
				((Zoomable)children[i]).zoomUpdate();
		}
		
		validate();
	}

	public void changeAnimationMode(boolean status) {
=====================================================================
Found a 31 line (132 tokens) duplication in the following files: 
Starting at line 1606 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1866 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            long holdy = 0L;


            for(int i=0; i<n; i++){
                cc[i]=aa[i];
                dd[i]=bb[i];
            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(cc[i]<cc[index]){
                        index=i;
                    }
                }
                lastIndex++;
                holdx=cc[index];
                cc[index]=cc[lastIndex];
                cc[lastIndex]=holdx;
                holdy=dd[index];
                dd[index]=dd[lastIndex];
                dd[lastIndex]=holdy;
            }
       }


        // sort elements in an array of doubles (first argument) into ascending order
        // using selection sort method
        // returns the sorted array as second argument
        //  and an array of the indices of the sorted array as the third argument
        public static void selectSort(double[] aa, double[] bb, int[] indices){
=====================================================================
Found a 27 line (132 tokens) duplication in the following files: 
Starting at line 1491 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1905 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            double holdb = 0.0D;
            int holdi = 0;
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
                indices[i]=i;
            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(bb[i]<bb[index]){
                        index=i;
                    }
                }
                lastIndex++;
                holdb=bb[index];
                bb[index]=bb[lastIndex];
                bb[lastIndex]=holdb;
                holdi=indices[index];
                indices[index]=indices[lastIndex];
                indices[lastIndex]=holdi;
            }
        }

        /*      returns -1 if x < 0 else returns 1   */
        //  double version
        public static double sign(double x){
=====================================================================
Found a 24 line (132 tokens) duplication in the following files: 
Starting at line 217 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/myNode.java
Starting at line 387 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/myNode.java

				statespace.add(new_markup);  //record the new markup in our state space list.
				//Check for safeness. If any of places have > 1 token set variable.
				for(i=0; i< new_markup.length; i++){
					if(new_markup[i] > 1 || new_markup[i]==-1) {
						tree.more_Than_One_Token = true;
					}
				}
				//Create a new node using the new markup vector and attach it
				//to the current node as a child.
				children[transIndex - 1] = new myNode(new_markup, this, tree, depth+1);
				/* Now need to (a) check if any omegas (represented by -1) need to be
				 inserted in the markup vector of the new node, and (b) if the resulting
				 markup vector has appeared anywhere else in the tree. We must do (a) before
				 (b) as we need to know if the new node contains any omegas to be able to
				 compare it with existing nodes. */
				allOmegas = children[transIndex - 1].InsertOmegas();
				//check if the resulting markup vector has occured anywhere else in the tree
				Repeated_Node = (tree.root).FindMarkup(children[transIndex-1]);
				if (tree.nodeCount>=10000 && !tree.tooBig)	{
					tree.tooBig = true;
					throw new TreeTooBigException();
				}
				if(!Repeated_Node && !allOmegas) {
					children[transIndex - 1].RecursiveExpansion(statespace, timedTrans);
=====================================================================
Found a 29 line (132 tokens) duplication in the following files: 
Starting at line 368 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 396 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

								MacroLoader.createArc(outgoingArcsElement);
							}
						}
					}
				}
			}
		}

		// make sure all arcs connect to the node nicely
		node.updateConnected();

		// create child nodes if applicable
		for (int i = 0; i < nodeElementList.getLength(); i++)
		{
			Node nodeNode = nodeElementList.item(i);
			if (nodeNode instanceof Element)
			{
				Element nodeElement = (Element) nodeNode;
				if ("childNodes".equals(nodeElement.getNodeName()))
				{
					NodeList childNodesElementList = nodeElement.getChildNodes();
					for (int j = 0; j < childNodesElementList.getLength(); j++)
					{
						Node childNodesNode = childNodesElementList.item(j);
						if (childNodesNode instanceof Element)
						{
							Element childNodesElement = (Element) childNodesNode;
							if ("node".equals(childNodesElement.getNodeName()))
							{
=====================================================================
Found a 31 line (131 tokens) duplication in the following files: 
Starting at line 376 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/JFCGraphFrame.java

			int returnVal = fc.showSaveDialog(JFCGraphFrame.this);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			
			try {
				fw = new FileWriter(saveFile);
			}
			catch (IOException e) {
				e.printStackTrace();
			}
			for(int i = 0; i < size; i++) {
				content.append(graphData.getXValue(0, i));
				content.append(",");
				content.append(graphData.getYValue(0, i));
				content.append(",\n");				
			}
	  		String content1 = content.toString();
	  		
	  		try {
		  		fw.write(content1);
		  		fw.close();
	  		}
	  		catch (Exception e) {
	  			e.printStackTrace();
	  		}
	  	}
	  };
}
=====================================================================
Found a 24 line (131 tokens) duplication in the following files: 
Starting at line 249 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 285 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

			if (node.getResult().getOrginalType() == PTNode.PROBININTERVAL)
			{
				final JPopupMenu menu = new JPopupMenu();
				final PointsResultWrapper result = (PointsResultWrapper) node.getResult();

				final JMenuItem num = new JMenuItem(String.valueOf(result.getNumResult()));

				menu.add(num);

				final JMenuItem popup = new JMenuItem(new TabOpenFileText(node));
				popup.setText("View Text File");
				menu.add(popup);

				final JMenuItem popup2 = new JMenuItem(new TabOpenGraph(node));
				popup2.setText("View distribution");
				menu.add(popup2);

				menu.setVisible(true);

				menu.show(event.getComponent(), event.getX(), event.getY());
			}
			else
			{
				throw new QueryAnalysisException("Argument Node isn't of type ProbInInterval");
=====================================================================
Found a 31 line (131 tokens) duplication in the following files: 
Starting at line 239 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/JFCGraphFrame.java

			int returnVal = fc.showSaveDialog(JFCGraphFrame.this);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			
			try {
				fw = new FileWriter(saveFile);
			}
			catch (IOException e) {
				e.printStackTrace();
			}
			for(int i = 0; i < size; i++) {
				content.append(graphData.getXValue(0, i));
				content.append(",");
				content.append(graphData.getYValue(0, i));
				content.append(",\n");				
			}
	  		String content1 = content.toString();
	  		
	  		try {
		  		fw.write(content1);
		  		fw.close();
	  		}
	  		catch (Exception e) {
	  			e.printStackTrace();
	  		}
	  	}
	  };
}
=====================================================================
Found a 23 line (130 tokens) duplication in the following files: 
Starting at line 1535 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1572 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1609 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1646 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            for(int i=0; i<n; i++){
                cc[i]=aa[i];
                dd[i]=bb[i];
            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(cc[i]<cc[index]){
                        index=i;
                    }
                }
                lastIndex++;
                holdx=cc[index];
                cc[index]=cc[lastIndex];
                cc[lastIndex]=holdx;
                holdy=dd[index];
                dd[index]=dd[lastIndex];
                dd[lastIndex]=holdy;
            }
       }

       public static void selectionSort(double[] aa, long[] bb, double[] cc, long[] dd){
=====================================================================
Found a 28 line (128 tokens) duplication in the following files: 
Starting at line 1535 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1869 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            for(int i=0; i<n; i++){
                cc[i]=aa[i];
                dd[i]=bb[i];
            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(cc[i]<cc[index]){
                        index=i;
                    }
                }
                lastIndex++;
                holdx=cc[index];
                cc[index]=cc[lastIndex];
                cc[lastIndex]=holdx;
                holdy=dd[index];
                dd[index]=dd[lastIndex];
                dd[lastIndex]=holdy;
            }
       }


        // sort elements in an array of doubles (first argument) into ascending order
        // using selection sort method
        // returns the sorted array as second argument
        //  and an array of the indices of the sorted array as the third argument
        public static void selectSort(double[] aa, double[] bb, int[] indices){
=====================================================================
Found a 30 line (126 tokens) duplication in the following files: 
Starting at line 322 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 461 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		int countpPlus = 0, countpMinus = 0;
		int[] pPlus, pMinus; // arrays containing the indices of +ve and -ve
		final int pLength = this.n, mLength = this.n;

		for (int i = 0; i < this.m; i++)
		{
			countpPlus = 0;
			countpMinus = 0;
			pPlus = this.getPositiveIndices(i); // get +ve indices of ith row
			pMinus = this.getNegativeIndices(i); // get -ve indices of ith
													// row
			for (int j = 0; j < pLength; j++)
			{
				if (pPlus[j] != 0)
				{
					countpPlus++;
				}
			}
			for (int j = 0; j < mLength; j++)
			{
				if (pMinus[j] != 0)
				{
					countpMinus++;
				}
			}
			// if pPlus has cardinality ==1 return all the elements in pMinus
			// reduced by 1 each
			if (countpPlus == 1)
			{
				return pMinus;
=====================================================================
Found a 28 line (126 tokens) duplication in the following files: 
Starting at line 272 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 320 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		final int k = -1; // the col index of cardinality == 1 element

		int countpPlus = 0, countpMinus = 0;
		int[] pPlus, pMinus; // arrays containing the indices of +ve and -ve
		final int pLength = this.n, mLength = this.n;

		for (int i = 0; i < this.m; i++)
		{
			countpPlus = 0;
			countpMinus = 0;
			pPlus = this.getPositiveIndices(i); // get +ve indices of ith row
			pMinus = this.getNegativeIndices(i); // get -ve indices of ith
													// row
			for (int j = 0; j < pLength; j++)
			{
				if (pPlus[j] != 0)
				{
					countpPlus++;
				}
			}
			for (int j = 0; j < mLength; j++)
			{
				if (pMinus[j] != 0)
				{
					countpMinus++;
				}
			}
			if (countpPlus == 1)
=====================================================================
Found a 27 line (125 tokens) duplication in the following files: 
Starting at line 21 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/ButtonBar.java
Starting at line 16 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/ButtonBar.java

public class ButtonBar extends JPanel {
  /**
   * Multiple button constructor
	 * @param captions - array of Strings for button captions 
	 * @param actions - array of ActionListeners for button actions
	 */
	public ButtonBar(String[] captions, ActionListener[] actions) {
		super();
	  	this.setLayout(new FlowLayout());
	    for(int i=0;i<captions.length;i++){
	      JButton b=new JButton(captions[i]);
	      b.addActionListener(actions[i]);
	      this.add(b);  		
	    }
	    Dimension d=this.getPreferredSize();
	    this.setMinimumSize(d);
	    this.setMaximumSize(d);
  }
  /**
   * Single button constructor
   * @param caption - String caption
   * @param action - ActionListener for button action
   */
  public ButtonBar(String caption,ActionListener action) {
    this(new String[]{caption},new ActionListener[]{action});
  }  
} 
=====================================================================
Found a 20 line (125 tokens) duplication in the following files: 
Starting at line 1036 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java
Starting at line 210 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java

					if (((PerformanceTreeNode)netObj[i]).enablePopup){
						if (netObj[i] instanceof ResultNode) {
							String msg = QueryManager.addColouring("Deletion of the topmost node in the tree is not permitted.");
							if (MacroManager.getEditor() == null)
								QueryManager.writeToInfoBox(msg);
							else
								MacroManager.getEditor().writeToInfoBox(msg);
						}
						else if ((netObj[i] instanceof MacroNode) && MacroManager.getEditor() != null) {
							String msg = QueryManager.addColouring("Deletion of the topmost macro node in the tree is not permitted.");
							MacroManager.getEditor().writeToInfoBox(msg);
						}
						else {
							if(!sequentialNodeCase((PerformanceTreeNode)netObj[i])) {
								// just delete the node, not the associated arc
								((PerformanceTreeNode)netObj[i]).delete();
							}
						}
					//not permit delete in text editing mode
					}else{
=====================================================================
Found a 35 line (124 tokens) duplication in the following files: 
Starting at line 14 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/ViewExpansionComponent.java
Starting at line 5 of /usr/local/git/PipeCoursework/src/pipe/gui/ViewExpansionComponent.java

public class ViewExpansionComponent extends PetriNetObject implements Zoomable{
	
	private int originalX = 0;
	private int originalY = 0;

	public ViewExpansionComponent() {
		super();
		setSize(1,1);
	}
	
	public ViewExpansionComponent(int x, int y){
		this();
		setOriginalX(x);
		setOriginalY(y);
		setLocation(x,y);
	}
	
	
	public void setOriginalX(int x) {
		this.originalX = x;
	}

	
	public void setOriginalY(int y) {
		this.originalY = y;
	}

	
	public void zoomUpdate() {
		double scaleFactor = getZoomController().getPercent() * 0.01;
		setLocation((int)(originalX * scaleFactor),
				(int)(originalY * scaleFactor));
	}

}
=====================================================================
Found a 28 line (123 tokens) duplication in the following files: 
Starting at line 277 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 461 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		int countpPlus = 0, countpMinus = 0;
		int[] pPlus, pMinus; // arrays containing the indices of +ve and -ve
		final int pLength = this.n, mLength = this.n;

		for (int i = 0; i < this.m; i++)
		{
			countpPlus = 0;
			countpMinus = 0;
			pPlus = this.getPositiveIndices(i); // get +ve indices of ith row
			pMinus = this.getNegativeIndices(i); // get -ve indices of ith
													// row
			for (int j = 0; j < pLength; j++)
			{
				if (pPlus[j] != 0)
				{
					countpPlus++;
				}
			}
			for (int j = 0; j < mLength; j++)
			{
				if (pMinus[j] != 0)
				{
					countpMinus++;
				}
			}
			// if pPlus has cardinality ==1 return all the elements in pMinus
			// reduced by 1 each
			if (countpPlus == 1)
=====================================================================
Found a 14 line (123 tokens) duplication in the following files: 
Starting at line 441 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 467 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java

	protected String renderStateSpaceLinked(DataLayer pnmlData, StateList data) {
		if((data.size()==0)||(data.get(0).length==0)) return "n/a";
		int markSize = data.get(0).length;
		ArrayList result=new ArrayList();
		// add headers to table
		result.add("");
		Place[] places = pnmlData.getPlaces();
		for (int i=0;i<markSize;i++) 
		{result.add(places[i].getName());
		//result.add("<A NAME= 'M" + i + "'></A>");
		}
		
		for (int i=0; i<data.size(); i++) {
			result.add(data.getID(i)+ "<A NAME= 'M" + i + "'></A>");
=====================================================================
Found a 13 line (123 tokens) duplication in the following files: 
Starting at line 557 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 492 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

	public JToolBar[] getQueryBuilderToolbars()
	{
		this.toolBar1 = new JToolBar();
		this.toolBar1.setRollover(true);
		this.toolBar1.setFloatable(false);
		this.toolBar2 = new JToolBar();
		this.toolBar2.setRollover(true);
		this.toolBar2.setFloatable(false);

		ButtonGroup drawButtons = new ButtonGroup();
		drawButtons.add(addIntelligentButton(this.toolBar1, (Action) this.actions.get("Draw Select")));
		drawButtons.add(addIntelligentButton(this.toolBar1, (Action) this.actions.get("Draw Drag")));
		drawButtons.add(addIntelligentButton(this.toolBar1, (Action) this.actions.get("Draw Sequential")));
=====================================================================
Found a 30 line (121 tokens) duplication in the following files: 
Starting at line 601 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java
Starting at line 505 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

	return(testpath.contains(r));
    }

    public final Rectangle getBounds() {
	return(path.getBounds2D().getBounds());
    }

    public final Rectangle2D getBounds2D() {
	return(path.getBounds2D());
    }

    /**
     * Equivalent to <TT>getPathIterator(null)</TT>.
     *
     * @see getPathIterator(AffineTransform)
     */
    public final PathIterator getPathIterator() {
	return path.getPathIterator(null);
    }

    public final PathIterator getPathIterator(AffineTransform at) {
	return path.getPathIterator(at);
    }

    public final PathIterator getPathIterator(AffineTransform at, double flatness) {
	return new FlatteningPathIterator(path.getPathIterator(at), flatness);
    }

    public final boolean intersects(double x, double y, double width, double height) {
	return(testpath.intersects(x, y, width, height));
=====================================================================
Found a 20 line (121 tokens) duplication in the following files: 
Starting at line 1348 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1493 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            for(int i=0; i<n; i++){
                bb[i]=aa[i];
                indices[i]=i;
            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(bb[i]<bb[index]){
                        index=i;
                    }
                }
                lastIndex++;
                holdb=bb[index];
                bb[index]=bb[lastIndex];
                bb[lastIndex]=holdb;
                holdi=indices[index];
                indices[index]=indices[lastIndex];
                indices[lastIndex]=holdi;
            }
=====================================================================
Found a 18 line (121 tokens) duplication in the following files: 
Starting at line 813 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 838 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

		transform.transform(new Point2D.Double(0, -0.5 * Transition.TRANSITION_HEIGHT), transformed);
		while (arcIterator.hasNext())
		{
			final ArcAngleCompare thisArc = (ArcAngleCompare) arcIterator.next();
			if (thisArc.sourceOrTarget())
			{
				thisArc.arc.setTargetLocation(	this.positionX + this.centreOffsetLeft() + transformed.x,
												this.positionY + this.centreOffsetTop() + transformed.y);
			}
			else
			{
				thisArc.arc.setSourceLocation(	this.positionX + this.centreOffsetLeft() + transformed.x,
												this.positionY + this.centreOffsetTop() + transformed.y);
			}
			thisArc.arc.updateArrow();
		}

		arcIterator = left.iterator();
=====================================================================
Found a 22 line (121 tokens) duplication in the following files: 
Starting at line 154 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 401 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

		createRGFile(intermediate, esoFile, statearraysize, numtangiblestates, numtransitions,false);
		
		if(DEBUG){
			/* Write a csv file indicating the Hashtable distribution */
			FileWriter htdist = new FileWriter("HashTableDist.csv");
			for(int row = 0; row < NUMHASHROWS; row++){
				htdist.write(Integer.toString(row) + ",");
				if(exploredStates[row] == null)
					htdist.write("0\n");
				else
					htdist.write(Integer.toString(exploredStates[row].size()) + "\n");
			}
			htdist.close();
			System.out.println("Finished writing hashtable distribution to file.");
		}
		
		if(intermediate.exists()){
			if(!intermediate.delete()){
				System.err.println("\nCould not delete intermediate file.");
			}
		}
	}
=====================================================================
Found a 16 line (120 tokens) duplication in the following files: 
Starting at line 1772 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1990 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	setPatch(r);
	setAttribute(MINSIZE_ATTR, new GrappaSize(r.getWidth(), r.getHeight()+(top?0:1)));
	dir = aspect(r);

	total = getPatchSize();
	if(top)
	    box = new GrappaBox(r);
	else
	    box = new GrappaBox(r.getX()+PATCHEDGE, r.getY()+PATCHEDGE, r.getWidth()-PATCHEDGE2, r.getHeight()-PATCHEDGE2);

	if(dir > 1)
	    previous = box.getY();
	else
	    previous = box.getX();

	if(sgPatches != null) {
=====================================================================
Found a 19 line (120 tokens) duplication in the following files: 
Starting at line 929 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 1231 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java

					throw new QueryException(errormsg);
				}
				else
				{
					if (MacroEditor.this.macroDescriptionTextField.getText().equals("") ||
						!MacroEditor.containsText(MacroEditor.this.macroDescriptionTextField.getText()))
					{
						errormsg = "Please supply a description for the macro in \n"
									+ "order to be able to identify it conveniently \n" + "at a later stage.";
						throw new QueryException(errormsg);
					}
					else
					{
						if (macroTreeValid())
						{
							// all good, so save macro in QueryData
							MacroEditor.this.activeMacro.setName(MacroEditor.this.macroNameTextField.getText());
							MacroEditor.this.activeMacro.setDescription(MacroEditor.this.macroDescriptionTextField.getText());
							MacroEditor.this.activeMacro.setReturnType(MacroEditor.this.activeMacro.determineMacroReturnType());
=====================================================================
Found a 20 line (119 tokens) duplication in the following files: 
Starting at line 348 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 842 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java

		macro.updateMacroNode(node);

		// create outgoing arcs
		for (int i = 0; i < nodeElementList.getLength(); i++)
		{
			Node nodeNode = nodeElementList.item(i);
			if (nodeNode instanceof Element)
			{
				Element nodeElement = (Element) nodeNode;
				if ("outgoingArcs".equals(nodeElement.getNodeName()))
				{
					NodeList outgoingArcsElementList = nodeElement.getChildNodes();
					for (int j = 0; j < outgoingArcsElementList.getLength(); j++)
					{
						Node outgoingArcsNode = outgoingArcsElementList.item(j);
						if (outgoingArcsNode instanceof Element)
						{
							Element outgoingArcsElement = (Element) outgoingArcsNode;
							if ("arc".equals(outgoingArcsElement.getNodeName()))
							{
=====================================================================
Found a 21 line (116 tokens) duplication in the following files: 
Starting at line 53 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsGraph.java
Starting at line 42 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/GraphPanelPane.java

      filename=new FileBrowser("PNG image","png",filename).saveFile();
      if(filename!=null) try {
        graph.setIgnoreRepaint(true);
        Border b=graph.getBorder();
        graph.setBorder(null);
        Dimension d=graph.getPreferredSize(); // Export uses preferred size for exported file dimensions
        graph.setSize(640,480);
        graph.setPreferredSize(graph.getSize());
        Export.toPNG(graph,filename);
        graph.setPreferredSize(d);
        graph.setBorder(b);
        graph.setIgnoreRepaint(false);
      } catch (IOException ex) {
      }
    }
  };
  
  public synchronized GraphPanel getGraph() {
    return graph;
  }
}
=====================================================================
Found a 24 line (116 tokens) duplication in the following files: 
Starting at line 1383 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 1159 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

			JViewport thisView = ((JScrollPane) QueryEditor.this.drawingCanvas.getSelectedComponent()).getViewport();
			double currentXNoZoom, currentYNoZoom;
			currentXNoZoom = zoomer.getUnzoomedValue(thisView.getViewPosition().x + thisView.getWidth() * 0.5);
			currentYNoZoom = zoomer.getUnzoomedValue(thisView.getViewPosition().y + thisView.getHeight() *
														0.5);
			String selection = null;
			String strToTest = null;

			if (actionName.equals("Zoom In"))
			{
				zoomer.zoomIn();
				updateZoomCombo();
			}
			else
			{
				if (actionName.equals("Zoom Out"))
				{
					zoomer.zoomOut();
					updateZoomCombo();
				}
				else
				{
					if (actionName.equals("Zoom"))
						selection = (String) QueryEditor.this.zoomComboBox.getSelectedItem();
=====================================================================
Found a 17 line (116 tokens) duplication in the following files: 
Starting at line 845 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 379 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

		for (int i = 0; i < nodeElementList.getLength(); i++)
		{
			Node nodeNode = nodeElementList.item(i);
			if (nodeNode instanceof Element)
			{
				Element nodeElement = (Element) nodeNode;
				if ("outgoingArcs".equals(nodeElement.getNodeName()))
				{
					NodeList outgoingArcsElementList = nodeElement.getChildNodes();
					for (int j = 0; j < outgoingArcsElementList.getLength(); j++)
					{
						Node outgoingArcsNode = outgoingArcsElementList.item(j);
						if (outgoingArcsNode instanceof Element)
						{
							Element outgoingArcsElement = (Element) outgoingArcsNode;
							if ("arc".equals(outgoingArcsElement.getNodeName()))
							{
=====================================================================
Found a 17 line (116 tokens) duplication in the following files: 
Starting at line 379 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 871 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java

		for (int i = 0; i < nodeElementList.getLength(); i++)
		{
			Node nodeNode = nodeElementList.item(i);
			if (nodeNode instanceof Element)
			{
				Element nodeElement = (Element) nodeNode;
				if ("childNodes".equals(nodeElement.getNodeName()))
				{
					NodeList childNodesElementList = nodeElement.getChildNodes();
					for (int j = 0; j < childNodesElementList.getLength(); j++)
					{
						Node childNodesNode = childNodesElementList.item(j);
						if (childNodesNode instanceof Element)
						{
							Element childNodesElement = (Element) childNodesNode;
							if ("node".equals(childNodesElement.getNodeName()))
							{
=====================================================================
Found a 17 line (116 tokens) duplication in the following files: 
Starting at line 351 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 379 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

		for (int i = 0; i < nodeElementList.getLength(); i++)
		{
			Node nodeNode = nodeElementList.item(i);
			if (nodeNode instanceof Element)
			{
				Element nodeElement = (Element) nodeNode;
				if ("outgoingArcs".equals(nodeElement.getNodeName()))
				{
					NodeList outgoingArcsElementList = nodeElement.getChildNodes();
					for (int j = 0; j < outgoingArcsElementList.getLength(); j++)
					{
						Node outgoingArcsNode = outgoingArcsElementList.item(j);
						if (outgoingArcsNode instanceof Element)
						{
							Element outgoingArcsElement = (Element) outgoingArcsNode;
							if ("arc".equals(outgoingArcsElement.getNodeName()))
							{
=====================================================================
Found a 21 line (116 tokens) duplication in the following files: 
Starting at line 53 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsGraph.java
Starting at line 42 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/GraphPanelPane.java

      filename=new FileBrowser("PNG image","png",filename).saveFile();
      if(filename!=null) try {
        graph.setIgnoreRepaint(true);
        Border b=graph.getBorder();
        graph.setBorder(null);
        Dimension d=graph.getPreferredSize(); // Export uses preferred size for exported file dimensions
        graph.setSize(640,480);
        graph.setPreferredSize(graph.getSize());
        Export.toPNG(graph,filename);
        graph.setPreferredSize(d);
        graph.setBorder(b);
        graph.setIgnoreRepaint(false);
      } catch (IOException ex) {
      }
    }
  };
  
  public synchronized GraphPanel getGraph() {
    return graph;
  }
}
=====================================================================
Found a 14 line (115 tokens) duplication in the following files: 
Starting at line 32 of /usr/local/git/PipeCoursework/src/pipe/common/queryresult/XYCoordinatesTest.java
Starting at line 58 of /usr/local/git/PipeCoursework/src/pipe/common/queryresult/XYCoordinatesTest.java

	public void testMax()
	{
		final XYCoordinates cs = new XYCoordinates();

		cs.add(new XYCoordinate(0, 10));
		cs.add(new XYCoordinate(1, 8));
		cs.add(new XYCoordinate(2, 0));
		cs.add(new XYCoordinate(3, 6));
		cs.add(new XYCoordinate(4, 100));
		cs.add(new XYCoordinate(5, 1));
		cs.add(new XYCoordinate(8, 0));
		cs.add(new XYCoordinate(6, 4));

		List<XYCoordinate> c = cs.getFromXToX(-2, 77);
=====================================================================
Found a 20 line (113 tokens) duplication in the following files: 
Starting at line 162 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 165 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

	}

	/* (non-Javadoc)
	 * @see java.awt.event.MouseMotionListener#mouseDragged(java.awt.event.MouseEvent)
	 */
	public void mouseDragged(MouseEvent arg0) {
		if (isSelecting) {
			selectionRectangle.setSize((int)Math.abs(arg0.getX()-selectionInit.getX()),
									   (int)Math.abs(arg0.getY()-selectionInit.getY()));
			selectionRectangle.setLocation((int)Math.min(selectionInit.getX(), arg0.getX()),
										   (int)Math.min(selectionInit.getY(), arg0.getY()));
			processSelection(arg0);	// Select anything that intersects with the rectangle.
		}
		repaint();
	}

	/* (non-Javadoc)
	 * @see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)
	 */
	public void mouseMoved(MouseEvent arg0) {
=====================================================================
Found a 18 line (113 tokens) duplication in the following files: 
Starting at line 181 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 194 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

	private static void createNodeElement(	final PerformanceTreeNode inputNode,
											final Element parentElement,
											final Document document)
	{

		Element nodeElement = document.createElement("node");

		// common data to serialise for all PT nodes
		String nodeID = inputNode.getId();
		Double nodePositionX = inputNode.getPositionXObject();
		Double nodePositionY = inputNode.getPositionYObject();
		PTNode nodeType = inputNode.getNodeType();
		String nodeIncomingArcID = inputNode.getIncomingArcID();
		nodeElement.setAttribute("id", nodeID);
		nodeElement.setAttribute("type", nodeType.toString());
		nodeElement.setAttribute("x", String.valueOf(nodePositionX));
		nodeElement.setAttribute("y", String.valueOf(nodePositionY));
		nodeElement.setAttribute("incomingArc", nodeIncomingArcID);
=====================================================================
Found a 32 line (113 tokens) duplication in the following files: 
Starting at line 22 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ServerPanelProcessors.java
Starting at line 22 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ServerPanelProcessors.java

public class ServerPanelProcessors extends ServerPanel
{
	private JPanel serverPanel=null;
	private JSpinner processorNo;  

	public ServerPanelProcessors(JDialog parent)
	{
		// Use parent to construct basic server panel
		super(parent);
		serverPanel = super.getPanel();
		
		// Add additional processor entry components
		serverPanel.add(new JLabel("No. Processors"));
		
		processorNo = new JSpinner(new SpinnerNumberModel(8, 2, 10000, 1));
		serverPanel.add(processorNo);
		
		
		serverPanel.setMaximumSize(new Dimension(Integer.MAX_VALUE,serverPanel.getPreferredSize().height));				
	}
	
	// Returns the number of processors entered in the spinner
	public int getNumProcessors() throws NumberFormatException
	{
		// Test that it's a valid int, exception raise if not
		Integer value =	(Integer)processorNo.getValue();
		
		// Return string representation
		return value.intValue();
	}

}
=====================================================================
Found a 33 line (112 tokens) duplication in the following files: 
Starting at line 107 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/Analyse.java
Starting at line 98 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/Analyse.java

			tabbedPane.setSelectedComponent(resultsPane);
		  }

		     catch (StreamCorruptedException sce) {
		    	 updateUI("Stream Corrupted Exception" + sce.getMessage());
		     }
		     catch(UnknownHostException uhe){
		    	 updateUI("Unknown host exception " + uhe.getMessage());
		     }
		     catch (OptionalDataException ode) {
		    	 updateUI("Data Exception" + ode.getMessage());
		       }
		     catch (IOException ioe) {
		    	 updateUI("Unable to connect to server " + serverAddr + " : " +  serverPort + ": " + ioe.getMessage());	    	 
	       }
	  

		
	  }
	  
	  private void updateUI(String update)
	  {
		  // setText is a thread safe operation so we can freely use it within this thread
		  status += update + "<br>";
		  progressPane.setText(status); 
	  }


	  public void setTabbedPane(JTabbedPane inputPane)
	  {
		  tabbedPane = inputPane;
	  }
}
=====================================================================
Found a 63 line (112 tokens) duplication in the following files: 
Starting at line 460 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 495 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java

		timeMethodPanel.add(timeStep);				

		/*
		timeMethodPanel.add(new JLabel("Method:"));
		
		methodCombo = new JComboBox();
		methodCombo.addItem("Laguerre");
		methodCombo.addItem("Euler");		
		timeMethodPanel.add(methodCombo);
*/
		
		/*
	    JPanel autoPanel = new JPanel(new GridLayout(1,1));
	    
	    autoTimeBox = new JCheckBox("Automatically determine time range"); 
	    autoTimeBox.addItemListener((ItemListener) this);
	    autoPanel.add(autoTimeBox);
		autoPanel.setMaximumSize(new Dimension(Integer.MAX_VALUE, autoPanel.getPreferredSize().height));
		
		JPanel cachePanel = new JPanel(new GridLayout(1,1));
		
	    clearCacheBox = new JCheckBox("Clear cached values from server"); 
	    cachePanel.add(clearCacheBox);
		cachePanel.setMaximumSize(new Dimension(Integer.MAX_VALUE, cachePanel.getPreferredSize().height));
	   */
		
		
		// Add to main analysis panel
		timePanel.add(startEndTime);
		timePanel.add(timeMethodPanel);
		//timePanel.add(autoPanel);
		//timePanel.add(cachePanel);
		timePanel.setMaximumSize(new Dimension(Integer.MAX_VALUE,timePanel.getPreferredSize().height));
	
		
		return timePanel;
	}
	/** This method retrieves the selected state groups from the entered JList
	 * and adds them to an ArrayList which is returned
	 * 
	 * @param stateList JList of selected states (source / destination lists)
	 * @return selectedstates ArrayList of the StateGroups that are selected; null if none are selected
	 */
	private ArrayList getSelectedStateGroups(JList statesList)
	{
		// Retrieve selected State Groups
		int[] selectedIndices = statesList.getSelectedIndices();
	
		if (selectedIndices.length > 0)
		{
			// Create output ArrayList
			ArrayList<StateGroup> selectedStates = new ArrayList<StateGroup>(selectedIndices.length);
			
			// Copy selected states from StateGroupData
			for (int i=0; i< selectedIndices.length; i++)
				selectedStates.add(stateGroupData[ selectedIndices[i] ]);
			
			return selectedStates;
		}
		
		else
			return null;
	}
=====================================================================
Found a 13 line (111 tokens) duplication in the following files: 
Starting at line 385 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 424 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

		    Point2D pt = new Point2D.Double(r.x,r.y);
		    cpt = new Point2D.Double(r.x+r.width,r.y+r.height);
		    inverseTransform.transform(pt,pt);
		    inverseTransform.transform(cpt,cpt);
		    cpt.setLocation(
				    pt.getX() + (cpt.getX() - pt.getX())/2.,
				    pt.getY() + (cpt.getY() - pt.getY())/2.
				    );
		} else {
		    // to save checking again below
		    prnt = null;
		}
	    }
=====================================================================
Found a 16 line (111 tokens) duplication in the following files: 
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/InIntervalNode.java
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ConvolutionNode.java

		ArrayList children = getChildNodes();
		if (children != null) {
			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();	
				QueryManager.colourUp();
				description += child.printTextualRepresentation();
				QueryManager.colourDown();
				if (i.hasNext()) 	
					description += QueryManager.addColouring(op);
				else {
					if (children.size() == 1) {
						QueryManager.colourDown();
						description += QueryManager.addColouring(op);
						QueryManager.colourUp();
						description += QueryManager.addColouring("another passage time density that has not been specified yet ");
=====================================================================
Found a 28 line (111 tokens) duplication in the following files: 
Starting at line 62 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java
Starting at line 134 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

		for(int i=0; i<places.length; i++) {
			if(places.tagged[i]==true)
				taggedPlaceIndex = i;
		}
		
		//String filename = "modFile" + clientNo + ".mod";
		//file = path + System.getProperty("file.separator") + filename;
		file = path;
		
		try{
			md = MessageDigest.getInstance("MD5");
		} catch (NoSuchAlgorithmException nSAE) {
			System.out.println("Hashing algorithm not found!");
			nSAE.printStackTrace();
		}
		
		try
		{			
			// Create output mod file
			modFile = new File(file);
			FileWriter modFileWriter = new FileWriter(modFile); 
			
			System.out.print("Creating mod file " + file + ".. ");
			
			if (places.length > 0)
			{
				model();
				modString += computeHash(modString);
=====================================================================
Found a 25 line (110 tokens) duplication in the following files: 
Starting at line 166 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 173 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultBarChartPlotter.java

			this.graphPanel.add(this.chartPanel, "Dist");

			// Create the results panel
			this.resultsPanel.removeAll(); // clear if previously used
			this.resultsPanel.add(this.graphPanel, Component.CENTER_ALIGNMENT);

			// Create button panel then add
			final JPanel buttons = new JPanel();

			final JButton saveImageBtn = new JButton("Save Graph");
			saveImageBtn.addActionListener(this.pngListener);
			saveImageBtn.setMnemonic(KeyEvent.VK_S);

			final JButton saveCordBtn = new JButton("Save Points");
			saveCordBtn.addActionListener(this.cvsListener);
			saveCordBtn.setMnemonic(KeyEvent.VK_C);

			buttons.add(saveImageBtn);
			buttons.add(saveCordBtn);

			this.resultsPanel.add(buttons, Component.CENTER_ALIGNMENT);

			return this.resultsPanel;
		}
		else
=====================================================================
Found a 22 line (110 tokens) duplication in the following files: 
Starting at line 524 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 439 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

		setJMenuBar(this.menuBar);
	}

	private JMenuItem addMenuItem(final JMenu menu, final Action action)
	{
		JMenuItem item = menu.add(action);
		KeyStroke keystroke = (KeyStroke) action.getValue(Action.ACCELERATOR_KEY);
		if (keystroke != null)
			item.setAccelerator(keystroke);
		return item;
	}

	private void addZoomMenuItems(final JMenu zoomMenu)
	{
		for (int i = 0; i <= this.zoomExamples.length - 1; i++)
		{
			JMenuItem newItem = new JMenuItem(new ZoomAction(	this.zoomExamples[i],
																"Select zoom percentage",
																""));
			zoomMenu.add(newItem);
		}
	}
=====================================================================
Found a 23 line (109 tokens) duplication in the following files: 
Starting at line 88 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 77 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultBarChartPlotter.java

														try
														{
															fw = new FileWriter(saveFile);

															for (int i = 0; i < size; i++)
															{
																content.append(graphData.getXValue(0, i));
																content.append(",");
																content.append(graphData.getYValue(0, i));
																content.append(",\n");
															}
															String content1 = content.toString();

															fw.write(content1);
															fw.close();
														}
														catch (IOException e)
														{
															String msg = "Couldn't save file, problem writing file!";
															EvaluatorGuiLoggingHandler.logger.log(	Level.WARNING,
																									msg,
																									e);
															JOptionPane.showMessageDialog(	ResultBarChartPlotter.this.resultsPanel,
=====================================================================
Found a 21 line (109 tokens) duplication in the following files: 
Starting at line 1121 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 499 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java

								throw new QueryException(errormsg);
							}
						}
					}
					else if (node instanceof StatesNode) {
						if (((StatesNode)node).getNodeLabelObject() == null) {
							errormsg = "Please ensure that your States nodes \n"+
									   "all have state labels assigned to them.";
							throw new QueryException(errormsg);
						}
					}
					else if (node instanceof ActionsNode) {
						if (((ActionsNode)node).getNodeLabelObject() == null) {
							errormsg = "Please ensure that your Actions nodes \n"+
							   		   "all have action labels assigned to them.";
							throw new QueryException(errormsg);
						}
					}
					else if (node instanceof BoolNode) {
						if (((BoolNode)node).getNodeLabelObject() == null) {
							errormsg = "Please ensure that your Bool nodes \n"+
=====================================================================
Found a 23 line (108 tokens) duplication in the following files: 
Starting at line 755 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 491 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

	    debug_message(5, "# Current token is #" + cur_token.sym);
	  }
	/* if its less than zero, then it encodes a reduce action */
	else if (act < 0)
	  {
	    /* perform the action for the reduce */
	    lhs_sym = do_action((-act)-1, this, stack, tos);

	    /* look up information about the production */
	    lhs_sym_num = production_tab[(-act)-1][0];
	    handle_size = production_tab[(-act)-1][1];

	    debug_reduce((-act)-1, lhs_sym_num, handle_size);

	    /* pop the handle off the stack */
	    for (int i = 0; i < handle_size; i++)
	      {
		stack.pop();
		tos--;
	      }
	      
	    /* look up the state to go to from the one popped back to */
	    act = get_reduce(((Symbol)stack.peek()).parse_state, lhs_sym_num);
=====================================================================
Found a 29 line (107 tokens) duplication in the following files: 
Starting at line 707 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java
Starting at line 495 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java

	}

	private boolean isDecimalAnInteger(final double decimalNo)
	{
		boolean decimalIsAnInteger = true;
		String stringRepresentation = Double.toString(decimalNo);

		if (!stringRepresentation.equals(""))
		{
			int indexOfDecimalDot = stringRepresentation.indexOf(".");
			if (indexOfDecimalDot != -1)
			{
				// all characters after the decimal dot (if one exists) have to
				// be a 0
				for (int i = indexOfDecimalDot + 1; i < stringRepresentation.length(); i++)
				{
					char chr = stringRepresentation.charAt(i);
					if (!String.valueOf(chr).equals("0"))
					{
						decimalIsAnInteger = false;
						break;
					}
				}
			}
		}
		return decimalIsAnInteger;
	}

}
=====================================================================
Found a 12 line (106 tokens) duplication in the following files: 
Starting at line 759 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaColor.java
Starting at line 1023 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	int len = 0;
	boolean allDigits = true;
	for(int i = 0; i < array.length; i++) {
	    if(Character.isUpperCase(array[i])) {
		array[len++] = Character.toLowerCase(array[i]);
		allDigits = false;
	    } else if(Character.isLowerCase(array[i])) {
		array[len++] = array[i];
		allDigits = false;
	    } else if(Character.isDigit(array[i])) {
		array[len++] = array[i];
	    }
=====================================================================
Found a 9 line (106 tokens) duplication in the following files: 
Starting at line 341 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 399 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 453 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

		    shapeType = OVAL_SHAPE|GRAPPA_SHAPE;
		    if(Grappa.centerPointNodes) {
			shape = new GrappaShape(shapeType, pos.x, pos.y, width, height, sides, peripheries, distortion, skew, orientation, style.rounded, style.diagonals, null);
		    } else {
			shape = new GrappaShape(shapeType, pos.x + (width/2.0), pos.y + (height/2.0), width, height, sides, peripheries, distortion, skew, orientation, style.rounded, style.diagonals, null);
		    }
		}
		break;
	    case DIAMOND_SHAPE:
=====================================================================
Found a 20 line (106 tokens) duplication in the following files: 
Starting at line 119 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 190 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

			if (node.getResult().getOrginalType() == PTNode.MOMENT)
			{
				final JPopupMenu menu = new JPopupMenu();
				final TextFileResultWrapper result = (TextFileResultWrapper) node.getResult();

				final JMenuItem num = new JMenuItem(String.valueOf(result.getNumResult()));

				menu.add(num);

				final JMenuItem popup = new JMenuItem(new TabOpenFileText(node));
				popup.setText("View Text File");
				menu.add(popup);

				menu.setVisible(true);

				menu.show(event.getComponent(), event.getX(), event.getY());
			}
			else
			{
				throw new QueryAnalysisException("Argument Node isn't of type Moment");
=====================================================================
Found a 15 line (106 tokens) duplication in the following files: 
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateProbNode.java
Starting at line 78 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/StatesAtTimeNode.java
Starting at line 77 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/RangeNode.java
Starting at line 79 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ProbInIntervalNode.java
Starting at line 86 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/DisconNode.java
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ArithOpNode.java

		ArrayList children = getChildNodes();
		if (children != null) {
			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();	
				QueryManager.colourUp();
				description += child.printTextualRepresentation();	
				QueryManager.colourDown();
				if (i.hasNext()) 
					description += QueryManager.addColouring(op);
				else {
					if (children.size() == 1) {
						description += QueryManager.addColouring(op);
						QueryManager.colourUp();
						description += QueryManager.addColouring("another numerical value that has not been specified yet ");
=====================================================================
Found a 25 line (106 tokens) duplication in the following files: 
Starting at line 248 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 389 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

	}

	private String getTransitionConditions(int transitionNum) {
		String condition = new String();
	  	
		Iterator<SimpleArc> arcsTo = transitions.arcsTo.get(transitionNum).iterator();
		SimpleArc currArc;
		
	  	if (arcsTo.hasNext())
	  	{
	  		currArc = arcsTo.next();
	  		condition += currArc.placeId + " > " + (currArc.weight - 1);
	  	}
	  		
	  		
	  	while (arcsTo.hasNext())
	  	{
	  		currArc = arcsTo.next();
	  		condition += " && " + currArc.placeId + " > " + (currArc.weight - 1);
	  	}
	  	
	  	return condition; 	
	}

	private String getTaggedTransitionConditions(int transitionNum, String tagInputPlace) {
=====================================================================
Found a 17 line (105 tokens) duplication in the following files: 
Starting at line 2663 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 2801 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

	private void setEnabledTransitionsBackwards()
	{
		if (DataLayer.currentMarkingVectorChanged)
		{
			this.createMatrices();
		}
		if (this.transitionsArray != null && this.placesArray != null)
		{
			for (int transitionNo = 0; transitionNo < this.transitionsArray.size(); transitionNo++)
			{
				final Transition transition = (Transition) this.transitionsArray.get(transitionNo);
				if (transition != null)
				{
					int test = this.placesArray.size();
					for (int placeNo = 0; placeNo < this.placesArray.size(); placeNo++)
					{
						if (this.forwardsIncidenceMatrix.get(placeNo, transitionNo) <= this.currentMarkingVector[placeNo])
=====================================================================
Found a 36 line (105 tokens) duplication in the following files: 
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 97 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java

	public void run(DataLayer pnmlDataIn) {
		
		
	
		pnmlData = pnmlDataIn;
	  	stateGroupData = pnmlDataIn.getStateGroups();
	  	
	 // Create tabbed pane
	  	tabbedPane = new JTabbedPane();
	  	
	  	// Build primary tab
	  	guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
	    Container contentPane=guiDialog.getContentPane();
	    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
	  	
	    
	    // 1 Set layout
	  	JPanel setupPanel = new JPanel();
	    setupPanel.setLayout(new BoxLayout(setupPanel,BoxLayout.PAGE_AXIS));

	    // 3 Add Source - Destination States selection panel
	    setupPanel.add( getStatesPanel() );   
	    
	   
	    
	    // 4 Add Passage time parameters
	    setupPanel.add( getAnalysisPanel() );
	    
	   // setupPanel.add( jcbCumulative=new JCheckBox("Cumulative",false)  );
	    
	    
	    //autoTimeBox = new JCheckBox("Automatically determine time range"); 
	    //setupPanel.add(autoTimeBox);
	    
	    // 5 Add Analyse and Validate button
	    setupPanel.add(new ButtonBar("Validate", validateClick));
=====================================================================
Found a 6 line (103 tokens) duplication in the following files: 
Starting at line 341 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 482 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

		shapeType = type|GRAPPA_SHAPE;
		if(Grappa.centerPointNodes) {
		    shape = new GrappaShape(shapeType, pos.x, pos.y, width, height, sides, peripheries, distortion, skew, orientation, style.rounded, style.diagonals, null);
		} else {
		    shape = new GrappaShape(shapeType, pos.x + (width/2.0), pos.y + (height/2.0), width, height, sides, peripheries, distortion, skew, orientation, style.rounded, style.diagonals, null);
		}
=====================================================================
Found a 9 line (103 tokens) duplication in the following files: 
Starting at line 1491 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1504 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static Complex cot(Complex aa ){
                Complex c = new Complex();
                double denom = 0.0D;
                double a = aa.real;
                double b = aa.imag;

                Complex x = new Complex(Math.sin(a)*Fmath.cosh(b), Math.cos(a)*Fmath.sinh(b));
                Complex y = new Complex(Math.cos(a)*Fmath.cosh(b), -Math.sin(a)*Fmath.sinh(b));
                c=Complex.over(y, x);
=====================================================================
Found a 10 line (103 tokens) duplication in the following files: 
Starting at line 1743 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1817 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

         public static void selectionSort(long[] aa, int[] bb, long[] cc, int[] dd){
            int index = 0;
            int lastIndex = -1;
            int n = aa.length;
            int m = bb.length;
            if(n!=m)throw new IllegalArgumentException("First argument array, aa, (length = " + n + ") and the second argument array, bb, (length = " + m + ") should be the same length");
            int nn = cc.length;
            if(nn<n)throw new IllegalArgumentException("The third argument array, cc, (length = " + nn + ") should be at least as long as the first argument array, aa, (length = " + n + ")");
            int mm = dd.length;
            if(mm<m)throw new IllegalArgumentException("The fourth argument array, dd, (length = " + mm + ") should be at least as long as the second argument array, bb, (length = " + m + ")");
=====================================================================
Found a 10 line (103 tokens) duplication in the following files: 
Starting at line 1705 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1780 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

       public static void selectionSort(int[] aa, double[] bb, int[] cc, double[] dd){
            int index = 0;
            int lastIndex = -1;
            int n = aa.length;
            int m = bb.length;
            if(n!=m)throw new IllegalArgumentException("First argument array, aa, (length = " + n + ") and the second argument array, bb, (length = " + m + ") should be the same length");
            int nn = cc.length;
            if(nn<n)throw new IllegalArgumentException("The third argument array, cc, (length = " + nn + ") should be at least as long as the first argument array, aa, (length = " + n + ")");
            int mm = dd.length;
            if(mm<m)throw new IllegalArgumentException("The fourth argument array, dd, (length = " + mm + ") should be at least as long as the second argument array, bb, (length = " + m + ")");
=====================================================================
Found a 10 line (103 tokens) duplication in the following files: 
Starting at line 1668 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1854 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static void selectionSort(int[] aa, long[] bb, int[] cc, long[] dd){
            int index = 0;
            int lastIndex = -1;
            int n = aa.length;
            int m = bb.length;
            if(n!=m)throw new IllegalArgumentException("First argument array, aa, (length = " + n + ") and the second argument array, bb, (length = " + m + ") should be the same length");
            int nn = cc.length;
            if(nn<n)throw new IllegalArgumentException("The third argument array, cc, (length = " + nn + ") should be at least as long as the first argument array, aa, (length = " + n + ")");
            int mm = dd.length;
            if(mm<m)throw new IllegalArgumentException("The fourth argument array, dd, (length = " + mm + ") should be at least as long as the second argument array, bb, (length = " + m + ")");
=====================================================================
Found a 10 line (103 tokens) duplication in the following files: 
Starting at line 1631 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1743 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

       public static void selectionSort(double[] aa, int[] bb, double[] cc, int[] dd){
            int index = 0;
            int lastIndex = -1;
            int n = aa.length;
            int m = bb.length;
            if(n!=m)throw new IllegalArgumentException("First argument array, aa, (length = " + n + ") and the second argument array, bb, (length = " + m + ") should be the same length");
            int nn = cc.length;
            if(nn<n)throw new IllegalArgumentException("The third argument array, cc, (length = " + nn + ") should be at least as long as the first argument array, aa, (length = " + n + ")");
            int mm = dd.length;
            if(mm<m)throw new IllegalArgumentException("The fourth argument array, dd, (length = " + mm + ") should be at least as long as the second argument array, bb, (length = " + m + ")");
=====================================================================
Found a 10 line (103 tokens) duplication in the following files: 
Starting at line 1594 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1668 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

       public static void selectionSort(double[] aa, long[] bb, double[] cc, long[] dd){
            int index = 0;
            int lastIndex = -1;
            int n = aa.length;
            int m = bb.length;
            if(n!=m)throw new IllegalArgumentException("First argument array, aa, (length = " + n + ") and the second argument array, bb, (length = " + m + ") should be the same length");
            int nn = cc.length;
            if(nn<n)throw new IllegalArgumentException("The third argument array, cc, (length = " + nn + ") should be at least as long as the first argument array, aa, (length = " + n + ")");
            int mm = dd.length;
            if(mm<m)throw new IllegalArgumentException("The fourth argument array, dd, (length = " + mm + ") should be at least as long as the second argument array, bb, (length = " + m + ")");
=====================================================================
Found a 10 line (103 tokens) duplication in the following files: 
Starting at line 1520 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1705 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

    public static void selectionSort(long[] aa, double[] bb, long[] cc, double[] dd){
            int index = 0;
            int lastIndex = -1;
            int n = aa.length;
            int m = bb.length;
            if(n!=m)throw new IllegalArgumentException("First argument array, aa, (length = " + n + ") and the second argument array, bb, (length = " + m + ") should be the same length");
            int nn = cc.length;
            if(nn<n)throw new IllegalArgumentException("The third argument array, cc, (length = " + nn + ") should be at least as long as the first argument array, aa, (length = " + n + ")");
            int mm = dd.length;
            if(mm<m)throw new IllegalArgumentException("The fourth argument array, dd, (length = " + mm + ") should be at least as long as the second argument array, bb, (length = " + m + ")");
=====================================================================
Found a 15 line (103 tokens) duplication in the following files: 
Starting at line 461 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 173 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

		final Cubic[] C = new Cubic[n];
		for (i = 0; i < n; i++)
		{
			C[i] = new Cubic(x[i], D[i], 3 * (x[i + 1] - x[i]) - 2 * D[i] - D[i + 1], 2 * (x[i] - x[i + 1]) +
																						D[i] + D[i + 1]);
		}
		return C;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.awt.Shape#contains(double, double)
	 */
	public boolean contains(double arg0, double arg1)
=====================================================================
Found a 27 line (103 tokens) duplication in the following files: 
Starting at line 1357 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 1132 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

		}
	}

	class GridAction extends QueryAction
	{

		GridAction(final String name, final String tooltip, final String keystroke) {
			super(name, tooltip, keystroke);
		}

		public void actionPerformed(final ActionEvent e)
		{
			Grid.increment();
			repaint();
		}
	}

	class ZoomAction extends QueryAction
	{
		ZoomAction(final String name, final String tooltip, final String keystroke) {
			super(name, tooltip, keystroke);
		}

		public void actionPerformed(final ActionEvent e)
		{
			String actionName = (String) getValue(Action.NAME);
			PerformanceTreeZoomController zoomer = QueryEditor.this.queryView.getZoomController();
=====================================================================
Found a 24 line (102 tokens) duplication in the following files: 
Starting at line 2739 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 2764 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static boolean isEqual(float x, float y){
            boolean test=false;
            if(Fmath.isNaN(x)){
                if(Fmath.isNaN(y))test=true;
            }
            else{
                if(Fmath.isPlusInfinity(x)){
                    if(Fmath.isPlusInfinity(y))test=true;
                }
                else{
                    if(Fmath.isMinusInfinity(x)){
                        if(Fmath.isMinusInfinity(y))test=true;
                    }
                    else{
                        if(x==y)test=true;
                    }
                }
            }
            return test;
        }

        // Returns true if x equals y
        // x and y are int
        public static boolean isEqual(int x, int y){
=====================================================================
Found a 12 line (102 tokens) duplication in the following files: 
Starting at line 1780 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1854 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static void selectionSort(int[] aa, long[] bb, int[] cc, long[] dd){
            int index = 0;
            int lastIndex = -1;
            int n = aa.length;
            int m = bb.length;
            if(n!=m)throw new IllegalArgumentException("First argument array, aa, (length = " + n + ") and the second argument array, bb, (length = " + m + ") should be the same length");
            int nn = cc.length;
            if(nn<n)throw new IllegalArgumentException("The third argument array, cc, (length = " + nn + ") should be at least as long as the first argument array, aa, (length = " + n + ")");
            int mm = dd.length;
            if(mm<m)throw new IllegalArgumentException("The fourth argument array, dd, (length = " + mm + ") should be at least as long as the second argument array, bb, (length = " + m + ")");

            int holdx = 0;
=====================================================================
Found a 12 line (102 tokens) duplication in the following files: 
Starting at line 1594 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1817 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

         public static void selectionSort(long[] aa, int[] bb, long[] cc, int[] dd){
            int index = 0;
            int lastIndex = -1;
            int n = aa.length;
            int m = bb.length;
            if(n!=m)throw new IllegalArgumentException("First argument array, aa, (length = " + n + ") and the second argument array, bb, (length = " + m + ") should be the same length");
            int nn = cc.length;
            if(nn<n)throw new IllegalArgumentException("The third argument array, cc, (length = " + nn + ") should be at least as long as the first argument array, aa, (length = " + n + ")");
            int mm = dd.length;
            if(mm<m)throw new IllegalArgumentException("The fourth argument array, dd, (length = " + mm + ") should be at least as long as the second argument array, bb, (length = " + m + ")");

            long holdx = 0L;
=====================================================================
Found a 12 line (102 tokens) duplication in the following files: 
Starting at line 1520 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1743 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

       public static void selectionSort(double[] aa, int[] bb, double[] cc, int[] dd){
            int index = 0;
            int lastIndex = -1;
            int n = aa.length;
            int m = bb.length;
            if(n!=m)throw new IllegalArgumentException("First argument array, aa, (length = " + n + ") and the second argument array, bb, (length = " + m + ") should be the same length");
            int nn = cc.length;
            if(nn<n)throw new IllegalArgumentException("The third argument array, cc, (length = " + nn + ") should be at least as long as the first argument array, aa, (length = " + n + ")");
            int mm = dd.length;
            if(mm<m)throw new IllegalArgumentException("The fourth argument array, dd, (length = " + mm + ") should be at least as long as the second argument array, bb, (length = " + m + ")");

            double holdx = 0.0D;
=====================================================================
Found a 25 line (102 tokens) duplication in the following files: 
Starting at line 1382 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1409 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1436 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1463 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            long[] bb = new long[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(bb[i]<bb[index]){
                        index=i;
                    }
                }
                lastIndex++;
                hold=bb[index];
                bb[index]=bb[lastIndex];
                bb[lastIndex]=hold;
            }
            return bb;
        }

        // sort elements in an array of doubles into ascending order
        // using selection sort method
        // returns Vector containing the original array, the sorted array
        //  and an array of the indices of the sorted array
        public static void selectionSort(double[] aa, double[] bb, int[] indices){
=====================================================================
Found a 21 line (102 tokens) duplication in the following files: 
Starting at line 381 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 419 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

					if(transitions[i].isInfiniteServer())
					{
						
						String tagged_place = "(";
						
						arcToTransitions = transitions[i]. getConnectToIterator();
						if(arcToTransitions.hasNext()) 
					  	{
					  		tagged_place += ((Arc)arcToTransitions.next()).getSource().getId();;
					  	}
						while(arcToTransitions.hasNext()) 
					  	{
					  		final Arc arc = ((Arc)arcToTransitions.next());
					  		String currentId = arc.getSource().getId();
					  		tagged_place += "+" + currentId;
					  	}
							
						tagged_place += ")";
				  	
							
							modString += " tagged_location== " + tagInputPlaceIndex[0] + 
=====================================================================
Found a 21 line (101 tokens) duplication in the following files: 
Starting at line 1416 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 1470 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

			  (TAILLP_HASH == attrHash && TAILLP_ATTR.equals(attrName))
			  ||
			  (FONTSIZE_HASH == attrHash && FONTSIZE_ATTR.equals(attrName))
			  ||
			  (FONTNAME_HASH == attrHash && FONTNAME_ATTR.equals(attrName))
			  ||
			  (FONTSTYLE_HASH == attrHash && FONTSTYLE_ATTR.equals(attrName))
			  ) {
		    if(lastTextUpdate < thisUpdate) {
			updateText();
		    }
		} else if(
			  (STYLE_HASH == attrHash && STYLE_ATTR.equals(attrName))
			  ) {
		    if(lastStyleUpdate < thisUpdate) {
			updateStyle();
		    }
		} else if(
			  (COLOR_HASH == attrHash && COLOR_ATTR.equals(attrName))
			  ||
			  (DIR_HASH == attrHash && DIR_ATTR.equals(attrName))
=====================================================================
Found a 12 line (101 tokens) duplication in the following files: 
Starting at line 320 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 339 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java

		transform.transform(new Point2D.Double(0, -0.5 * QueryConstants.NODE_HEIGHT), transformed);
		while (arcIterator.hasNext())
		{
			ArcAngleCompare thisArc = (ArcAngleCompare) arcIterator.next();
			if (thisArc.sourceOrTarget())
				thisArc.arc.setTargetLocation(	this.positionX + centreOffsetLeft() + transformed.x,
												this.positionY + centreOffsetTop() + transformed.y);
			else thisArc.arc.setSourceLocation(	this.positionX + centreOffsetLeft() + transformed.x,
												this.positionY + centreOffsetTop() + transformed.y);
		}

		arcIterator = left.iterator();
=====================================================================
Found a 38 line (101 tokens) duplication in the following files: 
Starting at line 466 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 463 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

		timePanel.add(cachePanel);
		timePanel.setMaximumSize(new Dimension(Integer.MAX_VALUE,timePanel.getPreferredSize().height));
		
		return timePanel;
	}
	
	/** This method retrieves the selected state groups from the entered JList
	 * and adds them to an ArrayList which is returned
	 * 
	 * @param stateList JList of selected states (source / destination lists)
	 * @return selectedstates ArrayList of the StateGroups that are selected; null if none are selected
	 */
	private ArrayList getSelectedStateGroups(JList statesList)
	{
		// Retrieve selected State Groups
		int[] selectedIndices = statesList.getSelectedIndices();
	
		if (selectedIndices.length > 0)
		{
			// Create output ArrayList
			ArrayList<StateGroup> selectedStates = new ArrayList<StateGroup>(selectedIndices.length);
			
			// Copy selected states from StateGroupData
			for (int i=0; i< selectedIndices.length; i++)
				selectedStates.add(stateGroupData[ selectedIndices[i] ]);
			
			return selectedStates;
		}
		
		else
			return null;
	}
	
	/**
	 * 
	 * @return AnalysisSetting object representing the selected options; null if any setting is invalid
	 */
	private AnalysisSettings getTimeSettings()
=====================================================================
Found a 32 line (100 tokens) duplication in the following files: 
Starting at line 524 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java
Starting at line 463 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

		timePanel.add(cachePanel);
		timePanel.setMaximumSize(new Dimension(Integer.MAX_VALUE,timePanel.getPreferredSize().height));
		
		return timePanel;
	}
	
	/** This method retrieves the selected state groups from the entered JList
	 * and adds them to an ArrayList which is returned
	 * 
	 * @param stateList JList of selected states (source / destination lists)
	 * @return selectedstates ArrayList of the StateGroups that are selected; null if none are selected
	 */
	private ArrayList getSelectedStateGroups(JList statesList)
	{
		// Retrieve selected State Groups
		int[] selectedIndices = statesList.getSelectedIndices();
	
		if (selectedIndices.length > 0)
		{
			// Create output ArrayList
			ArrayList<StateGroup> selectedStates = new ArrayList<StateGroup>(selectedIndices.length);
			
			// Copy selected states from StateGroupData
			for (int i=0; i< selectedIndices.length; i++)
				selectedStates.add(stateGroupData[ selectedIndices[i] ]);
			
			return selectedStates;
		}
		
		else
			return null;
	}
=====================================================================
Found a 9 line (100 tokens) duplication in the following files: 
Starting at line 392 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 209 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

		this.actions.put("Exit", new FileAction("Exit", "Close query editor", "alt F4"));
		this.actions.put("Help", new HelpBox("Help", "Help", "F1", "index.htm"));

		// Toolbar actions
		this.actions.put("Grid", new GridAction("Cycle Grid", "Change grid size", "G"));
		this.actions.put("Zoom", new ZoomAction("Zoom", "Select zoom percentage ", ""));
		this.actions.put("ZoomIn", new ZoomAction("Zoom In", "Zoom in by 10% ", "ctrl +"));
		this.actions.put("ZoomOut", new ZoomAction("Zoom Out", "Zoom out by 10% ", "ctrl -"));
		this.actions.put("Delete", new DeleteAction("Delete", "Delete selection", "DELETE"));
=====================================================================
Found a 19 line (99 tokens) duplication in the following files: 
Starting at line 130 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java
Starting at line 120 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java

			super.add(currentObj);
			if (currentObj instanceof ArcPathPoint)
				setLayer(currentObj, DEFAULT_LAYER.intValue() + ARC_POINT_LAYER_OFFSET);
			else if (currentObj instanceof Arc)
				setLayer(currentObj, DEFAULT_LAYER.intValue() + ARC_LAYER_OFFSET);	
			else if (currentObj instanceof Transition)
				setLayer(currentObj, DEFAULT_LAYER.intValue() + PLACE_TRANSITION_LAYER_OFFSET);
			else if (currentObj instanceof AnnotationNote)
				setLayer(currentObj, DEFAULT_LAYER.intValue() + ANNOTATION_LAYER_OFFSET);			
		}
	}

	/**
	 * This method sets the condition on all places to be equal zero
	 */
	public void setEqualZeroCond() {
		for(ConditionPlace curPlace : condPlaces) {
			// Update the 'change buffer' in PassageState
			((StateGroupEditor)parent).addStateElement(curPlace.getId(), "=", "0");
=====================================================================
Found a 10 line (98 tokens) duplication in the following files: 
Starting at line 1520 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1557 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1594 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1631 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

       public static void selectionSort(int[] aa, int[] bb, int[] cc, int[] dd){
            int index = 0;
            int lastIndex = -1;
            int n = aa.length;
            int m = bb.length;
            if(n!=m)throw new IllegalArgumentException("First argument array, aa, (length = " + n + ") and the second argument array, bb, (length = " + m + ") should be the same length");
            int nn = cc.length;
            if(nn<n)throw new IllegalArgumentException("The third argument array, cc, (length = " + nn + ") should be at least as long as the first argument array, aa, (length = " + n + ")");
            int mm = dd.length;
            if(mm<m)throw new IllegalArgumentException("The fourth argument array, dd, (length = " + mm + ") should be at least as long as the second argument array, bb, (length = " + m + ")");
=====================================================================
Found a 41 line (98 tokens) duplication in the following files: 
Starting at line 232 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java
Starting at line 190 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ConditionPlaceHandler.java

		 }
		 catch(Exception exp)
		 {
			 return false;
		 }
		 
		
	 }
	 
	  /** Creates the popup menu that the user will see when they right click on a component */
	  public JPopupMenu getPopup(MouseEvent e) {

	    JPopupMenu popup = new JPopupMenu();

	    JMenuItem menuItem = new JMenuItem("Remove");
	    
	    // Add action lister for the remove pop up item
	    menuItem.addActionListener ( new ActionListener () {
			public void actionPerformed(ActionEvent e)
			{
				remove(); 
			}

		});


	    popup.add(menuItem);

	    return popup;
	  }
	  
	  // Removes condition from currently selected place
	  private void remove()
	  {
		// Update the change buffer					 
		((StateEditor)parent).addStateElement(place.getId(), "", "");
			
		// Update the UI
		 place.removeCondition();
	  }
}
=====================================================================
Found a 21 line (98 tokens) duplication in the following files: 
Starting at line 107 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 266 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

	}
	
	private void performance() {
		modString += "\\performance{\n";
		tokenDistribution();
		transitionMeasures();
		modString += "}\n";		
		
	}
	
	private void tokenDistribution() {
		for(int i=0; i<places.length; i++) {
			modString += "\t\\statemeasure{Mean tokens on place " + places[i].getId() + "}{\n";
			modString += "\t\t\\estimator{mean variance distribution}\n";
			modString += "\t\t\\expression{" + places[i].getId() + "}\n";
			modString += "\t}\n";
		}
	}
	
	private void transitionMeasures() {
		for(int i=0; i<transitions.length; i++) {
=====================================================================
Found a 28 line (98 tokens) duplication in the following files: 
Starting at line 231 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 150 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java

					if (newObject instanceof OperationNode)
					{
						// need to add arcs to the canvas as well
						((OperationNode) newObject).addArcsToContainer(this);
					}
				}
				else if (newObject instanceof PerformanceTreeArc)
				{
					PerformanceTreeArcHandler arcHandler = new PerformanceTreeArcHandler(	this,
																							(PerformanceTreeArc) newObject);
					newObject.addMouseListener(arcHandler);
					newObject.addMouseMotionListener(arcHandler);
					add(newObject);
					// make labels appear evenly distributed
					((PerformanceTreeArc) newObject).updateLabelPosition();
				}
			}
		}
		validate();
		repaint();
	}

	public PerformanceTreeObject add(final PerformanceTreeObject c)
	{
		super.add(c);
		c.addedToGui();

		if (c instanceof PerformanceTreeNode)
=====================================================================
Found a 24 line (98 tokens) duplication in the following files: 
Starting at line 37 of /usr/local/git/PipeCoursework/src/pipe/modules/stateSpace/StateSpace.java
Starting at line 62 of /usr/local/git/PipeCoursework/src/pipe/modules/invariantAnalysis/InvariantAnalysis.java

    JDialog guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
    
    // 1 Set layout
    Container contentPane=guiDialog.getContentPane();
    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
    
    // 2 Add file browser
    contentPane.add(sourceFilePanel=new PetriNetChooserPanel("Source net",pnmlData));
    
    // 3 Add results pane
    contentPane.add(results=new ResultsHTMLPane(pnmlData.getURI()));
    
    // 4 Add button
    contentPane.add(new ButtonBar("Analyse",analyseButtonClick));

    // 5 Make window fit contents' preferred size
    guiDialog.pack();
    
    // 6 Move window to the middle of the screen
    guiDialog.setLocationRelativeTo(null);
    
    guiDialog.setVisible(true);

  }
=====================================================================
Found a 41 line (98 tokens) duplication in the following files: 
Starting at line 190 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 232 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

		 }
		 catch(Exception exp)
		 {
			 return false;
		 }
		 
		
	 }
	 
	  /** Creates the popup menu that the user will see when they right click on a component */
	  public JPopupMenu getPopup(MouseEvent e) {

	    JPopupMenu popup = new JPopupMenu();

	    JMenuItem menuItem = new JMenuItem("Remove");
	    
	    // Add action lister for the remove pop up item
	    menuItem.addActionListener ( new ActionListener () {
			public void actionPerformed(ActionEvent e)
			{
				remove(); 
			}

		});


	    popup.add(menuItem);

	    return popup;
	  }
	  
	  // Removes condition from currently selected place
	  private void remove()
	  {
		// Update the change buffer					 
		((StateEditor)parent).addStateElement(place.getId(), "", "");
			
		// Update the UI
		 place.removeCondition();
	  }
}
=====================================================================
Found a 16 line (98 tokens) duplication in the following files: 
Starting at line 431 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 473 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java

		timePanel.setLayout(new GridLayout(2,2));
		
		JPanel startEndTime = new JPanel(new GridLayout(2,2));
		
		startEndTime.add(new JLabel("Start Time:") );
		startTime = new JTextField(4);
		startEndTime.add(startTime);
		
		startEndTime.add(new JLabel("End Time:") );
		endTime = new JTextField(4);
		startEndTime.add(endTime);
		
		startEndTime.setMaximumSize(new Dimension(Integer.MAX_VALUE, startEndTime.getPreferredSize().height));
		
		// Create time / method panel holder
		JPanel timeMethodPanel = new JPanel(new GridLayout(2,2));
=====================================================================
Found a 13 line (97 tokens) duplication in the following files: 
Starting at line 70 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/NewSteadyStateSolver.java
Starting at line 137 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/NewSteadyStateSolver.java

				pisub1[i] = pi[i];
				pi[i] = sum;
			}
			//Test of converged:
			double maxNum = 0.0, maxDen = 0.0, sub = 0.0;
			for(int i = 0; i < n; i++) {
				if((sub = Math.abs(pisub1[i] - pi[i])) > maxNum) {
					maxNum = sub;
				}
				if((sub = Math.abs(pisub1[i])) > maxDen)
					maxDen = sub;
			}
			if(maxNum / maxDen < 0.00000000000001) {
=====================================================================
Found a 22 line (97 tokens) duplication in the following files: 
Starting at line 145 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 133 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsReceiver.java

			if (doCDF)
			{
				switchViewBtn = new JButton("Show CDF");
				switchViewBtn.addActionListener(switchView);
				switchViewBtn.setMnemonic(KeyEvent.VK_V);
				
				buttons.add(switchViewBtn);
			}
			
			JButton saveImageBtn = new JButton("Save Graph");
			saveImageBtn.addActionListener(pngListener);
			saveImageBtn.setMnemonic(KeyEvent.VK_S);
			
			JButton saveCordBtn = new JButton("Save Points");
			saveCordBtn.addActionListener(cvsListener);
			saveCordBtn.setMnemonic(KeyEvent.VK_C);		
			
			buttons.add(saveImageBtn);
			buttons.add(saveCordBtn);		
			
			resultsPanel.add(buttons, BorderLayout.PAGE_END);
		}
=====================================================================
Found a 13 line (97 tokens) duplication in the following files: 
Starting at line 532 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 563 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

		QueryManager.getData().addStateLabel(stateLabel, null);
		NodeList statelabelElements = inputElement.getChildNodes();
		for (int i = 0; i < statelabelElements.getLength(); i++)
		{
			Node stateNode = statelabelElements.item(i);
			if (stateNode instanceof Element)
			{
				Element stateElement = (Element) stateNode;
				if ("state".equals(stateElement.getNodeName()))
				{
					String stateName = stateElement.getAttribute("name");
					if (!stateLabel.equals("") && stateName.length() > 0)
					{
=====================================================================
Found a 25 line (97 tokens) duplication in the following files: 
Starting at line 133 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 145 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

			JPanel buttons = new JPanel();
			
			//if (doCDF)
			{
				switchViewBtn = new JButton("Show CDF");
				switchViewBtn.addActionListener(switchView);
				switchViewBtn.setMnemonic(KeyEvent.VK_V);
				
				buttons.add(switchViewBtn);
			}
			
			JButton saveImageBtn = new JButton("Save Graph");
			saveImageBtn.addActionListener(pngListener);
			saveImageBtn.setMnemonic(KeyEvent.VK_S);
			
			JButton saveCordBtn = new JButton("Save Points");
			saveCordBtn.addActionListener(cvsListener);
			saveCordBtn.setMnemonic(KeyEvent.VK_C);		
			
			buttons.add(saveImageBtn);
			buttons.add(saveCordBtn);		
			
			resultsPanel.add(buttons, BorderLayout.PAGE_END);
			
		}
=====================================================================
Found a 7 line (96 tokens) duplication in the following files: 
Starting at line 310 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 353 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

		nsz = new Dimension((int)Math.ceil(scaleToWidth),(int)Math.ceil(scaleToHeight));
		if (prevsz == null || prevsz.getWidth() != nsz.getWidth() || prevsz.getHeight() != nsz.getHeight()) {
		    setSize(nsz);
		    setPreferredSize(nsz);
		    prevsz = new Dimension(nsz.width, nsz.height);
		}
		transform.translate(-bbox.getMinX(),-bbox.getMinY());
=====================================================================
Found a 14 line (95 tokens) duplication in the following files: 
Starting at line 333 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java
Starting at line 361 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

	if(curve.charAt(i) == 's') {
	    grpts[pts++] = new GrappaPoint(curve.substring(i+2,j));
	    for(i = ++j; i < len; i++) {
		if(curve.charAt(i) != ' ') {
		    break;
		}
	    }
	    for(k = j, j = len; k < j; k++) {
		if(curve.charAt(k) == ' ') {
		    j = k;
		    break;
		}
	    }
	}
=====================================================================
Found a 11 line (94 tokens) duplication in the following files: 
Starting at line 185 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 258 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

      if(compareRate)   s+="<br>Marking= \"" + source[i].getRate() + "\"";
      results.add(s);
    }
    // Fill in unmatched comparison transitions
    for(i=0;i<comparison.length;i++) if(comparison[i]!= null) {
      results.add("");
      results.add(comparison[i].getName());
      s="Not found in source Petri net";
      if(compareID)     s+="<br>Id = \"" + comparison[i].getId() + "\"";
      if(compareName)   s+="<br>Name = \"" + comparison[i].getName() + "\"";
      if(compareRate)   s+="<br>Marking = \"" + comparison[i].getRate() + "\"";
=====================================================================
Found a 26 line (94 tokens) duplication in the following files: 
Starting at line 193 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 315 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

		arcToLoop: for (SimpleArc currArc : arcToTransitions)
		{
			// Check if the current transition has the place as both an output and an input,
		  	// if so compact to a single action of the correct weight
		  	for (SimpleArc compareArc : arcFromTransitions){
		  		if(currArc.placeId.equals(compareArc.placeId)){
		  			if(currArc.weight > compareArc.weight){
		  				// Adjust source place's weight and remove the target place
		  				currArc.weight-= compareArc.weight;
		  				arcFromTransitions.remove(compareArc);
		  				break;
		  			}
		  			else if (currArc.weight < compareArc.weight){
		  				// Adjust the weight of the target place and skip writing to the source place
		  				compareArc.weight -= currArc.weight;
		  				continue arcToLoop;
		  			}
		  			else{
		  				// Equal weights cancel each other so print nothing
		  				arcFromTransitions.remove(compareArc);
		  				continue arcToLoop;
		  			}
		  		}
		  	}
		  		
		  	modString += "\t\t\tnext->" + currArc.placeId;
=====================================================================
Found a 15 line (93 tokens) duplication in the following files: 
Starting at line 403 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 417 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java

	private void printMatrix(int[][] input) {
		int rows = input.length;
		int cols = input[0].length;
		System.out.println("Printing a matrix of "+ rows +" rows and " + cols +" columns.");
		for (int i = 0; i<rows; i++) {
			for (int j = 0; j < cols; j++) {
				System.out.print(input[i][j] + " ");
			}
			System.out.println("");
		}
	}	
	
	//######################################################################################################################
	
	private void printMarking (int[] marking) {
=====================================================================
Found a 18 line (93 tokens) duplication in the following files: 
Starting at line 124 of /usr/local/git/PipeCoursework/src/pipe/modules/reachability/ReachabilityGraphGenerator.java
Starting at line 108 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPNNew.java

				}
				catch (OutOfMemoryError e) {
					s += "Memory error: " + e.getMessage();
					results.setText(s);
					return;
				} catch (ImmediateAbortException e) {
					s += "<br>Error: " + e.getMessage();
					results.setText(s);
					return;
				} catch (TimelessTrapException e) {
					s += "<br>" + e.getMessage();
					results.setText(s);
					return;
				} catch (IOException e) {
					s += "<br>" + e.getMessage();
					results.setText(s);
					return;
				}
=====================================================================
Found a 25 line (93 tokens) duplication in the following files: 
Starting at line 47 of /usr/local/git/PipeCoursework/test/pipe/modules/reachabilityGraphGenerator/ReachabilityGraphTest.java
Starting at line 203 of /usr/local/git/PipeCoursework/test/pipe/modules/gspn/GSPNAnalysisTest.java

  	}
  	
  	// End of GSPNNew tests
  	  	
  	// Helper functions created to aid the testing
  	
  	private void addNets (String a) {
  		
  		int i = 0;
  		
  		try {
					
			for (i = 0; i < nets.length && !nets[i].getName().toLowerCase().endsWith(a + ".xml"); i++);
			
			DataLayer testNet = new DataLayer(nets[i]);
			
			testNets.add(testNet);
			currentMarkings.add(testNet.getCurrentMarkingVector());

		}
		catch (Exception e){
			System.out.println("Unable to start test - error opening example files for testing");
		}
  		
  	}
=====================================================================
Found a 7 line (92 tokens) duplication in the following files: 
Starting at line 852 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 865 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

			    tstr[offset+lines] = new String(array,start,array.length - start);
			    bnds[lines] = tfont.getStringBounds(tstr[offset+lines],element.getGraph().REFCNTXT);
			    mtrc[lines] = tfont.getLineMetrics(tstr[offset+lines],element.getGraph().REFCNTXT);
			    if(bnds[lines].getWidth() > wdinfo) wdinfo = bnds[lines].getWidth();
			    //htinfo += bnds[lines].getHeight();
			    htinfo += 2 + tfont.getSize();
			    if(ch == 'l') justification[lines] = -1;
=====================================================================
Found a 28 line (92 tokens) duplication in the following files: 
Starting at line 782 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 960 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

	}

	/**
	 * Updates the value of the "selected" property in all drawing related
	 * Action objects when a new one is selected
	 * 
	 * @param selected
	 *            the newly selected Action
	 */
	private void resetDrawingActions(final Object selected)
	{
		Set actionNames = this.actions.keySet();
		Iterator iter = actionNames.iterator();
		while (iter.hasNext())
		{
			String nextActionKey = (String) iter.next();
			QueryAction nextAction = null;
			if (nextActionKey.startsWith("Draw"))
			{
				// drawing-related actions, which are all JToggleButtons
				nextAction = (QueryAction) this.actions.get(nextActionKey);
				if (nextAction != selected)
				{
					nextAction.setSelected(false);
				}
			}
		}
	}
=====================================================================
Found a 8 line (91 tokens) duplication in the following files: 
Starting at line 449 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java
Starting at line 463 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java

			for(i = 0; i < sides; i++) {
			    if(i == 0) {
				path.moveTo((float)(x + rawVertices[i].x), (float)(y - rawVertices[i].y));
			    } else {
				path.lineTo((float)(x + rawVertices[i].x), (float)(y - rawVertices[i].y));
			    }
			}
		    } else {
=====================================================================
Found a 20 line (91 tokens) duplication in the following files: 
Starting at line 95 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 240 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

		RandomAccessFile outputFile;
		RandomAccessFile esoFile;
		File intermediate = new File("graph.irg");
		
		if(intermediate.exists()){
			if(!intermediate.delete()){
				System.err.println("Could not delete intermediate file.");
			}
		}
		
		try {
			outputFile = new RandomAccessFile(intermediate, "rw");
			esoFile = new RandomAccessFile(reachGraph, "rw");
			// Write a blank file header as a place holder for later
			RGFileHeader header = new RGFileHeader();
			header.write(esoFile);
		} catch (IOException e) {
			System.out.println("Could not create intermediate files.");
			return;
		}
=====================================================================
Found a 14 line (91 tokens) duplication in the following files: 
Starting at line 77 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ProbInIntervalNode.java
Starting at line 78 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/InIntervalNode.java

		String op = " lies within ";
					
		ArrayList children = getChildNodes();
		if (children != null) {
			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();	
				QueryManager.colourUp();
				description += child.printTextualRepresentation();
				QueryManager.colourDown();
				if (i.hasNext()) 
					description += QueryManager.addColouring(op);
				else {
					if (children.size() == 1) {
=====================================================================
Found a 9 line (90 tokens) duplication in the following files: 
Starting at line 448 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java
Starting at line 488 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java

	    } else {
		for(i = 0; i < sides; i++) {
		    if(i == 0) {
			path.moveTo((float)(x + rawVertices[i].x), (float)(y - rawVertices[i].y));
		    } else {
			path.lineTo((float)(x + rawVertices[i].x), (float)(y - rawVertices[i].y));
		    }
		}
	    }
=====================================================================
Found a 12 line (90 tokens) duplication in the following files: 
Starting at line 1726 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1804 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

					   previoulyTaggedPlace.set(firedTagged, 1);
				  	      firedTagged++;
				  	      this.removeStoredTaggedPlace();

				   }

				
				System.out.println("\n");
				for(int i=0;i<this.previoulyTaggedPlace.size(); i++){
					if(this.previoulyTaggedPlace.get(i) instanceof Place)System.out.println( ((Place) this.previoulyTaggedPlace.get(i)).getId() );
					else System.out.println(this.previoulyTaggedPlace.get(i));
				}
=====================================================================
Found a 17 line (90 tokens) duplication in the following files: 
Starting at line 893 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 425 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

			for (int i = 0; i<transCount; i++) {
				if(result[i]){
					if (transArray[i].isTimed()==true){
						hasTimed = true;
					}
					else {
						hasImmediate = true;
					}
				}
			}
			if (hasTimed && hasImmediate){
				for (int i = 0; i<transCount; i++){
					if (transArray[i].isTimed()==true){
						result[i] = false;
					}
				}
			}
=====================================================================
Found a 12 line (90 tokens) duplication in the following files: 
Starting at line 269 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java
Starting at line 440 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java

										int transX = Grid.getModifiedX(e.getX() - this.dragInit.x);
										int transY = Grid.getModifiedY(e.getY() - this.dragInit.y);
										if (MacroManager.getEditor() == null)
											((QueryView) this.contentPane)	.getSelectionObject()
																			.translateSelection(transX,
																								transY);
										else ((MacroView) this.contentPane)	.getSelectionObject()
																			.translateSelection(transX,
																								transY);
									}
								}
							}
=====================================================================
Found a 21 line (90 tokens) duplication in the following files: 
Starting at line 81 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 82 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

  JTextField startTime, endTime;
  JSpinner timeStep;
  JComboBox methodCombo;

  public void run (DataLayer pnmlDataIn)
  {
  	pnmlData = pnmlDataIn;
  	stateGroupData = pnmlDataIn.getStateGroups();
  
    
  	// Create tabbed pane
  	tabbedPane = new JTabbedPane();
  	
  	// Build primary tab
  	guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
    Container contentPane=guiDialog.getContentPane();
    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
    
    // 1 Set layout
  	JPanel setupPanel = new JPanel();
    setupPanel.setLayout(new BoxLayout(setupPanel,BoxLayout.PAGE_AXIS));
=====================================================================
Found a 8 line (89 tokens) duplication in the following files: 
Starting at line 463 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java
Starting at line 489 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java

		for(i = 0; i < sides; i++) {
		    if(i == 0) {
			path.moveTo((float)(x + rawVertices[i].x), (float)(y - rawVertices[i].y));
		    } else {
			path.lineTo((float)(x + rawVertices[i].x), (float)(y - rawVertices[i].y));
		    }
		}
	    }
=====================================================================
Found a 20 line (89 tokens) duplication in the following files: 
Starting at line 29 of /usr/local/git/PipeCoursework/src/pipe/modules/matrices/Matrices.java
Starting at line 35 of /usr/local/git/PipeCoursework/src/pipe/modules/classification/Classification.java

  private PetriNetChooserPanel sourceFilePanel;
  private ResultsHTMLPane results;
  
  
  public void run(DataLayer pnmlData) {
    // Build interface
    JDialog guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
    
    // 1 Set layout
    Container contentPane=guiDialog.getContentPane();
    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
    
    // 2 Add file browser
    contentPane.add(sourceFilePanel=new PetriNetChooserPanel("Source net",pnmlData));
    
    // 3 Add results pane
    contentPane.add(results=new ResultsHTMLPane(pnmlData.getURI()));
    
    // 4 Add button
    contentPane.add(new ButtonBar("Classify",classifyButtonClick));
=====================================================================
Found a 11 line (89 tokens) duplication in the following files: 
Starting at line 269 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java
Starting at line 409 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java

													int transX = Grid.getModifiedX(e.getX() - this.dragInit.x);
													int transY = Grid.getModifiedY(e.getY() - this.dragInit.y);
													if (MacroManager.getEditor() == null)
														((QueryView) this.contentPane)	.getSelectionObject()
																						.translateSelection(transX,
																											transY);
													else ((MacroView) this.contentPane)	.getSelectionObject()
																						.translateSelection(transX,
																											transY);
												}
											}
=====================================================================
Found a 19 line (89 tokens) duplication in the following files: 
Starting at line 32 of /usr/local/git/PipeCoursework/src/pipe/modules/stateSpace/StateSpace.java
Starting at line 29 of /usr/local/git/PipeCoursework/src/pipe/modules/matrices/Matrices.java

  private PetriNetChooserPanel sourceFilePanel;
  private ResultsHTMLPane results;

  public void run(DataLayer pnmlData) {
    // Build interface
    JDialog guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
   
    // 1 Set layout
    Container contentPane=guiDialog.getContentPane();
    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
    
    // 2 Add file browser
    contentPane.add(sourceFilePanel=new PetriNetChooserPanel("Source net",pnmlData));
    
    // 3 Add results pane
    contentPane.add(results=new ResultsHTMLPane(pnmlData.getURI()));
    
    // 4 Add button
    contentPane.add(new ButtonBar("Calculate",calculateButtonClick));   
=====================================================================
Found a 36 line (89 tokens) duplication in the following files: 
Starting at line 524 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 527 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

    	}
    	catch (NumberFormatException nfe)
    	{
	         return null;
	    }
			
	}
	
	  
}	  

  

// This class allows a JList to operate in a click toggle fashion - see JList java doc
class ToggleSelectionModel extends DefaultListSelectionModel
{
	private static final long serialVersionUID = 1L;
	boolean gestureStarted = false;
    
    public void setSelectionInterval(int index0, int index1)
    {
		if (isSelectedIndex(index0) && !gestureStarted) 
		    super.removeSelectionInterval(index0, index1);
		
		else 
		    super.setSelectionInterval(index0, index1);
		
		gestureStarted = true;
    }

    public void setValueIsAdjusting(boolean isAdjusting)
    {
    	if (isAdjusting == false) 
	    gestureStarted = false;
    }
}
=====================================================================
Found a 27 line (89 tokens) duplication in the following files: 
Starting at line 514 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java
Starting at line 655 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

			perfString += "\n\\passage{\n";
			
			if(sourceStateGrps != null && destStateGrps != null && timePoints != null) {
				// Add source conditions
				perfString += "\t\\sourcecondition{";
				stateGroups(sourceStateGrps);
				perfString += "}\n";
			
				//  Add target conditions
				perfString += "\t\\targetcondition{";
				stateGroups(destStateGrps);
				perfString += "}\n";
			
				// Add time parameters
				perfString += "\t\\t_start{" + timePoints.startTime + "}\n";
				perfString += "\t\\t_stop{" + timePoints.endTime + "}\n";
				perfString += "\t\\t_step{" + timePoints.timeStep + "}\n";
				
				perfString += "}\n";
			}

		}
		
		private void stateGroups(ArrayList<StateGroup> stateGroups)
		{
			String[] currentCondition;
			int groupCount =0;
=====================================================================
Found a 10 line (88 tokens) duplication in the following files: 
Starting at line 612 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 631 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

		    if(subg.currentSelection == null) {
			subg.currentSelection = obj;
		    } else if(subg.currentSelection instanceof Element) {
			Object crnt = subg.currentSelection;
			subg.currentSelection = new Vector();
			((Vector)(subg.currentSelection)).add(crnt);
			((Vector)(subg.currentSelection)).add(obj);
		    } else {
			((Vector)(subg.currentSelection)).add(obj);
		    }
=====================================================================
Found a 22 line (88 tokens) duplication in the following files: 
Starting at line 257 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 194 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java

		return super.clone();
	}

	/**
	 * Determines whether the point (x,y) is "in" this component. This method is
	 * called when mouse events occur and only events at points for which this
	 * method returns true will be dispatched to mouse listeners
	 */
	@Override
	public boolean contains(final int x, final int y)
	{

		final int zoomPercentage = this.getZoomController().getPercent();
		final double unZoomedX = (x - PetriNetObject.COMPONENT_DRAW_OFFSET) / (zoomPercentage / 100.0);
		final double unZoomedY = (y - PetriNetObject.COMPONENT_DRAW_OFFSET) / (zoomPercentage / 100.0);

		PlaceTransitionObject.someArc = CreateGui.getView().createArc;
		if (PlaceTransitionObject.someArc != null) // Must be drawing a
		// new Arc if
		// non-NULL.
		{
			if ((Place.proximityPlace.contains((int) unZoomedX, (int) unZoomedY) || Place.place.contains(	(int) unZoomedX,
=====================================================================
Found a 10 line (87 tokens) duplication in the following files: 
Starting at line 889 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1161 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1387 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          case 12: // optGraphName ::= ATOM 
            {
              String RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		
                   RESULT = val;
                 
              CUP$Parser$result = new java_cup.runtime.Symbol(6/*optGraphName*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
=====================================================================
Found a 15 line (87 tokens) duplication in the following files: 
Starting at line 969 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1013 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                if(a==0.0D){
                        if(b.isZero()){
                                c.real=Double.NaN;
                                c.imag=Double.NaN;
                        }
                        else{
                                c.real=0.0D;
                                c.imag=0.0D;
                        }
                }
                else{
                        if(Math.abs(b.real)>=Math.abs(b.imag)){
                                ratio=b.imag/b.real;
                                denom=b.real+b.imag*ratio;
                                c.real=a/denom;
=====================================================================
Found a 12 line (87 tokens) duplication in the following files: 
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateProbNode.java
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ConvolutionNode.java

		ArrayList children = getChildNodes();
		if (children != null) {
			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();	
				QueryManager.colourUp();
				description += child.printTextualRepresentation();
				QueryManager.colourDown();
				if (i.hasNext()) 	
					description += QueryManager.addColouring(op);
				else {
					if (children.size() == 1) {
=====================================================================
Found a 30 line (87 tokens) duplication in the following files: 
Starting at line 79 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryTransformer.java
Starting at line 79 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroTransformer.java

			System.out.println("ParserConfigurationException thrown in transformPTML(String filename) : modules.queryeditor.io.MacroTransformer");
			e.printStackTrace(System.err);
		}

		if(outputObjectArrayList != null) 
			// Delete transformed file
			outputObjectArrayList.delete();

		return document;   
	}

	/**
	 * Return a DOM for the PTML file at URI ptmlFileName
	 *
	 * @param ptmlFileName - URI of PTML file
	 * @return A DOM for the PTML file ptmlFileName
	 * @throws ParserConfigurationException
	 * @throws IOException
	 * @throws SAXException
	 */
	public Document getDOM(String ptmlFileName) throws ParserConfigurationException, IOException, SAXException {
		Document document = null;

		try {
			DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilderFactory.setIgnoringElementContentWhitespace(true);
			DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
			document = documentBuilder.parse(ptmlFileName);
		} catch (ParserConfigurationException e) {
			System.err.println("javax.xml.parsers.ParserConfigurationException thrown in getDom(String ptmlFileName) : modules.queryeditor.io.MacroTransformer");
=====================================================================
Found a 6 line (86 tokens) duplication in the following files: 
Starting at line 1849 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1962 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

			if(dir > 1) {
			    p = new GrappaBox(box.getX(), previous, box.getWidth(), (next = frac * box.getHeight()));
			} else {
			    p = new GrappaBox(previous, box.getY(), (next = frac * box.getWidth()), box.getHeight());
			}
			((Subgraph)el).compSqPatchWork(p, false);
=====================================================================
Found a 12 line (86 tokens) duplication in the following files: 
Starting at line 861 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 890 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

			transform.transform(new Point2D.Double(+0.5 * Transition.TRANSITION_WIDTH, current), transformed);
			if (thisArc.sourceOrTarget())
			{
				thisArc.arc.setTargetLocation(	this.positionX + this.centreOffsetLeft() + transformed.x,
												this.positionY + this.centreOffsetTop() + transformed.y);
			}
			else
			{
				thisArc.arc.setSourceLocation(	this.positionX + this.centreOffsetLeft() + transformed.x,
												this.positionY + this.centreOffsetTop() + transformed.y);
			}
			current += inc;
=====================================================================
Found a 18 line (86 tokens) duplication in the following files: 
Starting at line 273 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 215 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java

			if ((Place.proximityPlace.contains((int) unZoomedX, (int) unZoomedY) || Place.place.contains(	(int) unZoomedX,
																											(int) unZoomedY)) &&
				this.areNotSameType(PlaceTransitionObject.someArc.getSource()))
			{
				// assume we are only snapping the target...
				if (PlaceTransitionObject.someArc.getTarget() != this)
				{
					PlaceTransitionObject.someArc.setTarget(this);
				}
				PlaceTransitionObject.someArc.updateArcPosition();
				return true;
			}
			else
			{
				if (PlaceTransitionObject.someArc.getTarget() == this)
				{
					PlaceTransitionObject.someArc.setTarget(null);
					this.updateConnected();
=====================================================================
Found a 28 line (86 tokens) duplication in the following files: 
Starting at line 244 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LaplaceTransformInverter.java
Starting at line 496 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LTIMapRed.java

			double term = !retDivS ? calculatedRTA.get(new Complex(X,Y)) : calculatedCDF.get(new Complex(X,Y));
			//System.out.println("Want: " + new Complex(X,Y));
			
			//double DELTA = H;
			//Complex i  = new Complex(0, 1);
			
			//seemintly unused code commented out in Euler.cxx, not yet converted to Java:
			//double approxterm = (fnRf(X, Y-DELTA) + fnRfprime(X,Y-DELTA)*i*DELTA = 0.5*fnRfprimeprime(X,Y-DELTA)*DELTA*DELTA).real();
			
			//cout << "term = " << term << "approxterm = " << approxterm << " rel err = " << (approxterm-term)/term << " h = " << H < end;
			
			if((N%2) != 0)
				term = -term;
			SU[K+1] = SU[K] + term;			
		}
		
		double avgsu = 0.0, avgsu1 = 0.0;
		
		for(int J = 1; J <= 12; J++) {
			avgsu += C[J]*SU[J];
			avgsu1 += C[J]*SU[J+1];
		}
		
		//double fun = U*avgsu/2048.0; 
		double fun1 = U*avgsu1/2048.0;
		//System.out.println("Returning: " + fun1);
		return fun1;
	}
=====================================================================
Found a 24 line (86 tokens) duplication in the following files: 
Starting at line 38 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/ResultSender.java
Starting at line 37 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/ClientCommunicator.java

	}

	public void deleteDirectory(final String dirPath)
	{

		final File clearDir = new File(dirPath);
		final String children[] = clearDir.list();
		for (final String element : children)
		{
			final File tmp = new File(clearDir, element);
			if (tmp.isDirectory())
			{
				this.deleteDirectory(tmp.getAbsolutePath());
			}
			else
			{
				tmp.delete();
			}
		}
		clearDir.delete();

	}

	public Runnable getClientListener()
=====================================================================
Found a 15 line (85 tokens) duplication in the following files: 
Starting at line 160 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 197 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static final synchronized Complex readComplex(String prompt, Complex dflt)
        {
                int ch = ' ';
                String cstring = "";
                boolean done = false;

                System.out.print(prompt + " [default value = " + dflt + "]  ");
                System.out.flush();

                int i=0;
                while (!done){
                        try{
                                ch = System.in.read();
                                if (ch < 0 || (char)ch == '\n' || (char)ch =='\r'){
                                        if(i==0){
=====================================================================
Found a 18 line (85 tokens) duplication in the following files: 
Starting at line 457 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PlaceTransitionObject.java
Starting at line 109 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/FiringTaggedButton.java

		this.updateBounds();
		//this.updateConnected();
	}
	
	/** Calculates the BoundsOffsets used for setBounds() method */
	public void updateBounds()
	{
		
		int scaleFactor = 100;
		if (this.getZoomController() != null)
		{
			scaleFactor = this.getZoomController().getPercent();
		}
		this.positionX = this.locationX * scaleFactor / 100.0;
		this.positionY = this.locationY * scaleFactor / 100.0;
		this.bounds.setBounds(	(int) this.positionX,
								(int) this.positionY,
								(int) (DIAMETER * scaleFactor / 100.0),
=====================================================================
Found a 16 line (85 tokens) duplication in the following files: 
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryFileBrowser.java
Starting at line 18 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/FileBrowser.java

  public FileBrowser(String filetype,String ext,String path) {
    super();
    if (filetype==null) filetype="file";
    
    if (path!=null) {
      File f=new File(path);
      if(f.exists())setCurrentDirectory(f);
      if(!f.isDirectory())setSelectedFile(f);
    }
    
    this.ext=ext;
    ExtensionFilter filter=new ExtensionFilter(ext,filetype);

    setFileFilter(filter);
  }
  public FileBrowser(String path) {
=====================================================================
Found a 19 line (85 tokens) duplication in the following files: 
Starting at line 1406 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 1182 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

						selection = (String) QueryEditor.this.zoomComboBox.getSelectedItem();
					if (e.getSource() instanceof JMenuItem)
					{
						selection = ((JMenuItem) e.getSource()).getText();
					}

					strToTest = validatePercent(selection);
					if (strToTest != null)
					{
						// BK: no need to zoom if already at that level
						if (zoomer.getPercent() == Integer.parseInt(strToTest))
							return;
						else zoomer.setZoom(Integer.parseInt(strToTest));

						updateZoomCombo();
					}
					else return;
				}
			}
=====================================================================
Found a 31 line (85 tokens) duplication in the following files: 
Starting at line 47 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java
Starting at line 52 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java

		setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));				
	}

	
	public void setParent(JDialog parent) {
		this.parent = parent;	
	}

	/**
	 * Create a clone of the DataLayer object as only one GUI can display an instance of 
	 * a PetriNetObject at a time and it is currently being displayed by the primary 
	 * window (GuiView)
	 * 
	 * @param pnmldata
	 * @param stateGroupData
	 */
	public void drawPetriNet(DataLayer pnmldata, StateGroup stateGroupData) {
		stateDataLayer = pnmldata.clone();
		activeStateGroup = stateGroupData;
		condPlaces = new ArrayList<ConditionPlace>();

		// Iterate through the petri-net objects adding them to the GUI
		Iterator PNObjects = stateDataLayer.getPetriNetObjects();
		while(PNObjects.hasNext())
			insertUI( PNObjects.next() );			

		updatePreferredSize();		
	}

	public void insertUI(Object diffObj) {
		if((diffObj instanceof PetriNetObject) && (diffObj != null))
=====================================================================
Found a 24 line (85 tokens) duplication in the following files: 
Starting at line 476 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java
Starting at line 253 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java

		Iterator<SimpleArc> arcsTo = transitions.arcsTo.get(transitionNum).iterator();
		SimpleArc currArc;
		
	  	if (arcsTo.hasNext())
	  	{
	  		currArc = arcsTo.next();
	  		condition += currArc.placeId + " > " + (currArc.weight - 1);
	  	}
	  		
	  		
	  	while (arcsTo.hasNext())
	  	{
	  		currArc = arcsTo.next();
	  		condition += " && " + currArc.placeId + " > " + (currArc.weight - 1);
	  	}
	  	
	  	return condition; 	
	}
	
	/**
	 * This method is to limit the number of states that are generated
	 * to a maximum of 2 million. This ensures infinite state models terminate 
	 */
	private void maxStates()
=====================================================================
Found a 26 line (84 tokens) duplication in the following files: 
Starting at line 533 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 723 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java

      debug_message("# Current Symbol is #" + cur_token.sym);

      /* push dummy Symbol with start state to get us underway */
      stack.removeAllElements();
      stack.push(new Symbol(0, start_state()));
      tos = 0;

      /* continue until we are told to stop */
      for (_done_parsing = false; !_done_parsing; )
	{
	  /* Check current token for freshness. */
	  if (cur_token.used_by_parser)
	    throw new Error("Symbol recycling detected (fix your scanner).");

	  /* current state is always on the top of the stack */
	  //debug_stack();

	  /* look up action out of the current state with the current input */
	  act = get_action(((Symbol)stack.peek()).parse_state, cur_token.sym);

	  /* decode the action -- > 0 encodes shift */
	  if (act > 0)
	    {
	      /* shift to the encoded state by pushing it on the stack */
	      cur_token.parse_state = act-1;
	      cur_token.used_by_parser = true;
=====================================================================
Found a 7 line (84 tokens) duplication in the following files: 
Starting at line 590 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 605 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

		  			condition += " && ((tagged_location== "+getPlaceIndex(arc.getSource().getId())
		  				+ " && " + arc.getSource().getId()+" > "+ (arc.getWeight()-1+1)
		  				+ ") || ( tagged_location!="+getPlaceIndex(arc.getSource().getId())
		  				+ " && " + arc.getSource().getId()+" > "+ (arc.getWeight()-1)
		  				+ "))";
		  		}
		  		else condition += " && "+arc.getSource().getId()+" > "+ (arc.getWeight() - 1);
=====================================================================
Found a 20 line (84 tokens) duplication in the following files: 
Starting at line 476 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java
Starting at line 394 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

		Iterator<SimpleArc> arcsTo = transitions.arcsTo.get(transitionNum).iterator();
		SimpleArc currArc;
		
	  	if (arcsTo.hasNext())
	  	{
	  		currArc = arcsTo.next();
	  		condition += currArc.placeId + " > " + (currArc.weight - 1);
	  	}
	  		
	  		
	  	while (arcsTo.hasNext())
	  	{
	  		currArc = arcsTo.next();
	  		condition += " && " + currArc.placeId + " > " + (currArc.weight - 1);
	  	}
	  	
	  	return condition; 	
	}

	private String getTaggedTransitionConditions(int transitionNum, String tagInputPlace) {
=====================================================================
Found a 18 line (83 tokens) duplication in the following files: 
Starting at line 1435 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 1490 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

			  (DIR_HASH == attrHash && DIR_ATTR.equals(attrName))
			  ||
			  (FONTCOLOR_HASH == attrHash && FONTCOLOR_ATTR.equals(attrName))
			  ) {
		    if(lastDecorationUpdate < thisUpdate) {
			updateDecoration();
		    }
		} else if(
			  (IMAGE_HASH == attrHash && IMAGE_ATTR.equals(attrName))
			  ) {
		    if(lastImageUpdate < thisUpdate) {
			updateImage();
		    }
		} else {
		    throw new InternalError("update called for \"" + element.getName() + "\" with an unmonitored attribute: " + attrName);
		}
		break;
	    case SUBGRAPH:
=====================================================================
Found a 16 line (83 tokens) duplication in the following files: 
Starting at line 35 of /usr/local/git/PipeCoursework/src/pipe/modules/stateSpace/StateSpace.java
Starting at line 45 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPNNew.java

	public void run(DataLayer pnmlData) {
		// Build interface
		JDialog guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
		
		// 1 Set layout
		Container contentPane=guiDialog.getContentPane();
		contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
		
		// 2 Add file browser
		contentPane.add(sourceFilePanel=new PetriNetChooserPanel("Source net",pnmlData));
		
		// 3 Add results pane
		contentPane.add(results=new ResultsHTMLPane(pnmlData.getURI()));
		
		// 4 Add button's
		contentPane.add(new ButtonBar("Analyse GSPN", runAnalysis));
=====================================================================
Found a 9 line (82 tokens) duplication in the following files: 
Starting at line 86 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 100 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

				if(subg.currentSelection instanceof Element) {
				    ((Element)(subg.currentSelection)).highlight &= ~HIGHLIGHT_MASK;
				} else {
				    Vector vec = ((Vector)(subg.currentSelection));
				    for(int i = 0; i < vec.size(); i++) {
					((Element)(vec.elementAt(i))).highlight &= ~HIGHLIGHT_MASK;
				    }
				}
				subg.currentSelection = null;
=====================================================================
Found a 15 line (82 tokens) duplication in the following files: 
Starting at line 1171 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 1196 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

	    contains = shape.contains(x, y, width, height);
	}

	if(
	   textArea != null && !contains && !clearText && drawText
	   &&
	   (
	    (element.isNode() && element.getGraph().getShowNodeLabels())
	    ||
	    (element.isEdge() && element.getGraph().getShowEdgeLabels())
	    ||
	    (element.isSubgraph() && element.getGraph().getShowSubgraphLabels())
	    )
	   ) {
	    contains = textArea.contains(x, y, width, height);
=====================================================================
Found a 8 line (82 tokens) duplication in the following files: 
Starting at line 1080 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1094 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1108 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          case 36: // attrType ::= GRAPH 
            {
              Integer RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		Integer val = (Integer)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		
               RESULT = new Integer(Grappa.SUBGRAPH);
=====================================================================
Found a 18 line (82 tokens) duplication in the following files: 
Starting at line 1353 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1379 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

    public boolean hasTypeTags(int type) {
	Attribute attr = null;
	Hashtable tags;
	switch(type) {
	case NODE:
	    attr = getNodeAttribute(TAG_ATTR);
	    break;
	case EDGE:
	    attr = getEdgeAttribute(TAG_ATTR);
	    break;
	case SUBGRAPH:
	    attr = getLocalAttribute(TAG_ATTR);
	    break;
	}
	if(attr == null) return false;
	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return false;
	return(true);
=====================================================================
Found a 18 line (82 tokens) duplication in the following files: 
Starting at line 823 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 862 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

								transformed); // +1
			// due
			// to
			// rounding
			// making
			// it
			// off
			// by 1
			if (thisArc.sourceOrTarget())
			{
				thisArc.arc.setTargetLocation(	this.positionX + this.centreOffsetLeft() + transformed.x,
												this.positionY + this.centreOffsetTop() + transformed.y);
			}
			else
			{
				thisArc.arc.setSourceLocation(	this.positionX + this.centreOffsetLeft() + transformed.x,
												this.positionY + this.centreOffsetTop() + transformed.y);
			}
=====================================================================
Found a 14 line (82 tokens) duplication in the following files: 
Starting at line 265 of /usr/local/git/PipeCoursework/src/pipe/modules/classification/Classification.java
Starting at line 321 of /usr/local/git/PipeCoursework/src/pipe/modules/classification/Classification.java

  protected boolean extendedSimpleNet(DataLayer pnmlData){
//    Place[] places=pnmlData.getPlaces();
//	  Place[] places=getPlaces(pnmlData);
	  
	  int placeCount = pnmlData.getPlacesCount();
	  if (placeCount != 0)
      for (int placeNo=0; placeNo<placeCount; placeNo++)
        for (int placeDashNo=0; placeDashNo<placeCount; placeDashNo++)
          if(placeDashNo != placeNo) {
            int[] placeSet = forwardsPlaceSet(pnmlData,placeNo);
            int[] placeDashSet = forwardsPlaceSet(pnmlData,placeDashNo);
            if (
                intersectionBetweenSets(placeSet,placeDashSet) &&
                (!isSubset(placeSet,placeDashSet))
=====================================================================
Found a 17 line (82 tokens) duplication in the following files: 
Starting at line 97 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java
Starting at line 86 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

  public void run (DataLayer pnmlDataIn)
  {
  	pnmlData = pnmlDataIn;
  	stateGroupData = pnmlDataIn.getStateGroups();
  
    
  	// Create tabbed pane
  	tabbedPane = new JTabbedPane();
  	
  	// Build primary tab
  	guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
    Container contentPane=guiDialog.getContentPane();
    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
    
    // 1 Set layout
  	JPanel setupPanel = new JPanel();
    setupPanel.setLayout(new BoxLayout(setupPanel,BoxLayout.PAGE_AXIS));
=====================================================================
Found a 21 line (82 tokens) duplication in the following files: 
Starting at line 1182 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 710 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

						selection = (String)zoomComboBox.getSelectedItem();

					if(e.getSource() instanceof JMenuItem){
						selection=((JMenuItem)e.getSource()).getText();
					}

					strToTest=validatePercent(selection);
					if(strToTest!=null){
						
						//BK: no need to zoom if already at that level
						if(zoomer.getPercent()==Integer.parseInt(strToTest)) 
							return;
						
						else zoomer.setZoom(Integer.parseInt(strToTest));
						
						updateZoomCombo();
					}

					else return;
				}
			}
=====================================================================
Found a 15 line (82 tokens) duplication in the following files: 
Starting at line 474 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 493 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

			MacroDefinition macro = QueryLoader.getMacro();
			if (macro.getMacroNode(getSourceID()) != null)
			{
				PerformanceTreeNode sourceNode = macro.getMacroNode(getSourceID());
				sourceNode.updateEndPoint(this);
				macro.updateMacroNode(sourceNode);
			}
			if (macro.getMacroNode(getTargetID()) != null)
			{
				PerformanceTreeNode targetNode = macro.getMacroNode(getTargetID());
				targetNode.updateEndPoint(this);
				macro.updateMacroNode(targetNode);
			}
		}
		else
=====================================================================
Found a 9 line (82 tokens) duplication in the following files: 
Starting at line 531 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 467 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PlaceTransitionObject.java

			scaleFactor = this.getZoomController().getPercent();
		}
		this.positionX = this.locationX * scaleFactor / 100.0;
		this.positionY = this.locationY * scaleFactor / 100.0;
		this.bounds.setBounds(	(int) this.positionX,
								(int) this.positionY,
								(int) (this.componentWidth * scaleFactor / 100.0),
								(int) (this.componentHeight * scaleFactor / 100.0));
		this.bounds.grow(PetriNetObject.COMPONENT_DRAW_OFFSET, PetriNetObject.COMPONENT_DRAW_OFFSET);
=====================================================================
Found a 21 line (82 tokens) duplication in the following files: 
Starting at line 1406 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 710 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

						selection = (String)zoomComboBox.getSelectedItem();

					if(e.getSource() instanceof JMenuItem){
						selection=((JMenuItem)e.getSource()).getText();
					}

					strToTest=validatePercent(selection);
					if(strToTest!=null){
						
						//BK: no need to zoom if already at that level
						if(zoomer.getPercent()==Integer.parseInt(strToTest)) 
							return;
						
						else zoomer.setZoom(Integer.parseInt(strToTest));
						
						updateZoomCombo();
					}

					else return;
				}
			}
=====================================================================
Found a 8 line (81 tokens) duplication in the following files: 
Starting at line 67 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 78 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

		    case 'B':
			if (args.length <= argn) throw new RuntimeException("too few arguments for format");
			if (args[argn] instanceof GrappaBox)
			    flag = ((GrappaBox)args[argn]).isDimensioned();
			else
			    flag = true;
			if (args[argn] instanceof java.awt.geom.Rectangle2D)
			    cvt.buildBox(prtbuf, ((java.awt.geom.Rectangle2D)args[argn++]), true, flag);
=====================================================================
Found a 8 line (81 tokens) duplication in the following files: 
Starting at line 1445 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1459 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          case 6: // hdr ::= STRICTGRAPH optGraphName 
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		
          startGraph(name,true,false);
=====================================================================
Found a 8 line (81 tokens) duplication in the following files: 
Starting at line 737 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 745 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    minBox = (GrappaBox)getThisAttributeValue(BBOX_ATTR);
	    if(minBox != null) {
		if(bbox == null) {
		    bbox = new java.awt.geom.Rectangle2D.Double(minBox.x,minBox.y,minBox.width,minBox.height);
		} else {
		    bbox.add(new java.awt.geom.Rectangle2D.Double(minBox.x,minBox.y,minBox.width,minBox.height));
		}
	    }
=====================================================================
Found a 23 line (81 tokens) duplication in the following files: 
Starting at line 198 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java
Starting at line 224 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java

								{
									// set numerical value in node
									((NumNode) this.node).setNumValue(numVal);

									// display numerical value below node
									String nodeLabel = Double.toString(numVal);
									((NumNode) this.node).setNodeLabel(nodeLabel);

									if (MacroManager.getEditor() == null)
									{
										// not in macro mode
										QueryManager.getData().updateNode(this.node);
									}
									else
									{
										// in macro mode
										MacroManager.getEditor().updateNode(this.node);
									}

									inputValid = true;
								}
							}
						}
=====================================================================
Found a 22 line (81 tokens) duplication in the following files: 
Starting at line 61 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/Analyse.java
Starting at line 65 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Analyse.java

	}
	
	
	public void run()
	{
		// Convert the PNML data into a serialisable form for transmission
		SimplePlaces splaces = new SimplePlaces(pnmlData);
		SimpleTransitions sTransitions = new SimpleTransitions(pnmlData);
		
		
		  try
		  {
			  updateUI("Opening Connection");
			  SocketIO serverSock = new SocketIO(serverAddr, serverPort); 
			  serverSock.send(AnalysisType.PASSAGETIME); // Inform server of the process to be performed
			  
			  updateUI("Sending data");
			  serverSock.send(splaces);
			  serverSock.send(sTransitions);
			  serverSock.send(sourceStateGroups);
			  serverSock.send(destStateGroups);
			  serverSock.send(analysisSetting);
=====================================================================
Found a 24 line (81 tokens) duplication in the following files: 
Starting at line 688 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java
Starting at line 197 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java

		  		for (SimpleArc compareArc : arcFromTransitions)
		  		{
		  			if(currArc.placeId.equals(compareArc.placeId))
		  			{
		  				if(currArc.weight > compareArc.weight)
		  				{
		  					// Adjust source place's weight and remove the target place
		  					currArc.weight-= compareArc.weight;
		  					arcFromTransitions.remove(compareArc);
		  					break;
		  				}
		  				else if (currArc.weight < compareArc.weight)
		  				{
		  					// Adjust the weight of the target place and skip writing to the source place
		  					compareArc.weight -= currArc.weight;
		  					continue arcToLoop;
		  				}
		  				else //Equal weights cancel each other so print nothing
		  				{
		  					arcFromTransitions.remove(compareArc);
		  					continue arcToLoop;
		  				}
		  			}
		  		}
=====================================================================
Found a 16 line (80 tokens) duplication in the following files: 
Starting at line 1821 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1893 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

			    if(j < elPatches.length)
				continue;
			} else {
			    tsz = 0;
			}
			tot = psz + sz + tsz;
			frac = tot / total;
			if(dir > 1) {
			    prv = box.getX();
			    next = frac * box.getHeight();
			} else {
			    prv = box.getY();
			    next = frac * box.getWidth();
			}
			for(; i < j; i++) {
			    el = (Element)elPatches[i];
=====================================================================
Found a 18 line (80 tokens) duplication in the following files: 
Starting at line 1403 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1429 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

    public void removeTypeTag(int type, String tag) {
	Attribute attr = null;
	Hashtable tags;
	switch(type) {
	case NODE:
	    attr = getNodeAttribute(TAG_ATTR);
	    break;
	case EDGE:
	    attr = getEdgeAttribute(TAG_ATTR);
	    break;
	case SUBGRAPH:
	    attr = getLocalAttribute(TAG_ATTR);
	    break;
	}
	if(attr == null) return;
	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return;
	tags.remove(tag);
=====================================================================
Found a 17 line (80 tokens) duplication in the following files: 
Starting at line 26 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlace.java
Starting at line 25 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlace.java

public class ConditionPlace extends PlaceTransitionObject implements Cloneable
{
	private static final long serialVersionUID = 1L;
	public final static String type = "ConditionalPlace";
	
	public static final int DIAMETER = PLACE_TRANSITION_HEIGHT;
	private static Ellipse2D.Double	place = new Ellipse2D.Double(0, 0, DIAMETER, DIAMETER);


	/** Current Marking */
	private Integer currentMarking = null;
	

	private Color defaultColor = Color.lightGray,
				validColor = Color.green,
				currentColor = defaultColor;
	private String condOperator="", condOperand="";
=====================================================================
Found a 13 line (79 tokens) duplication in the following files: 
Starting at line 348 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java
Starting at line 362 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

	    grpts[pts++] = new GrappaPoint(curve.substring(i+2,j));
	    for(i = ++j; i < len; i++) {
		if(curve.charAt(i) != ' ') {
		    break;
		}
	    }
	    for(k = j, j = len; k < j; k++) {
		if(curve.charAt(k) == ' ') {
		    j = k;
		    break;
		}
	    }
	}
=====================================================================
Found a 23 line (79 tokens) duplication in the following files: 
Starting at line 1287 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 1255 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

			QueryEditor.this.queryView.getSelectionObject().deleteSelection();
		}
	}

	class TypeAction extends QueryAction
	{

		private final int	typeID;

		TypeAction(final String name, final int typeID, final String tooltip, final String keystroke) {
			super(name, tooltip, keystroke);
			this.typeID = typeID;
		}

		public void actionPerformed(final ActionEvent e)
		{
			if (!isSelected())
			{
				setSelected(true);
				// reset all other drawing actions (need for toggle buttons)
				resetDrawingActions(this);

				if (QueryEditor.this.queryView == null)
=====================================================================
Found a 10 line (79 tokens) duplication in the following files: 
Starting at line 229 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 238 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

			String nodeOperation = ((OperationNode) inputNode).getOperation();
			nodeElement.setAttribute("operation", nodeOperation);
			Element outgoingArcsElement = document.createElement("outgoingArcs");
			nodeElement.appendChild(outgoingArcsElement);
			Collection nodeOutgoingArcIDs = ((OperationNode) inputNode).getOutgoingArcIDs();
			Iterator i = nodeOutgoingArcIDs.iterator();
			while (i.hasNext())
			{
				String outgoingArcID = (String) i.next();
				PerformanceTreeArc nodeArc = MacroWriter.macro.getMacroArc(outgoingArcID);
=====================================================================
Found a 13 line (78 tokens) duplication in the following files: 
Starting at line 315 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 427 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

				     new Ellipse2D.Double
					 (
					  (pos.x - width/2.0) + (double)(i * PERIPHERY_GAP),
					  (pos.y - height/2.0) + (double)(i * PERIPHERY_GAP),
					  width - (double)(2 * i * PERIPHERY_GAP),
					  height - (double)(2 * i * PERIPHERY_GAP)
					  ),
				     false
				     );
			    } else {
				path.append
				    (
				     new Ellipse2D.Double
=====================================================================
Found a 6 line (78 tokens) duplication in the following files: 
Starting at line 1837 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1929 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

				if(dir > 1) {
				    p = new GrappaBox(prv, previous, nxt = box.getWidth() * el.getPatchSize() / tot, next);
				} else {
				    p = new GrappaBox(previous, prv, next, nxt = box.getHeight() * el.getPatchSize() / tot);
				}
				((Subgraph)el).compSqPatchWork(p, false);
=====================================================================
Found a 14 line (78 tokens) duplication in the following files: 
Starting at line 40 of /usr/local/git/PipeCoursework/src/pipe/gui/EditTaggedAction.java
Starting at line 71 of /usr/local/git/PipeCoursework/src/pipe/gui/EditTaggedAction.java

		else{
			
			//if it's an input arc
			if(selected.getTarget() instanceof Transition){
				final Transition tran = (Transition)selected.getTarget();
				Iterator arcFromTransitions = tran.getConnectFromIterator();
				int arcNum = 0;
				Arc arc=null;
				while(arcFromTransitions.hasNext())
		  		{
					arcNum++;
		  			arc = ((Arc)arcFromTransitions.next());		  				
		  		}
				if(arcNum==1 && arc!=null)arc.setTagged(false);
=====================================================================
Found a 27 line (78 tokens) duplication in the following files: 
Starting at line 557 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java
Starting at line 536 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

}	  

  

// This class allows a JList to operate in a click toggle fashion - see JList java doc
class ToggleSelectionModel extends DefaultListSelectionModel
{
	private static final long serialVersionUID = 1L;
	boolean gestureStarted = false;
    
    public void setSelectionInterval(int index0, int index1)
    {
		if (isSelectedIndex(index0) && !gestureStarted) 
		    super.removeSelectionInterval(index0, index1);
		
		else 
		    super.setSelectionInterval(index0, index1);
		
		gestureStarted = true;
    }

    public void setValueIsAdjusting(boolean isAdjusting)
    {
    	if (isAdjusting == false) 
	    gestureStarted = false;
    }
}
=====================================================================
Found a 20 line (78 tokens) duplication in the following files: 
Starting at line 157 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java
Starting at line 200 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java

											((NumNode) this.node).setNumValue(numVal);

											// display numerical value below
											// node
											String nodeLabel = Double.toString(numVal);
											((NumNode) this.node).setNodeLabel(nodeLabel);

											if (MacroManager.getEditor() == null)
											{
												// not in macro mode
												QueryManager.getData().updateNode(this.node);
											}
											else
											{
												// in macro mode
												MacroManager.getEditor().updateNode(this.node);
											}

											inputValid = true;
										}
=====================================================================
Found a 18 line (78 tokens) duplication in the following files: 
Starting at line 712 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java
Starting at line 1161 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java

	public void clearText(){
		currentQuery = "";
		currentParam = "";
		if (styledDoc.getLength()>0){
			try{
				styledDoc.remove(0, styledDoc.getLength());
			}catch (Exception ex){
				System.out.println("position does not exist in document: " + ex);
				System.exit(1);
			}
		}
		currentParamLeft = 0;
		currentParamRight = 0;
		currentTextColor = "black";
		currentUndoStep = 0;
		undoList.clear();
		updateSelector();
	}
=====================================================================
Found a 23 line (78 tokens) duplication in the following files: 
Starting at line 106 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 125 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java

		place.removeCondition();
	}


	/**
	 * This action listener responds to the buttons used in
	 * the "Add Condition" pop up dialog
	 * i.e the Cancel / OK buttons 
	 */

	ActionListener BtnClick = new ActionListener() {
		public void actionPerformed(ActionEvent event) {
			if (event.getSource() == cancelButton) {
				closeWindow();
			}
			else if (event.getSource() == okButton) {
				String operatorStr, targetStr;
				operatorStr = (String) operaterCombo.getSelectedItem();
				targetStr = conditionValue.getText();
				if (inputValid(targetStr)) {
					try {
						// Update the change buffer					 
						((StateGroupEditor)parentDialog).addStateElement(place.getId(), operatorStr, targetStr);
=====================================================================
Found a 29 line (78 tokens) duplication in the following files: 
Starting at line 533 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 557 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java

	}
	
	
	//This class allows a JList to operate in a click toggle fashion - see JList java doc
	class ToggleSelectionModel extends DefaultListSelectionModel
	{
		private static final long serialVersionUID = 1L;
		boolean gestureStarted = false;
	    
	    public void setSelectionInterval(int index0, int index1)
	    {
			if (isSelectedIndex(index0) && !gestureStarted) 
			    super.removeSelectionInterval(index0, index1);
			
			else 
			    super.setSelectionInterval(index0, index1);
			
			gestureStarted = true;
	    }

	    public void setValueIsAdjusting(boolean isAdjusting)
	    {
	    	if (isAdjusting == false) 
		    gestureStarted = false;
	    }
		  
	
	  
}	 
=====================================================================
Found a 17 line (77 tokens) duplication in the following files: 
Starting at line 54 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 172 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      double[][] C = X.getArray();
      for (int i = 0; i < m; i++) {
         if (A[i].length != n) {
            throw new IllegalArgumentException
               ("All rows must have the same length.");
         }
         for (int j = 0; j < n; j++) {
            C[i][j] = A[i][j];
         }
      }
      return X;
   }

   /** Make a deep copy of a matrix
   */

   public Matrix copy () {
=====================================================================
Found a 12 line (77 tokens) duplication in the following files: 
Starting at line 175 of /usr/local/git/PipeCoursework/src/pipe/modules/classification/Classification.java
Starting at line 217 of /usr/local/git/PipeCoursework/src/pipe/modules/classification/Classification.java

  protected boolean extendedFreeChoiceNet(DataLayer pnmlData){
//    Place[] places=pnmlData.getPlaces();
//	  Place[] places=getPlaces(pnmlData);
	  int placeCount = pnmlData.getPlacesCount();
	  
	  int[] fps1,fps2; // forwards place sets for p and p'
      if (placeCount != 0)
      for (int placeNo=0; placeNo<placeCount; placeNo++)
        for (int placeDashNo=placeNo+1; placeDashNo<placeCount;placeDashNo++) {
          fps1=forwardsPlaceSet(pnmlData,placeNo);
          fps2=forwardsPlaceSet(pnmlData,placeDashNo);
          if (intersectionBetweenSets(fps1,fps2) && !Arrays.equals(fps1,fps2)) {
=====================================================================
Found a 15 line (77 tokens) duplication in the following files: 
Starting at line 169 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 242 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

            s+=": Source = \"" + source[i].getRate() + "\"  Comparison  = \"" + comparison[j].getRate() + "\"";
          }
        }
        source[i]=null;       // null ones that have been done
        comparison[j]=null;
        results.add(s);
      }
    }
    
    // Fill in unmatched source transitions
    for(i=0;i<source.length;i++) if(source[i]!= null) {
      results.add(source[i].getName());
      results.add("");
      s="Not found in comparison Petri net";
      if(compareID)     s+="<br>Id= \"" + source[i].getId() + "\"";
=====================================================================
Found a 10 line (77 tokens) duplication in the following files: 
Starting at line 440 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java
Starting at line 457 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

						while (ch != -1) {
							while (((ch = stdout.read()) != -1) && (ch != 10)) {
								currentLine += (char)ch;
							}
							for(int i=0; i<urtaStrings.length; i++) {
								if (currentLine.indexOf(urtaStrings[i])>=0){
									current = i;
									statMessage = currentLine;
								}
							}
=====================================================================
Found a 14 line (77 tokens) duplication in the following files: 
Starting at line 173 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/StatusIndicator.java
Starting at line 107 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/NameLabel.java

		this.setPosition(this.positionX + x, this.positionY + y);
	}

	public void updatePosition()
	{
		this.setLocation(this.positionX - this.getPreferredSize().width, this.positionY -
																			this.getPreferredSize().height);
	}

	public void updateSize()
	{
		// To get round Java bug #4352983 I have to expand the size a bit
		this.setSize(	(int) (this.getPreferredSize().width * 1.2),
						(int) (this.getPreferredSize().height * 1.2));
=====================================================================
Found a 17 line (77 tokens) duplication in the following files: 
Starting at line 629 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java
Starting at line 712 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java

				}else {
					currentQuery = "";
					currentParam = "";
					if (styledDoc.getLength()>0){
						try{
							styledDoc.remove(0, styledDoc.getLength());
						}catch (Exception ex){
							System.out.println("position does not exist in document: " + ex);
							System.exit(1);
						}
					}
					currentParamLeft = 0;
					currentParamRight = 0;
					currentTextColor = "black";
					currentUndoStep = 0;
					undoList.clear();
					updateSelector();
=====================================================================
Found a 19 line (77 tokens) duplication in the following files: 
Starting at line 735 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 675 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

				QueryManager.writeToInfoBox(msg);
			}
		};

		b.addActionListener(actionListener);
		toolbar.add(b);

		action.addPropertyChangeListener(new PropertyChangeListener()
		{
			public void propertyChange(final PropertyChangeEvent pce)
			{
				if (pce.getPropertyName().equals("selected"))
				{
					b.setSelected(((Boolean) pce.getNewValue()).booleanValue());
				}
			}
		});
		return b;
	}
=====================================================================
Found a 13 line (77 tokens) duplication in the following files: 
Starting at line 317 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 154 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

			if(components[i] instanceof SelectionObject) continue; // SelectionObject not included
			Rectangle r=components[i].getBounds();
			int x=r.x+r.width+100;
			int y=r.y+r.height+100;
			if(x>d.width)  d.width =x;
			if(y>d.height) d.height=y;
		}
		setPreferredSize(d);

		getParent().validate();
	}
	
	public void zoom() {
=====================================================================
Found a 9 line (77 tokens) duplication in the following files: 
Starting at line 322 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java
Starting at line 572 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java

		Iterator it = this.outgoingArcIDs.iterator();
		while (it.hasNext())
		{
			String outgoingArcID = (String) it.next();
			PerformanceTreeArc outgoingArc;
			if (MacroManager.getEditor() == null)
				outgoingArc = QueryManager.getData().getArc(outgoingArcID);
			else outgoingArc = MacroManager.getEditor().getArc(outgoingArcID);
			if (outgoingArc.getTarget() != null)
=====================================================================
Found a 20 line (77 tokens) duplication in the following files: 
Starting at line 473 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 564 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java

		stateLabelButtonsPanel.add(new ButtonBar(buttonNames, buttonListeners));

		// main panel
		JPanel stateLabelPanel = new JPanel();
		stateLabelPanel.setBorder(new EtchedBorder());
		stateLabelPanel.setLayout(new BoxLayout(stateLabelPanel, BoxLayout.Y_AXIS));
		stateLabelPanel.add(stateLabelNamePanel);
		stateLabelPanel.add(stateLabelButtonsPanel);
		StateLabelManager.stateLabelDialog.add(stateLabelPanel);

		// make popup visible
		StateLabelManager.stateLabelDialog.pack();
		StateLabelManager.stateLabelDialog.setLocationRelativeTo(null);
		StateLabelManager.stateLabelDialog.setVisible(true);
	}

	/**
	 * Creates the state label assignment manager
	 */
	private static JPanel getStatesAssignmentManagerPanel()
=====================================================================
Found a 23 line (77 tokens) duplication in the following files: 
Starting at line 131 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 853 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java

		contentPane.add(okButtonPanel);

		// take care of popup closing
		StateLabelManager.popupDialog.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
		StateLabelManager.popupDialog.addWindowListener(new WindowAdapter()
		{
			@Override
			public void windowClosing(final WindowEvent we)
			{
				StateLabelManager.clearAll();
				StateLabelManager.popupDialog.dispose();
			}
		});

		// load in the latest info
		StateLabelManager.update();

		// show popup
		StateLabelManager.popupDialog.pack();
		StateLabelManager.popupDialog.setLocationRelativeTo(null);
		StateLabelManager.popupDialog.setVisible(true);

	}
=====================================================================
Found a 27 line (77 tokens) duplication in the following files: 
Starting at line 65 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/ArithOp.java
Starting at line 64 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/ArithComp.java

			throw new InvalidNodeAnalyserException("ArithComp " + this.operation +
													" Children not evaluated yet");
		}
	}

	@Override
	protected NodeAnalyser checkChildValid(final NodeAnalyser child) throws InvalidNodeAnalyserException
	{
		switch (child.getType())
		{
			case PROBININTERVAL :
			case PROBINSTATES :
			case MOMENT :
			case FIRINGRATE :
			case STEADYSTATEPROB :
			case PERCENTILE :
			case ARITHOP :
			case MACRO :
			case NUM :
				return child;
			default :
				throw new InvalidNodeAnalyserException(child.getType() +
														" doesn't return type num node, Can't create range node");
		}
	}

}
=====================================================================
Found a 21 line (76 tokens) duplication in the following files: 
Starting at line 137 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 241 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                System.out.print(" ");
                System.out.flush();

                while (!done){
                        try{
                                ch = System.in.read();
                                if (ch < 0 || (char)ch == '\n')
                                        done = true;
                                else
                                        cstring = cstring + (char) ch;
                        }
                        catch(java.io.IOException e){
                                done = true;
                        }
                }
                return Complex.parseComplex(cstring);
        }

        // PRINT A COMPLEX NUMBER
        // Print to terminal window with text (message) and a line return
        public void println(String message){
=====================================================================
Found a 17 line (76 tokens) duplication in the following files: 
Starting at line 734 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 905 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                if((array[ii] - value )>=0){
                    diff0 = value - array[ii];
                    nearest = array[ii];
                    test = false;
                }
                else{
                    ii++;
                    if(ii>array.length-1){
                        nearest = max;
                        diff0 = value - max;
                        test = false;
                    }
                }
            }
            for(int i=0; i<array.length; i++){
                diff1 = array[i]- value;
                if(diff1>=0 && diff1<diff0 ){
=====================================================================
Found a 17 line (76 tokens) duplication in the following files: 
Starting at line 662 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 833 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                if((value - array[ii])>=0){
                    diff0 = value - array[ii];
                    nearest = array[ii];
                    test = false;
                }
                else{
                    ii++;
                    if(ii>array.length-1){
                        nearest = min;
                        diff0 = min - value;
                        test = false;
                    }
                }
            }
            for(int i=0; i<array.length; i++){
                diff1 = value - array[i];
                if(diff1>=0 && diff1<diff0 ){
=====================================================================
Found a 11 line (76 tokens) duplication in the following files: 
Starting at line 220 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 357 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java

				if ("outgoingArcs".equals(nodeElement.getNodeName()))
				{
					NodeList outgoingArcsElementList = nodeElement.getChildNodes();
					for (int j = 0; j < outgoingArcsElementList.getLength(); j++)
					{
						Node outgoingArcsNode = outgoingArcsElementList.item(j);
						if (outgoingArcsNode instanceof Element)
						{
							Element outgoingArcsElement = (Element) outgoingArcsNode;
							if ("arc".equals(outgoingArcsElement.getNodeName()))
							{
=====================================================================
Found a 26 line (76 tokens) duplication in the following files: 
Starting at line 32 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryTransformer.java
Starting at line 32 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroTransformer.java

	public MacroTransformer() {
		
	}

	
	/** Transform a PTML file into a Document which is returned and used to
	 * construct the QueryData
	 * 
	 * @returns - Document from which QueryData can be built
	 * @param filename - URI location of PTML
	 * @throws IOException
	 * @throws SAXException
	 * @throws TransformerException
	 * @throws ParserConfigurationException
	 */
	public Document transformPTML(String filename) {
		File outputObjectArrayList = null;
		Document document = null;

		try {
			// Create Transformer with XSL source file
			StreamSource xsltSource = new StreamSource(Thread.currentThread().getContextClassLoader().getResourceAsStream(
					"pipe"+System.getProperty("file.separator")+
					"modules"+System.getProperty("file.separator")+
					"queryeditor"+System.getProperty("file.separator")+
					"io"+System.getProperty("file.separator")+"LoadMacroXML.xsl"));		
=====================================================================
Found a 21 line (76 tokens) duplication in the following files: 
Starting at line 123 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/ClientUpdater.java
Starting at line 186 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/AnalysisStatusUpdater.java

	}

	private void sendLine(final String status, final boolean flush)
	{
		try
		{
			if (this.out == null)
			{
				this.wait();
			}
			this.out.println(status);
			if (flush)
			{
				this.out.flush();
			}
		}
		catch (final InterruptedException e)
		{
			ServerLoggingHandler.logger.log(Level.WARNING, "Wait for client object out stream interrupted", e);
		}
	}
=====================================================================
Found a 6 line (75 tokens) duplication in the following files: 
Starting at line 943 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1445 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          case 7: // hdr ::= STRICTDIGRAPH optGraphName 
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
=====================================================================
Found a 5 line (75 tokens) duplication in the following files: 
Starting at line 1732 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 2006 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

		System.out.println("\n firedTagged = "+ firedTagged+" previoulytaggedplace size" + this.previoulyTaggedPlace.size()+   "\n");
		for(int i=0;i<this.previoulyTaggedPlace.size(); i++){
			if(this.previoulyTaggedPlace.get(i) instanceof Place)System.out.println( ((Place) this.previoulyTaggedPlace.get(i)).getId() );
			else System.out.println(this.previoulyTaggedPlace.get(i));
		}
=====================================================================
Found a 7 line (75 tokens) duplication in the following files: 
Starting at line 510 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1378 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		final PNMatrix X = new PNMatrix(this.m, this.n);
		final int[][] C = X.getArray();
		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
				C[i][j] = this.A[i][j] + B.A[i][j];
=====================================================================
Found a 14 line (75 tokens) duplication in the following files: 
Starting at line 34 of /usr/local/git/PipeCoursework/src/pipe/modules/matrices/Matrices.java
Starting at line 62 of /usr/local/git/PipeCoursework/src/pipe/modules/invariantAnalysis/InvariantAnalysis.java

    JDialog guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
    
    // 1 Set layout
    Container contentPane=guiDialog.getContentPane();
    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
    
    // 2 Add file browser
    contentPane.add(sourceFilePanel=new PetriNetChooserPanel("Source net",pnmlData));
    
    // 3 Add results pane
    contentPane.add(results=new ResultsHTMLPane(pnmlData.getURI()));
    
    // 4 Add button
    contentPane.add(new ButtonBar("Analyse",analyseButtonClick));
=====================================================================
Found a 16 line (75 tokens) duplication in the following files: 
Starting at line 259 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 306 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java

	private XYPlot setupProbInInterval(final ProbInIntervalResultWrapper piiWrapper, final XYItemRenderer r)
	{
		final XYPlot plot = new XYPlot(	this.seriesCollection,
										new NumberAxis("Time"),
										new NumberAxis("Probability"),
										r);
		r.setSeriesPaint(0, Color.BLACK);

		final BasicStroke bstroke = new BasicStroke(1.0f,
													BasicStroke.CAP_BUTT,
													BasicStroke.JOIN_MITER,
													10,
													new float[]{5, 5, 5},
													0);

		final ArrayList<Double> subPoints = new ArrayList<Double>();
=====================================================================
Found a 9 line (74 tokens) duplication in the following files: 
Starting at line 372 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 386 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

					  pos.y + (double)(i * PERIPHERY_GAP),
					  width - (double)(2 * i * PERIPHERY_GAP),
					  height - (double)(2 * i * PERIPHERY_GAP),
					  arcWidthFactor * (width - (double)(2 * i * PERIPHERY_GAP)),
					  arcHeightFactor * (height - (double)(2 * i * PERIPHERY_GAP))
					  ),
				     false
				     );
			    }
=====================================================================
Found a 15 line (74 tokens) duplication in the following files: 
Starting at line 473 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 535 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

    buildSize(StringBuffer buf, java.awt.geom.Dimension2D parg, boolean upper) {

	double[]		arg = { 0, 0 };
	double[]		exp = { 0, 0 };
	double[]		val = { 0, 0 };
	double[]		ival = { 0, 0 };
	int[]			iexp = { 0, 0 };
	StringBuffer		retbuf = null;
	int			orig_precision;
	int			pr;


	trim = true;

	arg[0] = parg.getWidth();
=====================================================================
Found a 11 line (74 tokens) duplication in the following files: 
Starting at line 1792 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1865 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

		if((i+1) < elPatches.length) {
		    psz = 0;
		    frac = sz / total;
		    if(dir > 1) {
			pscore = score(box.getWidth(),frac*box.getHeight());
		    } else {
			pscore = score(frac*box.getWidth(),box.getHeight());
		    }
		    j = i + 1;
		    for(;;) {
			tsz = ((Element)elPatches[j]).getPatchSize();
=====================================================================
Found a 6 line (74 tokens) duplication in the following files: 
Starting at line 537 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 552 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static Complex[][][] threeDarray(int n, int m, int l, Complex constant){
                Complex[][][] c =new Complex[n][m][l];
                for(int i=0; i<n; i++){
                        for(int j=0; j<m; j++){
                                for(int k=0; k<l; k++){
                                        c[i][j][k]=Complex.copy(constant);
=====================================================================
Found a 9 line (74 tokens) duplication in the following files: 
Starting at line 575 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 235 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

	private static void addExplored(Marking newstate, LinkedList[] es, MappedByteBuffer opfile, boolean vanishingStates){
		LinkedList hashrow = es[newstate.hashCode()%NUMHASHROWS];
		if(hashrow == null){
			// This hashcode hasn't come up before so we need
			// to set up the linked list first
			es[newstate.hashCode()%NUMHASHROWS] = new LinkedList();
			hashrow = es[newstate.hashCode()%NUMHASHROWS];
		}
		hashrow.add(new CompressedState(newstate.hashCode2(), newstate.getIDNum()));
=====================================================================
Found a 26 line (74 tokens) duplication in the following files: 
Starting at line 150 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 291 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

			modString += ") ? 1 : 0}\n";
			modString += "\t}\n";
			
			modString += "\t\\countmeasure{Throughput for transition " + id + "}{\n";
			modString += "\t\t\\estimator{mean}\n";
			modString += "\t\t\\precondition{1}\n";
			modString += "\t\t\\postcondition{1}\n";
			modString += "\t\t\\transition{" + id + "}\n";
			modString += "\t}\n";
			
		}
		
		
		private void method()
		{
			modString += "\\solution{\n\t\\method{sor}\n\n}";
		}
		
		private void stateVector() 
		{	
			
			modString += "\t\\statevector{\n";
			modString += "\t\t\\type{short}{";
			
			modString += places[0].getId();
			if(places[0].isTagged())
=====================================================================
Found a 7 line (74 tokens) duplication in the following files: 
Starting at line 356 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 373 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java

			transform.transform(new Point2D.Double(+0.5 * QueryConstants.NODE_WIDTH, current), transformed);
			if (thisArc.sourceOrTarget())
				thisArc.arc.setTargetLocation(	this.positionX + centreOffsetLeft() + transformed.x,
												this.positionY + centreOffsetTop() + transformed.y);
			else thisArc.arc.setSourceLocation(	this.positionX + centreOffsetLeft() + transformed.x,
												this.positionY + centreOffsetTop() + transformed.y);
			current += inc;
=====================================================================
Found a 10 line (74 tokens) duplication in the following files: 
Starting at line 78 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateStatesNode.java
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateProbNode.java

		ArrayList children = getChildNodes();
		if (children != null) {
			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();	
				QueryManager.colourUp();
				description += child.printTextualRepresentation();
				QueryManager.colourDown();
				if (i.hasNext()) 
					description += QueryManager.addColouring(op);
=====================================================================
Found a 14 line (74 tokens) duplication in the following files: 
Starting at line 800 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 1043 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java

	public static boolean containsText(final String inputString)
	{
		boolean stringContainsText = false;
		if (!inputString.equals(""))
		{
			for (int i = 0; i < inputString.length(); i++)
			{
				char chr = inputString.charAt(i);
				if (Character.isDigit(chr) || Character.isLetter(chr))
					stringContainsText = true;
			}
		}
		return stringContainsText;
	}
=====================================================================
Found a 9 line (73 tokens) duplication in the following files: 
Starting at line 405 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 438 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

	    nsz = new Dimension((int)Math.ceil(bbox.getWidth()),(int)Math.ceil(bbox.getHeight()));
	    if (prevsz == null || prevsz.getWidth() != nsz.getWidth() || prevsz.getHeight() != nsz.getHeight()) {
		setSize(nsz);
		setPreferredSize(nsz);
		prevsz = new Dimension(nsz.width, nsz.height);
	    }
	    transform.translate(-bbox.getMinX(),-bbox.getMinY());

	}
=====================================================================
Found a 7 line (73 tokens) duplication in the following files: 
Starting at line 310 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 438 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

	    nsz = new Dimension((int)Math.ceil(bbox.getWidth()),(int)Math.ceil(bbox.getHeight()));
	    if (prevsz == null || prevsz.getWidth() != nsz.getWidth() || prevsz.getHeight() != nsz.getHeight()) {
		setSize(nsz);
		setPreferredSize(nsz);
		prevsz = new Dimension(nsz.width, nsz.height);
	    }
	    transform.translate(-bbox.getMinX(),-bbox.getMinY());
=====================================================================
Found a 5 line (73 tokens) duplication in the following files: 
Starting at line 1448 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1482 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

		int nameleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		
          startGraph(name,type.booleanValue(),strict.booleanValue());
=====================================================================
Found a 17 line (73 tokens) duplication in the following files: 
Starting at line 772 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 943 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                if((array[ii] - value )>=0){
                    diff0 = value - array[ii];
                    nearest = ii;
                    test = false;
                }
                else{
                    ii++;
                    if(ii>array.length-1){
                        nearest = maxI;
                        diff0 = value - max;
                        test = false;
                    }
                }
            }
            for(int i=0; i<array.length; i++){
                diff1 = array[i]- value;
                if(diff1>=0 && diff1<diff0 ){
=====================================================================
Found a 17 line (73 tokens) duplication in the following files: 
Starting at line 700 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 871 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                if((value - array[ii])>=0){
                    diff0 = value - array[ii];
                    nearest = ii;
                    test = false;
                }
                else{
                    ii++;
                    if(ii>array.length-1){
                        nearest = minI;
                        diff0 = min - value;
                        test = false;
                    }
                }
            }
            for(int i=0; i<array.length; i++){
                diff1 = value - array[i];
                if(diff1>=0 && diff1<diff0 ){
=====================================================================
Found a 13 line (73 tokens) duplication in the following files: 
Starting at line 77 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 129 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java

		Transition[] transArray = pnmlData.getTransitions();
		
		for (int k = 0; k < transCount; k++) { //initialise matrix to true
			result[k] = true;
		}
		for (int i = 0; i <transCount;i++) {
			for (int j = 0; j <placeCount; j++){
				if (marking[j] < CMinus[j][i])
					result[i] = false;
			}
		}
		
		return result;
=====================================================================
Found a 15 line (73 tokens) duplication in the following files: 
Starting at line 258 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 226 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

        ((PetriNetObject)netObj[i]).deselect();
			}
		}
	}

	public void translateSelection(int transX, int transY) {
		if(transX==0 && transY==0)return;
			
		Component netObj[] = edit_window.getComponents();	// Get all the objects in the current window

    // First see if translation will put anything at a negative location
    Point p,topleft=null;
//    Point2D.Float fp;
    for (int i=0; i<netObj.length; i++) {
      if (netObj[i] instanceof PetriNetObject) {
=====================================================================
Found a 15 line (73 tokens) duplication in the following files: 
Starting at line 352 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 228 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java

			repaint();
		}
	}

	public int print(final Graphics g, final PageFormat pageFormat, final int pageIndex) throws PrinterException
	{
		if (pageIndex > 0)
			return Printable.NO_SUCH_PAGE;
		Graphics2D g2D = (Graphics2D) g;
		// Move origin to page printing area corner
		g2D.translate(pageFormat.getImageableX(), pageFormat.getImageableY());
		g2D.scale(0.5, 0.5);
		print(g2D); // Draw the query
		return Printable.PAGE_EXISTS;
	}
=====================================================================
Found a 11 line (72 tokens) duplication in the following files: 
Starting at line 273 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 289 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

		} else {
		    Graphics2D g2d = (Graphics2D)(panel.getGraphics());
		    AffineTransform orig = g2d.getTransform();
		    g2d.setTransform(panel.getTransform());
		    g2d.setXORMode(Color.darkGray);
		    g2d.draw(outline);
		    g2d.setPaintMode();
		    g2d.setTransform(orig);
		}
	    }
	} else if(modifiers == (InputEvent.BUTTON1_MASK|InputEvent.SHIFT_MASK) && subg.getGraph().isEditable()) {
=====================================================================
Found a 8 line (72 tokens) duplication in the following files: 
Starting at line 848 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 897 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

		    if(grappaNexus.lstr != null && edgeLabels) {
			g2d.setFont(grappaNexus.font);
			g2d.setPaint(grappaNexus.font_color);
			for(i = 0; i < grappaNexus.lstr.length; i++) {
			    g2d.drawString(grappaNexus.lstr[i],(int)grappaNexus.lpos[i].x,(int)grappaNexus.lpos[i].y);
			}
		    }
		}
=====================================================================
Found a 7 line (72 tokens) duplication in the following files: 
Starting at line 310 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 405 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

	    nsz = new Dimension(w, h);
	    if (prevsz == null || prevsz.getWidth() != nsz.getWidth() || prevsz.getHeight() != nsz.getHeight()) {
		setSize(nsz);
		setPreferredSize(nsz);
		prevsz = new Dimension(nsz.width, nsz.height);
	    }
	    transform.translate(-bbox.getMinX(),-bbox.getMinY());
=====================================================================
Found a 4 line (72 tokens) duplication in the following files: 
Starting at line 891 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 922 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              Object RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
=====================================================================
Found a 7 line (72 tokens) duplication in the following files: 
Starting at line 555 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 587 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 619 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 651 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

   public Matrix arrayRightDivide (Matrix B) {
      checkMatrixDimensions(B);
      Matrix X = new Matrix(m,n);
      double[][] C = X.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            C[i][j] = A[i][j] / B.A[i][j];
=====================================================================
Found a 10 line (72 tokens) duplication in the following files: 
Starting at line 88 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 78 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateStatesNode.java

		ArrayList children = getChildNodes();
		if (children != null) {
			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();
				QueryManager.colourUp();
				description += child.printTextualRepresentation();	
				QueryManager.colourDown();
				if (i.hasNext()) 
					description += QueryManager.addColouring(op)+" ";
=====================================================================
Found a 12 line (72 tokens) duplication in the following files: 
Starting at line 547 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java
Starting at line 565 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java

		this.modFiles.append("\n\\transient{\n");

		this.appendStartTargetExcluded();

		// Add time parameters
		this.modFiles.append("\t\\t_start{").append(this.settings.startTime + "}\n");
		this.modFiles.append("\t\\t_stop{").append(this.settings.endTime + "}\n");
		this.modFiles.append("\t\\t_step{").append(this.settings.timeStep + "}\n");

		this.modFiles.append("}\n");

	}
=====================================================================
Found a 21 line (72 tokens) duplication in the following files: 
Starting at line 17 of /usr/local/git/PipeCoursework/test/pipe/io/TransitionRecordTest.java
Starting at line 18 of /usr/local/git/PipeCoursework/test/pipe/io/StateRecordTest.java

public class StateRecordTest extends TestCase {
	
	private RandomAccessFile raFile;
	private File testFile;
	
	protected void setUp() throws Exception {
		super.setUp();
		testFile = new File ("testFile");
		raFile = new RandomAccessFile(testFile, "rw");
	}

	protected void tearDown() throws Exception {
		super.tearDown();
		raFile.close();
		testFile.delete();
		
	}

	public void testReadWrite () throws Exception {
		
		final State testState1 = new State (new int []{1,0,1,0,1,0});
=====================================================================
Found a 7 line (71 tokens) duplication in the following files: 
Starting at line 784 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 848 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

		    if(grappaNexus.lstr != null && nodeLabels) {
			g2d.setFont(grappaNexus.font);
			g2d.setPaint(grappaNexus.font_color);
			for(i = 0; i < grappaNexus.lstr.length; i++) {
			    g2d.drawString(grappaNexus.lstr[i],(int)grappaNexus.lpos[i].x,(int)grappaNexus.lpos[i].y);
			}
		    }
=====================================================================
Found a 11 line (71 tokens) duplication in the following files: 
Starting at line 77 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 153 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java

		Transition[] transArray = pnmlData.getTransitions();
		
		for (int k = 0; k < transCount; k++) { //initialise matrix to true
			result[k] = true;
		}
		for (int i = 0; i <transCount;i++) {
			for (int j = 0; j <placeCount; j++){
				if (marking[j] < CMinus[j][i])
					result[i] = false;
			}
		}
=====================================================================
Found a 21 line (71 tokens) duplication in the following files: 
Starting at line 46 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ProgressBarHTMLPane.java
Starting at line 34 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/HTMLPane.java

	    this.add(scroller);	    
	    this.setBorder(new TitledBorder(new EtchedBorder(),title));
  }
  
  public void setText(String text)
  {
    results.setText("<html><head><style type=\"text/css\">" +
        "body{font-family:Arial,Helvetica,sans-serif;text-align:center;background:#ffffff}" +
        "td.colhead{font-weight:bold;text-align:center;background:#ffffff}" +
        "td.rowhead{font-weight:bold;background:#ffffff}"+
        "td.cell{text-align:center;padding:5px,0}" +
        "tr.even{background:#a0a0d0}" +
        "tr.odd{background:#c0c0f0}" +
        "td.empty{background:#ffffff}" +
        "</style></head><body>"+text+"</body></html>");
    results.setCaretPosition(0); // scroll to top
  }
  
  public String getText(){
  	return results.getText();
  }
=====================================================================
Found a 10 line (71 tokens) duplication in the following files: 
Starting at line 299 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 201 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

	public void setCursorType(String type) {
		if (type.equals("arrow")) 
			setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
		else if (type.equals("crosshair")) 	
			setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
		else if (type.equals("move")) 
			setCursor(Cursor.getPredefinedCursor(Cursor.MOVE_CURSOR));
	}

	public void setShiftDown(boolean down){
=====================================================================
Found a 14 line (71 tokens) duplication in the following files: 
Starting at line 25 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/SplitPerformanceTreeArcAction.java
Starting at line 24 of /usr/local/git/PipeCoursework/src/pipe/gui/SplitArcAction.java

	public SplitArcAction(Arc arc, Point mousepos) {
		selected = arc;

		// Mousepos is relative to selected component i.e. the arc
		// Need to convert this into actual coordinates
		Point2D.Float offset = new Point2D.Float(selected.getX(), selected.getY());
		mouseposition = new Point2D.Float(mousepos.x+offset.x, mousepos.y+offset.y);
	}

	public void actionPerformed(ActionEvent arg0) {
		selected.split(mouseposition);
	}

}
=====================================================================
Found a 16 line (71 tokens) duplication in the following files: 
Starting at line 172 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 618 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

					myCurrentPoint = (ArcPathPoint) this.pathPoints.get(k2 + curveStartIndex);
					myCurrentPoint.setControl1(X[k2 - 1].getX1(), Y[k2 - 1].getX1());
					myCurrentPoint.setControl2(X[k2 - 1].getX2(), Y[k2 - 1].getX2());

				}

			}

			else
			{
				c++;
			}
		}
	}

	private void setEndControlPoints()
=====================================================================
Found a 10 line (71 tokens) duplication in the following files: 
Starting at line 336 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 201 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

	public void setCursorType(String type) {
		if (type.equals("arrow")) 
			setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
		else if (type.equals("crosshair")) 	
			setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
		else if (type.equals("move")) 
			setCursor(Cursor.getPredefinedCursor(Cursor.MOVE_CURSOR));
	}

	public void setShiftDown(boolean down){
=====================================================================
Found a 15 line (71 tokens) duplication in the following files: 
Starting at line 216 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 136 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java

	public void addNewPerformanceTreeObject(final PerformanceTreeObject newObject)
	{
		if (newObject != null)
		{
			int l = newObject.getMouseListeners().length;
			if (l == 0)
			{
				if (newObject instanceof PerformanceTreeNode)
				{
					PerformanceTreeNodeHandler nodeHandler = new PerformanceTreeNodeHandler(this,
																							(PerformanceTreeNode) newObject);
					newObject.addMouseListener(nodeHandler);
					newObject.addMouseMotionListener(nodeHandler);
					add(newObject);
					if (newObject instanceof OperationNode)
=====================================================================
Found a 15 line (71 tokens) duplication in the following files: 
Starting at line 168 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 420 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java

				Iterator it = this.outgoingArcIDs.iterator();
				while (it.hasNext())
				{
					String outgoingArcID = (String) it.next();
					PerformanceTreeArc outgoingArc;
					if (MacroManager.getEditor() == null)
					{
						// we're selecting an arc on the main drawing canvas
						outgoingArc = QueryManager.getData().getArc(outgoingArcID);
					}
					else
					{
						// we're selecting an arc in the macro editor
						outgoingArc = MacroManager.getEditor().getArc(outgoingArcID);
					}
=====================================================================
Found a 21 line (71 tokens) duplication in the following files: 
Starting at line 46 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ProgressBarHTMLPane.java
Starting at line 34 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/HTMLPane.java

	    this.add(scroller);	    
	    this.setBorder(new TitledBorder(new EtchedBorder(),title));
  }
  
  public void setText(String text)
  {
    results.setText("<html><head><style type=\"text/css\">" +
        "body{font-family:Arial,Helvetica,sans-serif;text-align:center;background:#ffffff}" +
        "td.colhead{font-weight:bold;text-align:center;background:#ffffff}" +
        "td.rowhead{font-weight:bold;background:#ffffff}"+
        "td.cell{text-align:center;padding:5px,0}" +
        "tr.even{background:#a0a0d0}" +
        "tr.odd{background:#c0c0f0}" +
        "td.empty{background:#ffffff}" +
        "</style></head><body>"+text+"</body></html>");
    results.setCaretPosition(0); // scroll to top
  }
  
  public String getText(){
  	return results.getText();
  }
=====================================================================
Found a 25 line (71 tokens) duplication in the following files: 
Starting at line 48 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateEditor.java
Starting at line 48 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/StateEditor.java

	Passage parent =null;
	boolean newStateGroup = false;
	
	JDialog stateDialog;
	JTextField stateNameTextField;
	JButton saveStateGroupBtn, cancelBtn;
	JButton initialStateBtn, allZeroBtn, clearStatesBtn;
	
	
	public void addState(DataLayer pnmlData)
	{
		appModel = pnmlData;
		activeStateGroup = new StateGroup(pnmlData);
		newStateGroup = true;
		init();
	}
	
	public void editState(DataLayer pnmlData, StateGroup editStateGroup)
	{
		appModel = pnmlData;
		activeStateGroup = editStateGroup;
		init();
	}
	
	public void setParent(Passage parentRef)
=====================================================================
Found a 15 line (70 tokens) duplication in the following files: 
Starting at line 52 of /usr/local/git/PipeCoursework/src/pipe/gui/EditTaggedAction.java
Starting at line 84 of /usr/local/git/PipeCoursework/src/pipe/gui/EditTaggedAction.java

				if(arcNum==1 && arc!=null)arc.setTagged(false);
				
			}//it's an output arc
			else{
				
				final Transition tran = (Transition)selected.getSource();
				Iterator arcToTransitions = tran.getConnectToIterator();
				int arcNum = 0;
				Arc arc=null;
				while(arcToTransitions.hasNext())
		  		{
					arcNum++;
		  			arc = ((Arc)arcToTransitions.next());		  				
		  		}
				if(arcNum==1 && arc!=null)arc.setTagged(false);
=====================================================================
Found a 7 line (70 tokens) duplication in the following files: 
Starting at line 330 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 357 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java

								transformed); // +1 due to rounding making it
			// off by 1
			if (thisArc.sourceOrTarget())
				thisArc.arc.setTargetLocation(	this.positionX + centreOffsetLeft() + transformed.x,
												this.positionY + centreOffsetTop() + transformed.y);
			else thisArc.arc.setSourceLocation(	this.positionX + centreOffsetLeft() + transformed.x,
												this.positionY + centreOffsetTop() + transformed.y);
=====================================================================
Found a 15 line (69 tokens) duplication in the following files: 
Starting at line 327 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 439 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

				     new Ellipse2D.Double
					 (
					  pos.x + (double)(i * PERIPHERY_GAP),
					  pos.y + (double)(i * PERIPHERY_GAP),
					  width - (double)(2 * i * PERIPHERY_GAP),
					  height - (double)(2 * i * PERIPHERY_GAP)
					  ),
				     false
				     );
			    }
			}
			shape = path;
		    }
		} else {
		    shapeType = OVAL_SHAPE|GRAPPA_SHAPE;
=====================================================================
Found a 3 line (69 tokens) duplication in the following files: 
Starting at line 1139 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1178 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

		int nameleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
=====================================================================
Found a 3 line (69 tokens) duplication in the following files: 
Starting at line 946 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1482 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

		int nameleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
=====================================================================
Found a 9 line (69 tokens) duplication in the following files: 
Starting at line 508 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1773 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

	public PNMatrix uminus()
	{
		final PNMatrix X = new PNMatrix(this.m, this.n);
		final int[][] C = X.getArray();
		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
				C[i][j] = -this.A[i][j];
=====================================================================
Found a 9 line (69 tokens) duplication in the following files: 
Starting at line 882 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 911 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java

	public void updateLabelsWithNewStateName(final String oldStateName, final String newStateName)
	{
		ArrayList<String> labelAssignmentsToModify = new ArrayList<String>();
		Iterator<String> i = this.stateLabels.keySet().iterator();
		while (i.hasNext())
		{
			String label = i.next();
			ArrayList<String> assignedStates = this.stateLabels.get(label);
			if (assignedStates.contains(oldStateName))
=====================================================================
Found a 10 line (69 tokens) duplication in the following files: 
Starting at line 33 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/ArithOp.java
Starting at line 32 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/ArithComp.java

			BoolNode result;
			NumNode lhs, rhs;
			lhs = (NumNode) this.getLhs();
			rhs = (NumNode) this.getRhs();
			double lvalue, rvalue;
			lvalue = ((NumNode) lhs.calculate()).getValue();
			rvalue = ((NumNode) rhs.calculate()).getValue();
			switch (this.operation)
			{
				case LESS :
=====================================================================
Found a 11 line (68 tokens) duplication in the following files: 
Starting at line 1525 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1547 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

			enm = ((Edge)elem).getTail().outEdgeElements();
			while(enm.hasMoreElements()) {
			    edge = (Edge)(enm.nextElement());
			    if (edge.goesForward()) {
				if (edge.visastamp != stamp) {
				    input.addElement(edge);
				    edge.visastamp = stamp;
				}
			    }
			}
			enm = ((Edge)elem).getTail().inEdgeElements();
=====================================================================
Found a 7 line (68 tokens) duplication in the following files: 
Starting at line 276 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 321 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

	    tprnt = prnt = getParent();
	    while (tprnt != null && !(tprnt instanceof javax.swing.JViewport))
		tprnt = tprnt.getParent();
	    if (tprnt != null)
		prnt = tprnt;
	    if(prnt instanceof javax.swing.JViewport) {
		Dimension sz = ((javax.swing.JViewport)prnt).getSize();
=====================================================================
Found a 14 line (68 tokens) duplication in the following files: 
Starting at line 260 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 395 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

		addMenuItem(fileMenu, ((Action) this.actions.get("Exit")));

		// Edit
		JMenu editMenu = new JMenu("Edit");
		editMenu.setMnemonic('E');
		addMenuItem(editMenu, ((Action) this.actions.get("Delete")));

		// View
		JMenu viewMenu = new JMenu("View");
		viewMenu.setMnemonic('V');
		addMenuItem(viewMenu, ((Action) this.actions.get("Grid")));

		// View->Zoom
		JMenu zoomMenu = new JMenu("Zoom");
=====================================================================
Found a 25 line (68 tokens) duplication in the following files: 
Starting at line 113 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryTransformer.java
Starting at line 113 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroTransformer.java

			System.err.println("org.xml.sax.SAXException thrown in getDom(String ptmlFileName) : modules.queryeditor.io.MacroTransformer");
		}

		return document;
	}

	/**
	 * Return a DOM for the PTML File ptmlFile
	 *
	 * @param ptmlFile - File Object for PTML 
	 * @return A DOM for the File Object for PTML 
	 * @throws ParserConfigurationException
	 * @throws IOException
	 * @throws SAXException
	 */
	public Document getDOM(File ptmlFile) throws ParserConfigurationException, IOException, SAXException {
		Document document = null;

		try {
			DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilderFactory.setIgnoringElementContentWhitespace(true);
			DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
			document = documentBuilder.parse(ptmlFile);
		} catch (ParserConfigurationException e) {
			System.err.println("javax.xml.parsers.ParserConfigurationException thrown in getDom(String ptmlFileName) : modules.queryeditor.io.MacroTransformer");
=====================================================================
Found a 16 line (68 tokens) duplication in the following files: 
Starting at line 81 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StatusListener.java
Starting at line 59 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/StatusListener.java

			}

			status = this.server.receiveStatus();
			statusCount++;
		}

		if (status != null && status.equals("Finished"))
			this.statusHTML += "<br>" + "Job finished successfully";

		else if (status != null && status.equals("Failed"))
			this.statusHTML += "<br>" + "Job failed to complete";

		this.statusHTML += "<br>" + "Transferring results..";

		return this.statusHTML + "<br>";
	}
=====================================================================
Found a 13 line (67 tokens) duplication in the following files: 
Starting at line 334 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java
Starting at line 376 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

	    grpts[pts++] = new GrappaPoint(curve.substring(i,j));
	    for(i = ++j; i < len; i++) {
		if(curve.charAt(i) != ' ') {
		    break;
		}
	    }
	    for(k = j, j = len; k < j; k++) {
		if(curve.charAt(k) == ' ') {
		    j = k;
		    break;
		}
	    }
	}
=====================================================================
Found a 6 line (67 tokens) duplication in the following files: 
Starting at line 837 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1305 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		final int[][] C = new int[this.m][this.n]; // = X.getArray();
		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
				C[i][j] = this.A[i][j] - B.A[i][j];
=====================================================================
Found a 8 line (67 tokens) duplication in the following files: 
Starting at line 277 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 349 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

					vanishingStates.push(new VanishingState(sprime, rate(pnmlData, s, sprime)));
					while(!vanishingStates.isEmpty()&&attempts!=MAX_TRIES){
						attempts++;
						v = (VanishingState)vanishingStates.pop();
						p = v.getRate();
						numtransitionsfired += fire(pnmlData, v, vansuccessor, false);
						while(!vansuccessor.isEmpty()){
							vprime = (State)vansuccessor.pop();
=====================================================================
Found a 12 line (67 tokens) duplication in the following files: 
Starting at line 63 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/PetriNetBrowsePanel.java
Starting at line 38 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/PetriNetChooserPanel.java

    if (defaultNet!=null) {
      useCurrent=new JCheckBox("Use current net",true);
      useCurrent.addActionListener(useCurrentClick);
      this.add(useCurrent);
      this.add(Box.createHorizontalStrut(10));
    }
    
    label=new JLabel("Filename:");
    this.add(label);
    this.add(Box.createHorizontalStrut(5));
    
    textField=new JTextField((defaultNet!=null?defaultNet.getURI():null),15);
=====================================================================
Found a 9 line (67 tokens) duplication in the following files: 
Starting at line 125 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 111 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsReceiver.java

			PDFDataset = new XYSeriesCollection(points);				
			pdfGraph = ChartFactory.createXYLineChart("Passage Time Results", "Time","Probability Density", PDFDataset, PlotOrientation.VERTICAL, false, false, false); 
			pdfGraph.setBackgroundPaint(Color.white);							
			pdfChartPanel = new ChartPanel(pdfGraph);
			
			
			graphFlip = new CardLayout();
			graphPanel = new JPanel(graphFlip);
			graphPanel.add(pdfChartPanel, "PDF");
=====================================================================
Found a 13 line (67 tokens) duplication in the following files: 
Starting at line 264 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 179 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java

		else if (c instanceof PerformanceTreeArc)
			setLayer(c, JLayeredPane.DEFAULT_LAYER.intValue() + QueryConstants.ARC_LAYER_OFFSET);
		else if (c instanceof PerformanceTreeArcPathPoint)
			setLayer(c, JLayeredPane.DEFAULT_LAYER.intValue() + QueryConstants.ARC_POINT_LAYER_OFFSET);

		return c;
	}

	@Override
	public void validate()
	{
		Component[] children = getComponents();
		for (Component c : children)
=====================================================================
Found a 8 line (67 tokens) duplication in the following files: 
Starting at line 322 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java
Starting at line 449 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java

		Iterator it = this.outgoingArcIDs.iterator();
		while (it.hasNext())
		{
			String outgoingArcID = (String) it.next();
			PerformanceTreeArc outgoingArc;
			if (MacroManager.getEditor() == null)
				outgoingArc = QueryManager.getData().getArc(outgoingArcID);
			else outgoingArc = MacroManager.getEditor().getArc(outgoingArcID);
=====================================================================
Found a 16 line (67 tokens) duplication in the following files: 
Starting at line 320 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/SteadyState.java
Starting at line 614 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java

		public void setSelectionInterval(int index0, int index1) {
			if (isSelectedIndex(index0) && !gestureStarted) {
				super.removeSelectionInterval(index0, index1);
			}
			else {
				super.setSelectionInterval(index0, index1);
			}
			gestureStarted = true;
		}

		public void setValueIsAdjusting(boolean isAdjusting) {
			if (isAdjusting == false) {
				gestureStarted = false;
			}
		}
	}
=====================================================================
Found a 18 line (67 tokens) duplication in the following files: 
Starting at line 39 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/Analyse.java
Starting at line 42 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Analyse.java

	String status="<h2>Passage Time Analysis Progress</h2>";
	
	
	
	public Analyse(DataLayer pnmlData, ProgressBarHTMLPane progressPane, JPanel resultsPanel)
	{
		this.pnmlData = pnmlData;		 
		this.progressPane = progressPane;
		this.resultsPanel = resultsPanel;
	}
	
	public void setServer(String serverAddr, int serverPort)
	{
	  this.serverAddr = serverAddr;
	  this.serverPort = serverPort;
	}
	
	public void setPassageParameters(ArrayList sourceStateGroups, ArrayList destStateGroups, AnalysisSettings analysisSetting, Boolean cacheFlag)
=====================================================================
Found a 8 line (67 tokens) duplication in the following files: 
Starting at line 111 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 125 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

			PDFDataset = new XYSeriesCollection(points);				
			pdfGraph = ChartFactory.createXYLineChart("Passage Time Results", "Time","Probability Density", PDFDataset, PlotOrientation.VERTICAL, false, false, false); 
			pdfGraph.setBackgroundPaint(Color.white);							
			pdfChartPanel = new ChartPanel(pdfGraph);
			
			graphFlip = new CardLayout();
			graphPanel = new JPanel(graphFlip);
			graphPanel.add(pdfChartPanel, "PDF");
=====================================================================
Found a 6 line (66 tokens) duplication in the following files: 
Starting at line 315 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 369 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

				     new RoundRectangle2D.Double
					 (
					  (pos.x - width/2.0) + (double)(i * PERIPHERY_GAP),
					  (pos.y - height/2.0) + (double)(i * PERIPHERY_GAP),
					  width - (double)(2 * i * PERIPHERY_GAP),
					  height - (double)(2 * i * PERIPHERY_GAP),
=====================================================================
Found a 10 line (66 tokens) duplication in the following files: 
Starting at line 375 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 413 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

	    cpt = null;
	    prnt = null;

	    if(scaleChanged) {
		tprnt = prnt = getParent();
		while (tprnt != null && !(tprnt instanceof javax.swing.JViewport))
		    tprnt = tprnt.getParent();
		if (tprnt != null)
		    prnt = tprnt;
		if(prnt instanceof javax.swing.JViewport && inverseTransform != null) {
=====================================================================
Found a 21 line (66 tokens) duplication in the following files: 
Starting at line 341 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 62 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/JFCGraphFrame.java

			int returnVal = fc.showSaveDialog(JFCGraphFrame.this);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			try {
				ImageIO.write(graphImage, "png", saveFile);
			}
			catch (IOException e) {
				e.printStackTrace();
			}
		}
	};
	
	/**
	 * Contains code to save graph as a csv file
	 */
	private ActionListener cvsListener=new ActionListener() {
	  	public void actionPerformed(ActionEvent arg0) {
	  		XYDataset graphData = graph.getXYPlot().getDataset();
=====================================================================
Found a 9 line (66 tokens) duplication in the following files: 
Starting at line 61 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryFileBrowser.java
Starting at line 52 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/FileBrowser.java

      try {
        File f=getSelectedFile();
        if(!f.getName().endsWith("."+ext)) f=new File(f.getCanonicalPath()+"."+ext); // force extension
        if (f.exists() && 
            JOptionPane.showConfirmDialog(
              this,
              f.getCanonicalPath()+"\nDo you want to overwrite this file?"
            )!=JOptionPane.YES_OPTION
           ) return null;
=====================================================================
Found a 21 line (66 tokens) duplication in the following files: 
Starting at line 204 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 62 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/JFCGraphFrame.java

			int returnVal = fc.showSaveDialog(JFCGraphFrame.this);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			try {
				ImageIO.write(graphImage, "png", saveFile);
			}
			catch (IOException e) {
				e.printStackTrace();
			}
		}
	};
	
	/**
	 * Contains code to save graph as a csv file
	 */
	private ActionListener cvsListener=new ActionListener() {
	  	public void actionPerformed(ActionEvent arg0) {
	  		XYDataset graphData = graph.getXYPlot().getDataset();
=====================================================================
Found a 15 line (66 tokens) duplication in the following files: 
Starting at line 76 of /usr/local/git/PipeCoursework/src/pipe/server/JobStatusUpdater.java
Starting at line 170 of /usr/local/git/PipeCoursework/src/pipe/server/JobStatusChecker.java

			writeToLog(ServerAction.getStackTrace(e));
		}
	}

	public void writeToLog(final String logEntry)
	{
		final String newline = System.getProperty("line.separator");
		try
		{
			BufferedWriter file = new BufferedWriter(new FileWriter(this.myLogPath, true));
			file.write(getCurrentDateAndTime() + " - " + logEntry + newline);
			file.close();
		}
		catch (IOException e)
		{
=====================================================================
Found a 10 line (65 tokens) duplication in the following files: 
Starting at line 764 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 821 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

		    if((node.highlight&DELETION_MASK) == DELETION_MASK) {
			g2d.setPaint(deletionStyle.line_color);
			if(GrappaStyle.defaultStroke != deletionStyle.stroke) {
			    g2d.setStroke(deletionStyle.stroke);
			    grappaNexus.draw(g2d);
			    g2d.setStroke(GrappaStyle.defaultStroke);
			} else {
			    grappaNexus.draw(g2d);
			}
		    } else if((node.highlight&SELECTION_MASK) == SELECTION_MASK) {
=====================================================================
Found a 7 line (65 tokens) duplication in the following files: 
Starting at line 604 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 388 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	if(crntAttr == null) {
	    if(value == null) {
		return null;
	    } else if(value instanceof String && ((String)value).trim().length() == 0 && Attribute.attributeType(getType(),name) != STRING_TYPE) {
		return null;
	    }
	    attributes.put(name,(crntAttr = new Attribute(getType(),name,value)));
=====================================================================
Found a 7 line (65 tokens) duplication in the following files: 
Starting at line 555 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 683 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

   public Matrix arrayLeftDivide (Matrix B) {
      checkMatrixDimensions(B);
      Matrix X = new Matrix(m,n);
      double[][] C = X.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            C[i][j] = B.A[i][j] / A[i][j];
=====================================================================
Found a 9 line (65 tokens) duplication in the following files: 
Starting at line 59 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ResultNode.java
Starting at line 122 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java

		ArrayList<String> requiredNodeTypes = new ArrayList<String>();
		requiredNodeTypes.add(QueryConstants.DENS_TYPE);
		requiredNodeTypes.add(QueryConstants.DIST_TYPE);
		requiredNodeTypes.add(QueryConstants.STATES_TYPE);
		requiredNodeTypes.add(QueryConstants.ACTIONS_TYPE);
		requiredNodeTypes.add(QueryConstants.NUM_TYPE);
		requiredNodeTypes.add(QueryConstants.RANGE_TYPE);
		requiredNodeTypes.add(QueryConstants.BOOL_TYPE);
		requiredNodeTypes.add(QueryConstants.FUNC_TYPE);
=====================================================================
Found a 19 line (64 tokens) duplication in the following files: 
Starting at line 2245 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1276 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                        if(bmod==0.0D){
                                cc=amod;
                        }
                        else{
                                if(amod>=bmod){
                                        ratio=bmod/amod;
                                        cc=amod*Math.sqrt(1.0 + ratio*ratio);
                                }
                                else{
                                        ratio=amod/bmod;
                                        cc=bmod*Math.sqrt(1.0 + ratio*ratio);
                                }
                        }
                }
                return cc;
        }

        // Exponential of a complex number
        public static Complex exp(Complex aa){
=====================================================================
Found a 6 line (64 tokens) duplication in the following files: 
Starting at line 883 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 900 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

   public static Matrix identity (int m, int n) {
      Matrix A = new Matrix(m,n);
      double[][] X = A.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            X[i][j] = (i == j ? 1.0 : 0.0);
=====================================================================
Found a 10 line (64 tokens) duplication in the following files: 
Starting at line 32 of /usr/local/git/PipeCoursework/src/pipe/modules/matrices/Matrices.java
Starting at line 50 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

  public void run(DataLayer pnmlData) {
    JDialog guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
    
    // 1 Set layout
    Container contentPane=guiDialog.getContentPane();
    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
    
    // 2 Add file browser
    contentPane.add(sourceFilePanel    =new PetriNetChooserPanel("Source net",pnmlData));
    contentPane.add(comparisonFilePanel=new PetriNetChooserPanel("Comparison net",null));
=====================================================================
Found a 19 line (64 tokens) duplication in the following files: 
Starting at line 232 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java
Starting at line 272 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

	    	optionalArcs.add(arc);
	    	
	    	// update and draw onto respective canvas
	    	if (MacroManager.getEditor() == null) {
	    		// not in macro creation mode, so update node in QueryData
	    		QueryManager.getData().updateNode(this);
	    		// get it to draw on the canvas
	        	QueryManager.getView().addNewPerformanceTreeObject(arc);
	    	}
	    	else {
	    		// we're in macro creation mode, so update node in MacroEditor
	    		MacroManager.getEditor().updateNode(this);
	    		// get it to draw on the canvas
	    		MacroManager.getView().addNewMacroObject(arc);
	    	}

			// Update coordinates for next arc
			arcEndPointX += spacing;
		}
=====================================================================
Found a 10 line (64 tokens) duplication in the following files: 
Starting at line 35 of /usr/local/git/PipeCoursework/src/pipe/modules/stateSpace/StateSpace.java
Starting at line 50 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

  public void run(DataLayer pnmlData) {
    JDialog guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
    
    // 1 Set layout
    Container contentPane=guiDialog.getContentPane();
    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
    
    // 2 Add file browser
    contentPane.add(sourceFilePanel    =new PetriNetChooserPanel("Source net",pnmlData));
    contentPane.add(comparisonFilePanel=new PetriNetChooserPanel("Comparison net",null));
=====================================================================
Found a 12 line (64 tokens) duplication in the following files: 
Starting at line 93 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 79 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/SteadyState.java

  	tabbedPane = new JTabbedPane();

  	
    // Build interface
    guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
       
    Container contentPane=guiDialog.getContentPane();
    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
    
    // 1 Set layout
  	JPanel setupPanel = new JPanel();
    setupPanel.setLayout(new BoxLayout(setupPanel,BoxLayout.PAGE_AXIS));
=====================================================================
Found a 10 line (63 tokens) duplication in the following files: 
Starting at line 1175 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 1318 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

	   textArea != null && !intersects && !clearText && drawText
	   &&
	   (
	    (element.isNode() && element.getGraph().getShowNodeLabels())
	    ||
	    (element.isEdge() && element.getGraph().getShowEdgeLabels())
	    ||
	    (element.isSubgraph() && element.getGraph().getShowSubgraphLabels())
	    )
	   ) {
=====================================================================
Found a 10 line (63 tokens) duplication in the following files: 
Starting at line 1313 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1322 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          case 19: // stmt ::= attrStmt optSemi 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(14/*stmt*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // stmtList ::= stmt 
=====================================================================
Found a 10 line (63 tokens) duplication in the following files: 
Starting at line 1280 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1289 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          case 22: // simple ::= nodeList 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(19/*simple*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // compound ::= simple rCompound optAttr 
=====================================================================
Found a 10 line (63 tokens) duplication in the following files: 
Starting at line 974 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 983 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          case 48: // attrItem ::= attrAssignment 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(28/*attrItem*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // attrDefs ::= attrDefs optSeparator attrItem 
=====================================================================
Found a 10 line (63 tokens) duplication in the following files: 
Starting at line 831 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 840 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          case 60: // optSeparator ::= SEMI 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(17/*optSeparator*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // optSemi ::= 
=====================================================================
Found a 20 line (63 tokens) duplication in the following files: 
Starting at line 476 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 495 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 514 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 533 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 552 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 571 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 590 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static int indexOf(char[] array, char value){
            int index = -1;
            boolean test = true;
            int counter = 0;
            while(test){
                if(array[counter]==value){
                    index = counter;
                    test = false;
                }
                else{
                    counter++;
                    if(counter>=array.length)test = false;
                }
            }
            return index;
        }

        // finds the index of the element equal to a given value in an array of Strings
        // returns -1 if none found
        public static int indexOf(String[] array, String value){
=====================================================================
Found a 5 line (63 tokens) duplication in the following files: 
Starting at line 189 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 557 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      Matrix X = new Matrix(m,n);
      double[][] C = X.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            C[i][j] = A[i][j] + B.A[i][j];
=====================================================================
Found a 15 line (63 tokens) duplication in the following files: 
Starting at line 295 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 374 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

								if(pprime > epsilon){
									vanishingStates.push(new VanishingState(vprime,(double)pprime));
								}
							}
						}
					} 
					if(attempts==MAX_TRIES){
						try {
							outputFile.close();
						} catch (IOException e1) {
							System.err.println("Could not close intermediate file.");
						}
						throw new TimelessTrapException();
					}
				}
=====================================================================
Found a 12 line (63 tokens) duplication in the following files: 
Starting at line 183 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 332 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

			if(tagged)modString += ", " + tagPlace;		
				
			modString += "}\n";
			modString += "\t}\n\n";
		}
	  
		private void initial() {
			modString += "\t\\initial{\n";			
			modString += "\t\t";
			for(int i=0; i<places.length; i++) {
				modString += places[i].getId()+" = " + places[i].getCurrentMarking()+"; ";
			}
=====================================================================
Found a 12 line (63 tokens) duplication in the following files: 
Starting at line 123 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 243 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

			}
		}

		
		private void transitionMeasures() {
			for(int i=0; i<transitions.length; i++) {
				
				Iterator arcsTo = transitions[i]. getConnectToIterator();
				boolean taggedArc = false;
				
			  	while(arcsTo.hasNext())			  		
			  		if(  ((Arc)arcsTo.next()).isTagged() )
=====================================================================
Found a 18 line (63 tokens) duplication in the following files: 
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/ValueNode.java
Starting at line 148 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

		QueryView queryView = QueryManager.getView();
		if (queryView != null) {
			if (!QueryManager.isEvaluatingQuery()) {
				// If this is the first time the node label is being added then 
				// the remove operation will have no affect. However, for subsequent
				// updates to the label, the remove will prevent it from 
				// being added more than once.	
				queryView.remove(nodeLabel);
				queryView.add(nodeLabel);
			}
			else {
				// we are evaluating a query so the label needs to be put onto the 
				// ProgressView
				QueryManager.getProgressView().remove(nodeLabel);
				QueryManager.getProgressView().add(nodeLabel);
			}
	  	}
	}
=====================================================================
Found a 10 line (62 tokens) duplication in the following files: 
Starting at line 717 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1539 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

	public int rowWithNegativeElement()
	{
		final int m = this.getRowDimension(), n = this.getColumnDimension();
		final int h = -1;

		for (int i = 0; i < m; i++)
		{
			for (int j = 0; j < n; j++)
			{
				if (this.get(i, j) < 0)
=====================================================================
Found a 12 line (62 tokens) duplication in the following files: 
Starting at line 29 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ProgressBarHTMLPane.java
Starting at line 22 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/HTMLPane.java

	public HTMLPane(String title)
	{
		super(new BorderLayout());
	
	    results=new JEditorPane();
	    results.setEditable(false);
	  
	    results.setContentType("text/html");
	
	    JScrollPane scroller=new JScrollPane(results);
	    scroller.setPreferredSize(new Dimension(400,450));
	    scroller.setBorder(new BevelBorder(BevelBorder.LOWERED));
=====================================================================
Found a 12 line (62 tokens) duplication in the following files: 
Starting at line 1101 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 459 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java

							throw new QueryException(errormsg);
						}
					}

					if (node instanceof OperationNode) {
						// check that all required arcs have some node assigned to them
						// Value nodes have no outgoing arcs, so don't worry about them
						Collection<String> outgoingArcIDs = ((OperationNode)node).getOutgoingArcIDs();
						Iterator<String> j = outgoingArcIDs.iterator();
						while (j.hasNext()) {
							String outgoingArcID = j.next();
							PerformanceTreeArc outgoingArc = getData().getArc(outgoingArcID);
=====================================================================
Found a 8 line (62 tokens) duplication in the following files: 
Starting at line 84 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/StatesNode.java
Starting at line 95 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/StatesNode.java

			else {		
				if (MacroManager.getEditor() == null) 
					roleForParentNode = QueryManager.getData().getArc(getIncomingArcID()).getArcLabel();
				else
					roleForParentNode = MacroManager.getEditor().getArc(getIncomingArcID()).getArcLabel();
				
				if (getStateLabel() != null)
					description += QueryManager.addColouring("the set of "+roleForParentNode+" identified by label '"+getStateLabel()+"'");
=====================================================================
Found a 9 line (62 tokens) duplication in the following files: 
Starting at line 586 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 108 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

			NodeList ptmlElements = macroDocument.getDocumentElement().getChildNodes();
			for (int i = 0; i < ptmlElements.getLength(); i++)
			{
				Node ptmlNode = ptmlElements.item(i);
				if (ptmlNode instanceof Element)
				{
					Element ptmlElement = (Element) ptmlNode;
					if ("macro".equals(ptmlElement.getNodeName()))
					{
=====================================================================
Found a 9 line (62 tokens) duplication in the following files: 
Starting at line 503 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java
Starting at line 519 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java

			}
			
			//Now go back though file and fill sparse matrix
			inputBuf.position((int)rgheader.getOffsetToTransitions());
			for(int record = 0; record < numtransitions; record++){
				current.read(inputBuf);
				if(current.getFromState() != current.getToState()){
					row = current.getFromState();
					column = current.getToState();
=====================================================================
Found a 12 line (62 tokens) duplication in the following files: 
Starting at line 29 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ProgressBarHTMLPane.java
Starting at line 22 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/HTMLPane.java

	public HTMLPane(String title)
	{
		super(new BorderLayout());
	
	    results=new JEditorPane();
	    results.setEditable(false);
	  
	    results.setContentType("text/html");
	
	    JScrollPane scroller=new JScrollPane(results);
	    scroller.setPreferredSize(new Dimension(400,450));
	    scroller.setBorder(new BevelBorder(BevelBorder.LOWERED));
=====================================================================
Found a 24 line (62 tokens) duplication in the following files: 
Starting at line 34 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/Negation.java
Starting at line 58 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/DisCon.java

			throw new InvalidNodeAnalyserException("Children of Discon not Evaluated yet");
		}
	}

	@Override
	protected NodeAnalyser checkChildValid(final NodeAnalyser child) throws InvalidNodeAnalyserException
	{
		switch (child.getType())
		{
			case ININTERVAL :
			case DISCON :
			case ARITHCOMP :
			case NEGATION :
			case BOOL :
			case MACRO :
				return child;

			default :
				throw new InvalidNodeAnalyserException(child.getType() +
														" doesn't return type bool node, Can't create range node");
		}
	}

}
=====================================================================
Found a 10 line (61 tokens) duplication in the following files: 
Starting at line 1086 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 1124 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

    public void mouseDragged(MouseEvent mev) {
	if(inverseTransform == null || grappaListener == null || inMenu) return;

	int modifiers = mev.getModifiers();

	Point2D pt = inverseTransform.transform(mev.getPoint(),null);

	GrappaPoint gpt = new GrappaPoint(pt.getX(), pt.getY());

	grappaListener.grappaDragged(subgraph, gpt, modifiers, pressedElement, pressedPoint, pressedModifiers, outline, this);
=====================================================================
Found a 10 line (61 tokens) duplication in the following files: 
Starting at line 773 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 830 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

		    } else if((node.highlight&SELECTION_MASK) == SELECTION_MASK) {
			g2d.setPaint(selectionStyle.line_color);
			if(GrappaStyle.defaultStroke != selectionStyle.stroke) {
			    g2d.setStroke(selectionStyle.stroke);
			    grappaNexus.draw(g2d);
			    g2d.setStroke(GrappaStyle.defaultStroke);
			} else {
			    grappaNexus.draw(g2d);
			}
		    } else {
=====================================================================
Found a 9 line (61 tokens) duplication in the following files: 
Starting at line 1258 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1272 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

		parser.report_error ("attempt to create a directed edge in a non-directed graph",null);
	      }
	    
              CUP$Parser$result = new java_cup.runtime.Symbol(31/*edge_op*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // simple ::= subgraph 
=====================================================================
Found a 7 line (61 tokens) duplication in the following files: 
Starting at line 1461 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1471 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static Complex sec(Complex aa ){
                Complex c = new Complex();
                double a = aa.real;
                double b = aa.imag;
                c.real= Math.cos(a)*Fmath.cosh(b);
                c.imag= -Math.sin(a)*Fmath.sinh(b);
                return c.inverse();
=====================================================================
Found a 8 line (61 tokens) duplication in the following files: 
Starting at line 1325 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1398 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

	public PNMatrix plusEquals(final PNMatrix B)
	{
		this.checkMatrixDimensions(B);
		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
				this.A[i][j] = this.A[i][j] + B.A[i][j];
=====================================================================
Found a 18 line (61 tokens) duplication in the following files: 
Starting at line 54 of /usr/local/git/PipeCoursework/src/pipe/gui/EditTaggedRateAction.java
Starting at line 60 of /usr/local/git/PipeCoursework/src/pipe/gui/EditRateAction.java

				selected.setRate(newRate);
			}
		}
		catch( NumberFormatException nfe )
		{
			JOptionPane.showMessageDialog(contentPane,"Please enter a real number.",
        		"Invalid entry", JOptionPane.ERROR_MESSAGE);
		}
		catch (Exception exc) 
		{
			System.err.println(exc.toString());
			JOptionPane.showMessageDialog(contentPane,
				"Please enter a real number.",
        		"Invalid entry", JOptionPane.ERROR_MESSAGE);
		}
	}		// end of method actionPerformed

}		// end of class EditRateAction
=====================================================================
Found a 8 line (61 tokens) duplication in the following files: 
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java
Starting at line 208 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

		Component netObj[] = edit_window.getComponents();
		// Get all the objects in the current window
		for (int i=0; i<netObj.length; i++)
		{
			if ((netObj[i] instanceof Arc)
			&& ((PetriNetObject)netObj[i]).isSelectable())
			{
				Arc thisArc = (Arc)netObj[i];
=====================================================================
Found a 1 line (61 tokens) duplication in the following files: 
Starting at line 299 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 310 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

           (!compareName      || (source[i].getSource().getName().equals(comparison[j].getSource().getName()) && source[i].getTarget().getName().equals(comparison[j].getTarget().getName()))) &&
=====================================================================
Found a 7 line (61 tokens) duplication in the following files: 
Starting at line 606 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 628 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

							int index=1;
				  		
							while(index<taggedInput)
							{
								modString += " tagged_location== " + tagInputPlaceIndex[index] + 
								"? ( (double)" + rate + " -  ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[index]].getId(), i ) 
								+ "/(double)" + places[tagInputPlaceIndex[index]].getId() +") * " + rate + ") : ";
=====================================================================
Found a 11 line (61 tokens) duplication in the following files: 
Starting at line 219 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 271 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		transitionMeasures();
		modString += "}\n";		
		
	}
	
	private void tokenDistribution() {
		for(int i=0; i<places.length; i++) {
			modString += "\t\\statemeasure{Mean tokens on place " + places[i].getId() + "}{\n";
			modString += "\t\t\\estimator{mean variance distribution}\n";
			modString += "\t\t\\expression{" + places[i].getId() + "}\n";
			modString += "\t}\n";
=====================================================================
Found a 7 line (61 tokens) duplication in the following files: 
Starting at line 443 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 465 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

							int index=1;
				  		
							while(index<taggedInput)
							{
								modString += " tagged_location== " + tagInputPlaceIndex[index] + 
								"? ( (double)" + rate + " -  ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[index]].getId(), i ) 
								+ "/(double)" + places[tagInputPlaceIndex[index]].getId() +") * " + rate + ") : ";
=====================================================================
Found a 12 line (61 tokens) duplication in the following files: 
Starting at line 112 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 219 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

			tokenDistribution();
			modString += "}\n";		
			
		}
		
		private void tokenDistribution() {
			for(int i=0; i<places.length; i++) {
				
				modString += "\t\\statemeasure{Mean tokens on place " + places[i].getId() + "}{\n";
				modString += "\t\t\\estimator{mean variance distribution}\n";
				modString += "\t\t\\expression{" + places[i].getId() + "}\n";
				modString += "\t}\n";
=====================================================================
Found a 17 line (61 tokens) duplication in the following files: 
Starting at line 916 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 641 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

			int result=JOptionPane.showConfirmDialog(GuiFrame.this,"Current file has changed. Save current file?",
					"Confirm Save Current File",
					JOptionPane.YES_NO_CANCEL_OPTION,
					JOptionPane.WARNING_MESSAGE);
			switch(result) {
			case JOptionPane.YES_OPTION: saveOperation(false); break;
			case JOptionPane.CLOSED_OPTION:
			case JOptionPane.CANCEL_OPTION:
				return false;
			}
		}
		return true;
	}

	//On application close,loop through all tabs and check if they have been saved
	public boolean checkForSaveAll(){
		for(int counter = 0;counter < appTab.getTabCount();counter++){
=====================================================================
Found a 14 line (61 tokens) duplication in the following files: 
Starting at line 29 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryStatusBar.java
Starting at line 22 of /usr/local/git/PipeCoursework/src/pipe/gui/StatusBar.java

  public StatusBar(){
    super();
    label = new JLabel(" ");
    this.setLayout(new BorderLayout(0,0));
    this.add(label);
  }

  public void changeText(String newText){
    label.setText(newText);
  }

  public void changeText(int type ){
    switch(type){
      case PLACE:
=====================================================================
Found a 21 line (61 tokens) duplication in the following files: 
Starting at line 94 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 155 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

		setRequired(arcRequired);
		if (MacroManager.getEditor() == null)
		{
			if (QueryManager.getEditor() != null)
			{
				updateArcPosition();
				updateArcPosition();
			}
		}
		else
		{
			updateArcPosition();
			updateArcPosition();
		}
	}

	public PerformanceTreeArc(	final double startPositionXInput,
								final double startPositionYInput,
								final double endPositionXInput,
								final double endPositionYInput,
								final String labelInput,
=====================================================================
Found a 8 line (61 tokens) duplication in the following files: 
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateStatesNode.java
Starting at line 65 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

					Iterator<PerformanceTreeNode> i = children.iterator();
					while (i.hasNext()) {
						PerformanceTreeNode child = i.next();
						QueryManager.colourUp();
						description += child.printTextualRepresentation();
						QueryManager.colourDown();
						if (i.hasNext()) 
							description += QueryManager.addColouring(op);
=====================================================================
Found a 9 line (61 tokens) duplication in the following files: 
Starting at line 187 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/PerformanceTreeExporter.java
Starting at line 44 of /usr/local/git/PipeCoursework/src/pipe/gui/Export.java

  public static void toPostScript(Object g,String filename) throws PrintException, IOException {
    // Input document type
    DocFlavor flavour = DocFlavor.SERVICE_FORMATTED.PRINTABLE;
    // Output stream MIME type
    String psMimeType = DocFlavor.BYTE_ARRAY.POSTSCRIPT.getMimeType();

    // Look up a print service factory that can handle this job
    StreamPrintServiceFactory[] factories=StreamPrintServiceFactory.lookupStreamPrintServiceFactories(flavour, psMimeType);
    if (factories.length == 0) throw new RuntimeException("No suitable factory found for export to PS");
=====================================================================
Found a 15 line (61 tokens) duplication in the following files: 
Starting at line 119 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 137 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

			MacroWriter.serialiseStateAndActionLabels(macroElement, ptDOM);

			ptDOM.normalize();

			// Create Transformer with XSL Source File
			xsltSource = new StreamSource(Thread.currentThread()
												.getContextClassLoader()
												.getResourceAsStream("pipe" +
																		System.getProperty("file.separator") +
																		"modules" +
																		System.getProperty("file.separator") +
																		"queryeditor" +
																		System.getProperty("file.separator") +
																		"io" +
																		System.getProperty("file.separator") +
=====================================================================
Found a 15 line (61 tokens) duplication in the following files: 
Starting at line 54 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 110 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java

		String filename = "modFile" + clientNo + ".mod";
		file = path + System.getProperty("file.separator") + filename;

		
		try
		{			
			// Create output mod file
			modFile = new File(file);
			FileWriter modFileWriter = new FileWriter(modFile); 
			
			System.out.print("Creating mod file " + file + ".. ");
			
			if (places.length > 0)
			{
				model();
=====================================================================
Found a 11 line (60 tokens) duplication in the following files: 
Starting at line 1535 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1557 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

			enm = ((Edge)elem).getTail().inEdgeElements();
			while(enm.hasMoreElements()) {
			    edge = (Edge)(enm.nextElement());
			    if (edge.goesReverse()) {
				if (edge.visastamp != stamp) {
				    input.addElement(edge);
				    edge.visastamp = stamp;
				}
			    }
			}
		    }
=====================================================================
Found a 7 line (60 tokens) duplication in the following files: 
Starting at line 1451 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1481 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static Complex csc(Complex aa ){
                Complex c = new Complex();
                double a = aa.real;
                double b = aa.imag;
                c.real = Math.sin(a)*Fmath.cosh(b);
                c.imag = Math.cos(a)*Fmath.sinh(b);
                return c.inverse();
=====================================================================
Found a 11 line (60 tokens) duplication in the following files: 
Starting at line 134 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 280 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

    results.add("Comparison arc");
    results.add("Comparison");
    
    for(i = 0 ; i < source.length ; i++) {
      k = -1;
      // Find matching Arc with a match for both source and dest
      // this is pretty horrible
      for(j = 0 ; j < comparison.length; j++) {
        if(comparison[j] != null && 
               source[i] != null && 
               source[i].getSource().getId() != null && 
=====================================================================
Found a 13 line (60 tokens) duplication in the following files: 
Starting at line 185 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 224 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		modString += "}\n";
		modString += "\t}\n\n";
	}
	
	private void initial() {
		modString += "\t\\initial{\n";
		
		modString += "\t\t";
		for(int i=0; i<places.length; i++) {
			modString += places[i].getId()+" = " + places[i].getCurrentMarking()+"; ";
		}
		
		modString += "\n\t}\n";		
=====================================================================
Found a 7 line (60 tokens) duplication in the following files: 
Starting at line 92 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 389 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

			for(int i = 0; i < size; i++) {
				content.append(graphData.getXValue(0, i));
				content.append(",");
				content.append(graphData.getYValue(0, i));
				content.append(",\n");				
			}
	  		String content1 = content.toString();
=====================================================================
Found a 13 line (60 tokens) duplication in the following files: 
Starting at line 259 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 749 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

			final ArcAngleCompare thisArc = (ArcAngleCompare) arcIterator.next();
			if (thisArc.arc == arc)
			{
				thisArc.calcAngle();
				match = true;
				break;
			}
		}
		if (!match)
		{
			this.arcAngleList.add(new ArcAngleCompare(arc, this));
		}
		Collections.sort(this.arcAngleList);
=====================================================================
Found a 15 line (60 tokens) duplication in the following files: 
Starting at line 1194 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 1041 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

			dispose();
		}
	}

	class FileAction extends QueryAction
	{

		FileAction(final String name, final String tooltip, final String keystroke) {
			super(name, tooltip, keystroke);
		}

		public void actionPerformed(final ActionEvent e)
		{
			String actionName = (String) getValue(Action.NAME);
			if (actionName.equals("Save"))
=====================================================================
Found a 15 line (60 tokens) duplication in the following files: 
Starting at line 217 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java
Starting at line 257 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

			arc.setRequired(false);
			
			// add the arc to the respective data structure
	    	if (MacroManager.getEditor() == null) {
	    		// draw arc onto QueryView (since we're not in macro creation mode
	    		arc = (PerformanceTreeArc)QueryManager.getData().addPerformanceTreeObject(arc);
	    	}
	    	else {
	    		// we're in macro creation mode, so draw the arc onto MacroView
	    		arc = (PerformanceTreeArc)MacroManager.getEditor().addPerformanceTreeObject(arc);	
	    	}
	    	
	    	// update node to indicate that it has an additional arc
	    	String arcID = arc.getId();
	    	outgoingArcIDs.add(arcID);
=====================================================================
Found a 16 line (60 tokens) duplication in the following files: 
Starting at line 87 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 81 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java

		setLayout(null);
		setOpaque(true);
		setDoubleBuffered(true);
		setAutoscrolls(true);
		setBackground(QueryConstants.ELEMENT_FILL_COLOUR);
		this.zoomControl = new PerformanceTreeZoomController(100, this);
		MouseHandler handler = new MouseHandler();
		addMouseListener(handler);
		addMouseMotionListener(handler);
		this.selection = new PerformanceTreeSelectionObject(this);
	}

	/**
	 * Draws an initial ResultNode onto the canvas
	 */
	public void drawResultNode()
=====================================================================
Found a 10 line (60 tokens) duplication in the following files: 
Starting at line 90 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 638 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java

					NodeList treeElements = macroElement.getChildNodes();
					for (int j = 0; j < treeElements.getLength(); j++)
					{
						Node treeNode = treeElements.item(j);
						if (treeNode instanceof Element)
						{
							Element treeElement = (Element) treeNode;
							if ("node".equals(treeElement.getNodeName()))
							{
								QueryLoader.macro = QueryLoader.createMacroNode(treeElement,
=====================================================================
Found a 9 line (60 tokens) duplication in the following files: 
Starting at line 35 of /usr/local/git/PipeCoursework/src/pipe/modules/stateSpace/StateSpace.java
Starting at line 64 of /usr/local/git/PipeCoursework/src/pipe/modules/simulation/Simulation.java

  public void run(DataLayer pnmlData) {
    JDialog guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
    
    // 1 Set layout
    Container contentPane=guiDialog.getContentPane();
    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
    
    // 2 Add file browser
    contentPane.add(sourceFilePanel    =new PetriNetChooserPanel("Source net",pnmlData));
=====================================================================
Found a 8 line (60 tokens) duplication in the following files: 
Starting at line 252 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 92 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java

															for (int i = 0; i < size; i++)
															{
																content.append(graphData.getXValue(0, i));
																content.append(",");
																content.append(graphData.getYValue(0, i));
																content.append(",\n");
															}
															String content1 = content.toString();
=====================================================================
Found a 9 line (59 tokens) duplication in the following files: 
Starting at line 307 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 419 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

			shape = new Ellipse2D.Double(pos.x, pos.y, width, height);
		    }
		    if(Peripheries != null && peripheries > 1) {
			path = new GeneralPath(shape);
			for(int i = 1; i < peripheries; i++) {
			    if(Grappa.centerPointNodes) {
				path.append
				    (
				     new Ellipse2D.Double
=====================================================================
Found a 7 line (59 tokens) duplication in the following files: 
Starting at line 288 of /usr/local/git/PipeCoursework/src/jama/LUDecomposition.java
Starting at line 172 of /usr/local/git/PipeCoursework/src/jama/CholeskyDecomposition.java

      int nx = B.getColumnDimension();

      // Solve L*Y = B;
      for (int k = 0; k < n; k++) {
         for (int i = k+1; i < n; i++) {
            for (int j = 0; j < nx; j++) {
               X[i][j] -= X[k][j]*L[i][k];
=====================================================================
Found a 6 line (59 tokens) duplication in the following files: 
Starting at line 188 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 539 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

   public Matrix uminus () {
      Matrix X = new Matrix(m,n);
      double[][] C = X.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            C[i][j] = -A[i][j];
=====================================================================
Found a 10 line (59 tokens) duplication in the following files: 
Starting at line 921 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 930 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

	private static void printArray (int[] array) {
		int rows = array.length;
		System.out.print("Elements as follows: ");
		for (int i = 0; i < rows; i++) {
			System.out.print(array[i] + " ");
		}
		System.out.println();
	}
	
	private static void printArray (State state) {
=====================================================================
Found a 5 line (59 tokens) duplication in the following files: 
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java
Starting at line 292 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

		for (int i=0; i<netObj.length; i++) {
			// Handle Arcs and Arc Points
			if ((netObj[i] instanceof Arc) && ((PetriNetObject)netObj[i]).isSelectable())	{
				Arc thisArc = (Arc)netObj[i];
				ArcPath thisArcPath = thisArc.getArcPath();
=====================================================================
Found a 2 line (59 tokens) duplication in the following files: 
Starting at line 310 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 325 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

            if(source[i].getSource().getName().equals(comparison[j].getSource().getName()) &&
                source[i].getTarget().getName().equals(comparison[j].getTarget().getName()) ) s+=" (match)";
=====================================================================
Found a 2 line (59 tokens) duplication in the following files: 
Starting at line 309 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 317 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

            if(source[i].getSource().getId().equals(comparison[j].getSource().getId()) &&
               source[i].getTarget().getId().equals(comparison[j].getTarget().getId()) ) s+=" (match)";
=====================================================================
Found a 2 line (59 tokens) duplication in the following files: 
Starting at line 300 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 325 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

            if(source[i].getSource().getName().equals(comparison[j].getSource().getName()) &&
                source[i].getTarget().getName().equals(comparison[j].getTarget().getName()) ) s+=" (match)";
=====================================================================
Found a 1 line (59 tokens) duplication in the following files: 
Starting at line 299 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 309 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

        if((!compareID        || (source[i].getSource().getId().equals(comparison[j].getSource().getId()) && source[i].getTarget().getId().equals(comparison[j].getTarget().getId()))) &&
=====================================================================
Found a 9 line (59 tokens) duplication in the following files: 
Starting at line 673 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 696 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

				  			+ "/(double)" + places[tagInputPlaceIndex[0]].getId() +") * " + rate + " : ";
				  		
				  			int index=1;
				  		
				  			while(index<taggedInput)
				  			{
				  				modString += " tagged_location== " + tagInputPlaceIndex[index] + 
				  				"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[index]].getId(), i ) 
				  				+ "/(double)" + places[tagInputPlaceIndex[index]].getId() +") * " + rate + " : ";
=====================================================================
Found a 12 line (59 tokens) duplication in the following files: 
Starting at line 455 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 480 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java

			result.add(data.getID(i)+ "<A NAME= 'M" + i + "'></A>");
			for (int j=0; j<markSize; j++)
				result.add(Integer.toString(data.get(i)[j]));
		}
		
		return ResultsHTMLPane.makeTable(result.toArray(),markSize + 1,false,true,true,true);
	}
	
	//######################################################################################################################
	
	//Format throughput data nicely.
	protected String renderThroughput(DataLayer pnmlData, double[] data) {
=====================================================================
Found a 8 line (59 tokens) duplication in the following files: 
Starting at line 42 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsGraph.java
Starting at line 34 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/GraphPanelPane.java

    add(graph=new GraphPanel(),BorderLayout.CENTER);
    add(new ButtonBar("Save",saveButtonClick),BorderLayout.PAGE_END);
  }  
  
  private ActionListener saveButtonClick=new ActionListener() {
    public void actionPerformed(ActionEvent e) {
      String filename=null;
      if(CreateGui.getFile()!=null) filename=CreateGui.getFile()+" DNAmaca output.png";
=====================================================================
Found a 20 line (59 tokens) duplication in the following files: 
Starting at line 49 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java
Starting at line 44 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ConditionPlaceHandler.java

	}
	
		
	public void showDialog()
	{		
		// Create dialog
		conditionEdit = new JDialog(parent, "Add condition to " + place.getName(), true);
		
		   
		// Set layout
		Container contentPane= conditionEdit.getContentPane();
		contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
		
			
		
		// Panel for entry of place condition for the state
		JPanel mainPanel = new JPanel();
		
		// combo box for operator
		operaterCombo = new JComboBox();
=====================================================================
Found a 9 line (59 tokens) duplication in the following files: 
Starting at line 510 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 533 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

				  			+ "/(double)" + places[tagInputPlaceIndex[0]].getId() +") * " + rate + " : ";
				  		
				  			int index=1;
				  		
				  			while(index<taggedInput)
				  			{
				  				modString += " tagged_location== " + tagInputPlaceIndex[index] + 
				  				"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[index]].getId(), i ) 
				  				+ "/(double)" + places[tagInputPlaceIndex[index]].getId() +") * " + rate + " : ";
=====================================================================
Found a 10 line (59 tokens) duplication in the following files: 
Starting at line 72 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/NegationNode.java
Starting at line 89 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ArithOpNode.java

			op = QueryManager.addColouring(" raised to the power of ");
					
		ArrayList children = getChildNodes();
		if (children != null) {
			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();	
				QueryManager.colourUp();
				description += child.printTextualRepresentation();	
				QueryManager.colourDown();
=====================================================================
Found a 8 line (59 tokens) duplication in the following files: 
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 65 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

					Iterator<PerformanceTreeNode> i = children.iterator();
					while (i.hasNext()) {
						PerformanceTreeNode child = i.next();
						QueryManager.colourUp();
						description += child.printTextualRepresentation();
						QueryManager.colourDown();
						if (i.hasNext()) 
							description += QueryManager.addColouring(op);
=====================================================================
Found a 9 line (59 tokens) duplication in the following files: 
Starting at line 58 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/PerformanceTreeExporter.java
Starting at line 108 of /usr/local/git/PipeCoursework/src/pipe/gui/Export.java

      filename=CreateGui.getFile().getAbsolutePath();
      // change file extension
      int dotpos=filename.lastIndexOf('.');
      if(dotpos>filename.lastIndexOf(System.getProperty("file.separator"))) {
        // dot is for extension
        filename=filename.substring(0,dotpos+1);
        switch(format) {
        case PNG:        filename+="png"; break;
        case POSTSCRIPT: filename+="ps";  break;
=====================================================================
Found a 11 line (59 tokens) duplication in the following files: 
Starting at line 40 of /usr/local/git/PipeCoursework/src/pipe/modules/stateSpace/StateSpace.java
Starting at line 59 of /usr/local/git/PipeCoursework/src/pipe/modules/reachability/ReachabilityGraphGenerator.java

		Container contentPane=guiDialog.getContentPane();
		contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));

		// 2 Add file browser
		contentPane.add(sourceFilePanel=new PetriNetChooserPanel("Source net",pnmlData));

		// 3 Add results pane
		contentPane.add(results=new ResultsHTMLPane(pnmlData.getURI()));

		// 4 Add button's
		contentPane.add(new ButtonBar("Generate Reachability Graph", generateGraph));
=====================================================================
Found a 20 line (59 tokens) duplication in the following files: 
Starting at line 44 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 49 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

	}
	
		
	public void showDialog()
	{		
		// Create dialog
		conditionEdit = new JDialog(parent, "Add condition to " + place.getName(), true);
		
		   
		// Set layout
		Container contentPane= conditionEdit.getContentPane();
		contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
		
			
		
		// Panel for entry of place condition for the state
		JPanel mainPanel = new JPanel();
		
		// combo box for operator
		operaterCombo = new JComboBox();
=====================================================================
Found a 8 line (59 tokens) duplication in the following files: 
Starting at line 42 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsGraph.java
Starting at line 34 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/GraphPanelPane.java

    add(graph=new GraphPanel(),BorderLayout.CENTER);
    add(new ButtonBar("Save",saveButtonClick),BorderLayout.PAGE_END);
  }  
  
  private ActionListener saveButtonClick=new ActionListener() {
    public void actionPerformed(ActionEvent e) {
      String filename=null;
      if(CreateGui.getFile()!=null) filename=CreateGui.getFile()+" DNAmaca output.png";
=====================================================================
Found a 27 line (59 tokens) duplication in the following files: 
Starting at line 75 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 100 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

			modFileWriter.write(perfString);
			modFileWriter.close();
			System.out.println("Done");			
		}
		
		catch (IOException e3)
		{
			System.out.println("Could not write to file! " + file);
			e3.printStackTrace();
		}	
				
	}
	
	/**
	 * This method generates a mod file at the location specified by the path.
	 * The type of mod file produced is aimed toward Passage Time Analysis as it 
	 * allows the specification of passage time parameters.  
	 * 
	 * @param splaces Set of places in the PNML data
	 * @param stransitions Set of transitions in the PNML data
	 * @param sourceStateGroups The conditions for valid source states
	 * @param destinationStateGroups The conditions for valid target states
	 * @param timeSettings The start /end / time step for the passage
	 * @param path Path to directory to store resulting mod file
	 * @param clientNo the unique client number
	 */
	public TransMod(SimplePlaces splaces, SimpleTransitions stransitions, ArrayList<StateGroup> sourceStateGroups, ArrayList<StateGroup> destinationStateGroups, AnalysisSetting timeSettings, String path, int clientNo)
=====================================================================
Found a 8 line (58 tokens) duplication in the following files: 
Starting at line 1452 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1466 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          startGraph(name,true,false);
        
              CUP$Parser$result = new java_cup.runtime.Symbol(10/*hdr*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // hdr ::= optStrict graphType optGraphName 
=====================================================================
Found a 8 line (58 tokens) duplication in the following files: 
Starting at line 1405 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1416 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

                RESULT = new Boolean(false);
              
              CUP$Parser$result = new java_cup.runtime.Symbol(2/*graphType*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // optStrict ::= 
=====================================================================
Found a 8 line (58 tokens) duplication in the following files: 
Starting at line 1087 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1101 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1115 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

               RESULT = new Integer(Grappa.SUBGRAPH);
             
              CUP$Parser$result = new java_cup.runtime.Symbol(4/*attrType*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // attrStmt ::= graphAttrDefs 
=====================================================================
Found a 6 line (58 tokens) duplication in the following files: 
Starting at line 188 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 715 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

   public Matrix times (double s) {
      Matrix X = new Matrix(m,n);
      double[][] C = X.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            C[i][j] = s*A[i][j];
=====================================================================
Found a 14 line (58 tokens) duplication in the following files: 
Starting at line 575 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 1177 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java

	      for (int i = 0; i < handle_size; i++)
		{
		  stack.pop();
		  tos--;
		}
	      
	      /* look up the state to go to from the one popped back to */
	      act = get_reduce(((Symbol)stack.peek()).parse_state, lhs_sym_num);

	      /* shift to that state */
	      lhs_sym.parse_state = act;
	      lhs_sym.used_by_parser = true;
	      stack.push(lhs_sym);
	      tos++;
=====================================================================
Found a 12 line (58 tokens) duplication in the following files: 
Starting at line 169 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 334 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

            s+=": Source = \"" + source[i].getWeight() + "\"  Comparison  = \"" + comparison[j].getWeight() + "\"";
          }
        }
        source[i]=null;       // null ones that have been done
        comparison[j]=null;
        results.add(s);
      }
    }
    
    // Fill in unmatched source arcs
    for(i=0;i<source.length;i++) if(source[i]!= null) {
      results.add(source[i].getSource().getName()+"->"+source[i].getTarget().getName());
=====================================================================
Found a 11 line (58 tokens) duplication in the following files: 
Starting at line 334 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 224 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		modString += "}\n";
		modString += "\t}\n\n";
	}
	
	private void initial() {
		modString += "\t\\initial{\n";
		
		modString += "\t\t";
		for(int i=0; i<places.length; i++) {
			modString += places[i].getId()+" = " + places[i].getCurrentMarking()+"; ";
		}
=====================================================================
Found a 21 line (58 tokens) duplication in the following files: 
Starting at line 48 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ProgressBarHTMLPane.java
Starting at line 89 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/ResultsHTMLPane.java

    this.setBorder(new TitledBorder(new EtchedBorder(),"Results"));
  }
  
  public void setText(String text) {
    results.setText("<html><head><style type=\"text/css\">" +
        "body{font-family:Arial,Helvetica,sans-serif;text-align:center;background:#ffffff}" +
        "td.colhead{font-weight:bold;text-align:center;background:#ffffff}" +
        "td.rowhead{font-weight:bold;background:#ffffff}"+
        "td.cell{text-align:center;padding:5px,0}" +
        "tr.even{background:#a0a0d0}" +
        "tr.odd{background:#c0c0f0}" +
        "td.empty{background:#ffffff}" +
        "</style></head><body>"+text+"</body></html>");
    results.setCaretPosition(0); // scroll to top
  }
  
  public String getText(){
  	return results.getText();
  }
  
  public static String makeTable(Object[] items,int cols,boolean showLines,boolean doShading,boolean columnHeaders,boolean rowHeaders) {
=====================================================================
Found a 11 line (58 tokens) duplication in the following files: 
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryAction.java
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiAction.java

				).getResource(CreateGui.imgPath + name + ".png");
		if (iconURL != null){
			putValue(SMALL_ICON, new ImageIcon(iconURL));
		}
		
		if(tooltip != null)
			putValue(SHORT_DESCRIPTION, tooltip);
		
		if(keystroke != null)
			putValue(ACCELERATOR_KEY,KeyStroke.getKeyStroke(keystroke));
		putValue("selected",new Boolean(false));
=====================================================================
Found a 20 line (58 tokens) duplication in the following files: 
Starting at line 145 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java
Starting at line 542 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java

	    contentPane.add(okButtonPanel);
	    
	    // take care of popup closing
	    popupDialog.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
	    popupDialog.addWindowListener(new WindowAdapter() {
	    	    public void windowClosing(WindowEvent we) {
	    	    	resetMacroManager();
			    	popupDialog.dispose();
	    	    }
	    	});
	    
	    // load in the latest info
	    update();
	    
	    // show popup
	    popupDialog.pack();
	    popupDialog.setLocationRelativeTo(null);
	    popupDialog.setVisible(true);    

	}
=====================================================================
Found a 18 line (58 tokens) duplication in the following files: 
Starting at line 356 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 120 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

	public int print(Graphics g, PageFormat pageFormat, int pageIndex) throws PrinterException {
		if(pageIndex>0)
			return Printable.NO_SUCH_PAGE;
		Graphics2D g2D = (Graphics2D) g;
		//Move origin to page printing area corner
		g2D.translate(pageFormat.getImageableX(), pageFormat.getImageableY());
		g2D.scale(0.5,0.5);
		print(g2D); // Draw the net

		return Printable.PAGE_EXISTS;
	}

	/**
	 * This method is called whenever the frame is moved, resized etc.
	 * It iterates over the existing petrinet objects and repaints them.
	 * TODO: write a better description than this since it is now totally not happening.
	 */
	public void paintComponent(Graphics g) {
=====================================================================
Found a 9 line (58 tokens) duplication in the following files: 
Starting at line 88 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 73 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/NegationNode.java

		ArrayList children = getChildNodes();
		if (children != null) {
			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();	
				// print out child's textual representation
				QueryManager.colourUp();
				description += child.printTextualRepresentation();
				QueryManager.colourDown();
=====================================================================
Found a 5 line (58 tokens) duplication in the following files: 
Starting at line 76 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/ValueNode.java
Starting at line 141 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

		int labelWidth = g2d.getFontMetrics().stringWidth(getNodeLabel());
		double nodeLabelPositionX = positionX + (componentWidth / 2) + (labelWidth / 2);
		double nodeLabelPositionY = positionY + componentHeight + 20;
		nodeLabel.setPosition((int)nodeLabelPositionX,(int)nodeLabelPositionY);
		nodeLabel.updateSize();
=====================================================================
Found a 20 line (58 tokens) duplication in the following files: 
Starting at line 132 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 819 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java

	}

	/**
	 * This method adds a PerformanceTreeObject into the temporary storage for
	 * the macro that is being edited on the canvas (activeMacro)
	 * 
	 * @param ptObject
	 */
	public PerformanceTreeObject addPerformanceTreeObject(final PerformanceTreeObject ptObject)
	{
		if (ptObject instanceof PerformanceTreeNode)
			return addNode((PerformanceTreeNode) ptObject);
		else if (ptObject instanceof PerformanceTreeArc)
			return addArc((PerformanceTreeArc) ptObject);
		else return null;
	}

	public void removePerformanceTreeObject(final PerformanceTreeObject ptObject)
	{
		if (ptObject instanceof PerformanceTreeNode)
=====================================================================
Found a 20 line (58 tokens) duplication in the following files: 
Starting at line 279 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 273 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

				}
			}
		}
	}

	/**
	 * This method serialises the data contained within a PerformanceTreeArc. It
	 * also serialises the ArcPathPoints information
	 */
	private static void createArcElement(	final PerformanceTreeArc inputArc,
											final Element nodeElement,
											final Document document)
	{

		Element arcElement = document.createElement("arc");
		nodeElement.appendChild(arcElement);

		String arcID = inputArc.getId();
		String arcLabel = inputArc.getArcLabel();
		String arcSourceID = inputArc.getSource().getId();
=====================================================================
Found a 21 line (58 tokens) duplication in the following files: 
Starting at line 48 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ProgressBarHTMLPane.java
Starting at line 89 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/ResultsHTMLPane.java

    this.setBorder(new TitledBorder(new EtchedBorder(),"Results"));
  }
  
  public void setText(String text) {
    results.setText("<html><head><style type=\"text/css\">" +
        "body{font-family:Arial,Helvetica,sans-serif;text-align:center;background:#ffffff}" +
        "td.colhead{font-weight:bold;text-align:center;background:#ffffff}" +
        "td.rowhead{font-weight:bold;background:#ffffff}"+
        "td.cell{text-align:center;padding:5px,0}" +
        "tr.even{background:#a0a0d0}" +
        "tr.odd{background:#c0c0f0}" +
        "td.empty{background:#ffffff}" +
        "</style></head><body>"+text+"</body></html>");
    results.setCaretPosition(0); // scroll to top
  }
  
  public String getText(){
  	return results.getText();
  }
  
  public static String makeTable(Object[] items,int cols,boolean showLines,boolean doShading,boolean columnHeaders,boolean rowHeaders) {
=====================================================================
Found a 15 line (57 tokens) duplication in the following files: 
Starting at line 1353 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1429 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

    public void removeTypeTag(int type, String tag) {
	Attribute attr = null;
	Hashtable tags;
	switch(type) {
	case NODE:
	    attr = getNodeAttribute(TAG_ATTR);
	    break;
	case EDGE:
	    attr = getEdgeAttribute(TAG_ATTR);
	    break;
	case SUBGRAPH:
	    attr = getLocalAttribute(TAG_ATTR);
	    break;
	}
	if(attr == null) return;
=====================================================================
Found a 14 line (57 tokens) duplication in the following files: 
Starting at line 455 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 477 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

		if (this.highlighted)
		{
			g2.setPaint(Constants.ENABLED_TRANSITION_COLOUR);
		}
		else if (this.selected && !PetriNetObject.ignoreSelection)
		{
			g2.setPaint(Constants.SELECTION_LINE_COLOUR);
		}
		else
		{
			g2.setPaint(Constants.ELEMENT_LINE_COLOUR);
		}

		g2.draw(this.transition);
=====================================================================
Found a 19 line (57 tokens) duplication in the following files: 
Starting at line 35 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/HTMLPane.java
Starting at line 89 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/ResultsHTMLPane.java

    this.setBorder(new TitledBorder(new EtchedBorder(),"Results"));
  }
  
  public void setText(String text) {
    results.setText("<html><head><style type=\"text/css\">" +
        "body{font-family:Arial,Helvetica,sans-serif;text-align:center;background:#ffffff}" +
        "td.colhead{font-weight:bold;text-align:center;background:#ffffff}" +
        "td.rowhead{font-weight:bold;background:#ffffff}"+
        "td.cell{text-align:center;padding:5px,0}" +
        "tr.even{background:#a0a0d0}" +
        "tr.odd{background:#c0c0f0}" +
        "td.empty{background:#ffffff}" +
        "</style></head><body>"+text+"</body></html>");
    results.setCaretPosition(0); // scroll to top
  }
  
  public String getText(){
  	return results.getText();
  }
=====================================================================
Found a 9 line (57 tokens) duplication in the following files: 
Starting at line 427 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPNNew.java
Starting at line 491 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java

	protected String renderThroughput(DataLayer pnmlData, double[] data) {
		if((data.length)==0) return "n/a";
		int transCount = data.length;
		ArrayList result=new ArrayList();
		// add headers to table
		result.add("Transition");
		result.add("Throughput");
		DecimalFormat f=new DecimalFormat();
		f.setMaximumFractionDigits(5);
=====================================================================
Found a 12 line (57 tokens) duplication in the following files: 
Starting at line 376 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 164 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

	}
	
	public void zoom() {
		Component[] children = getComponents();
		
		for (int i = 0; i < children.length; i++){
			if (children[i] instanceof Zoomable)
				((Zoomable)children[i]).zoomUpdate();
		}
		
		validate();
	}
=====================================================================
Found a 8 line (57 tokens) duplication in the following files: 
Starting at line 385 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java
Starting at line 394 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java

		it = this.optionalArcs.iterator();
		while (it.hasNext())
		{
			outgoingArc = (PerformanceTreeArc) it.next();
			if (MacroManager.getEditor() == null)
				((QueryView) container).addNewPerformanceTreeObject(outgoingArc);
			else ((MacroView) container).addNewMacroObject(outgoingArc);
		}
=====================================================================
Found a 10 line (57 tokens) duplication in the following files: 
Starting at line 211 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 228 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

		if (inputNode instanceof ValueNode)
		{
			String nodeLabel;
			if (((ValueNode) inputNode).getNodeLabelObject() != null)
				nodeLabel = ((ValueNode) inputNode).getNodeLabel();
			else nodeLabel = "";
			nodeElement.setAttribute("label", nodeLabel);
		}
		else if (inputNode instanceof OperationNode)
		{
=====================================================================
Found a 7 line (57 tokens) duplication in the following files: 
Starting at line 668 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java
Starting at line 691 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java

			else if(origExpAsArray[i].matches("#\\([\\w]*\\)")) {
				name = origExpAsArray[i].substring(2, origExpAsArray[i].lastIndexOf(")"));
				outputExp.append(" ");
				outputExp.append(placeNameToArrayIndex(name, nameToId, idToIndex));
				i++;
			}
			else {
=====================================================================
Found a 11 line (57 tokens) duplication in the following files: 
Starting at line 213 of /usr/local/git/PipeCoursework/src/pipe/server/serverCommon/ServerAction.java
Starting at line 266 of /usr/local/git/PipeCoursework/src/pipe/server/serverCommon/ServerAction.java

					final Thread status = new Thread(new JobStatusChecker(	this.clientConnection,
																			statusFilePath,
																			resultsFilePath,
																			this.workPath,
																			this.analysisLogFile.getPath()));
					status.start();

					// Create DRMAA session and start dnamaca with created .mod
					// file
					final ServerDrmaaSession drmSession = new ServerDrmaaSession(statusFilePath);
					drmSession.setMyLogFile(this.analysisLogFile.getPath());
=====================================================================
Found a 9 line (56 tokens) duplication in the following files: 
Starting at line 840 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 889 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

			if(GrappaStyle.defaultStroke != grappaNexus.style.stroke) {
			    g2d.setStroke(grappaNexus.style.stroke);
			    grappaNexus.draw(g2d);
			    g2d.setStroke(GrappaStyle.defaultStroke);
			} else {
			    grappaNexus.draw(g2d);
			}
		    }
		    if(grappaNexus.lstr != null && edgeLabels) {
=====================================================================
Found a 13 line (56 tokens) duplication in the following files: 
Starting at line 1799 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1824 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public boolean isEqual(Complex a){
                boolean test = false;
                if(this.isNaN()&&a.isNaN()){
                        test=true;
                }
                else{
                        if(this.real == a.real && this.imag == a.imag)test = true;
                }
                return test;
        }


        public static boolean isEqual(Complex a, Complex b){
=====================================================================
Found a 5 line (56 tokens) duplication in the following files: 
Starting at line 189 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 685 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      Matrix X = new Matrix(m,n);
      double[][] C = X.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            C[i][j] = B.A[i][j] / A[i][j];
=====================================================================
Found a 12 line (56 tokens) duplication in the following files: 
Starting at line 393 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPNNew.java
Starting at line 524 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java

			result.add("<A HREF='#M" + i + "'>" + list1.getID(i)+ "</A>");
			for (int j=0; j<cols; j++)
				result.add(f.format(probabilities[i][j]));
		}
		
		return ResultsHTMLPane.makeTable(result.toArray(),cols + 1,false,true,true,true);
	}
	
	//######################################################################################################################	
	
	//Format lists of doubles nicely
	protected String renderLists(double[] data, StateList list) {
=====================================================================
Found a 9 line (56 tokens) duplication in the following files: 
Starting at line 62 of /usr/local/git/PipeCoursework/src/pipe/modules/invariantAnalysis/InvariantAnalysis.java
Starting at line 51 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

    JDialog guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
    
    // 1 Set layout
    Container contentPane=guiDialog.getContentPane();
    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
    
    // 2 Add file browser
    contentPane.add(sourceFilePanel    =new PetriNetChooserPanel("Source net",pnmlData));
    contentPane.add(comparisonFilePanel=new PetriNetChooserPanel("Comparison net",null));
=====================================================================
Found a 12 line (56 tokens) duplication in the following files: 
Starting at line 193 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 135 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

				      Process proc = rt.exec(new String[]{"dnamaca", "current.mod"});
				      
				      InputStream stdin = proc.getInputStream();
				     InputStreamReader isr = new InputStreamReader(stdin);
				      
				      InputStream stderr = proc.getErrorStream();
				      InputStreamReader isr2 = new InputStreamReader(stderr);

				      BufferedReader br = new BufferedReader(isr); 
				      BufferedReader br2 = new BufferedReader(isr2);
				      
				      String line = null;
=====================================================================
Found a 11 line (56 tokens) duplication in the following files: 
Starting at line 232 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 120 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

	public int print(Graphics g, PageFormat pageFormat, int pageIndex) throws PrinterException {
		if(pageIndex>0)
			return Printable.NO_SUCH_PAGE;
		Graphics2D g2D = (Graphics2D) g;
		//Move origin to page printing area corner
		g2D.translate(pageFormat.getImageableX(), pageFormat.getImageableY());
		g2D.scale(0.5,0.5);
		print(g2D); // Draw the net

		return Printable.PAGE_EXISTS;
	}
=====================================================================
Found a 7 line (56 tokens) duplication in the following files: 
Starting at line 160 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 601 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

				final int y[] = new int[lengthOfCurve + 2];
				X = new Cubic[lengthOfCurve + 2];
				Y = new Cubic[lengthOfCurve + 2];

				for (k1 = 0; k1 <= (curveEndIndex - curveStartIndex); k1++)
				{
					x[k1] = (int) ((ArcPathPoint) this.pathPoints.get(curveStartIndex + k1)).getPoint().x;
=====================================================================
Found a 11 line (56 tokens) duplication in the following files: 
Starting at line 431 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 508 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java

		ActionListener okButtonListener = new ActionListener()
		{
			public void actionPerformed(ActionEvent arg0)
			{
				// create state label
				if (StateLabelManager.stateLabelTextField.getText().equals("") ||
					!StateLabelManager.containsText(StateLabelManager.stateLabelTextField.getText()))
					JOptionPane.showMessageDialog(null, "Please specify a state label name");
				else
				{
					if (!StateLabelManager.stateLabelTextField	.getText()
=====================================================================
Found a 7 line (55 tokens) duplication in the following files: 
Starting at line 771 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 781 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

	thisEdge = new Edge(thisGraph, tail, tailPort, (Node)(enm.nextElement()), null, key, name);
	parser.debug_message(1, "Creating edge in subgraph (" + thisGraph.getName() + ")...");
	parser.debug_message(1, "thisEdge(" + thisEdge.getName() + ")");
	thisElemType = Grappa.EDGE;
	applyAttrs((Element)thisEdge,keyAttr,nameAttr);
      }
    }
=====================================================================
Found a 11 line (55 tokens) duplication in the following files: 
Starting at line 1154 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1194 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static long[] byteTOlong(byte[] aa){
            int n = aa.length;
            long[] bb = new long[n];
            for(int i=0; i<n; i++){
               bb[i] = (long)aa[i];
            }
            return bb;
        }

        // recast an array of byte as int
        public static int[] byteTOint(byte[] aa){
=====================================================================
Found a 11 line (55 tokens) duplication in the following files: 
Starting at line 1144 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1184 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static float[] byteTOfloat(byte[] aa){
            int n = aa.length;
            float[] bb = new float[n];
            for(int i=0; i<n; i++){
               bb[i] = (float)aa[i];
            }
            return bb;
        }

        // recast an array of byte as long
        public static long[] byteTOlong(byte[] aa){
=====================================================================
Found a 11 line (55 tokens) duplication in the following files: 
Starting at line 1113 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1134 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] shortTOdouble(short[] aa){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = (double)aa[i];
            }
            return bb;
        }

         // recast an array of short as float
        public static float[] shortTOfloat(short[] aa){
=====================================================================
Found a 11 line (55 tokens) duplication in the following files: 
Starting at line 1092 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1144 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static float[] shortTOfloat(short[] aa){
            int n = aa.length;
            float[] bb = new float[n];
            for(int i=0; i<n; i++){
               bb[i] = (float)aa[i];
            }
            return bb;
        }

        // recast an array of short as long
        public static long[] shortTOlong(short[] aa){
=====================================================================
Found a 12 line (55 tokens) duplication in the following files: 
Starting at line 1082 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1113 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] longTOdouble(long[] aa){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = (double)aa[i];
            }
            return bb;
        }

        // recast an array of long as float
        // BEWARE POSSIBLE LOSS OF PRECISION
        public static float[] longTOfloat(long[] aa){
=====================================================================
Found a 11 line (55 tokens) duplication in the following files: 
Starting at line 562 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 755 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 1162 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java

		debug_message("# Current Symbol is #" + cur_err_token().sym);
	    }
	  /* if its less than zero, then it encodes a reduce action */
	  else if (act < 0)
	    {
	      /* perform the action for the reduce */
	      lhs_sym = do_action((-act)-1, this, stack, tos);

	      /* look up information about the production */
	      lhs_sym_num = production_tab[(-act)-1][0];
	      handle_size = production_tab[(-act)-1][1];
=====================================================================
Found a 10 line (55 tokens) duplication in the following files: 
Starting at line 69 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		transitions = pnmldata.getTransitions();
		
		// Build interface
		guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
		
		Container contentPane=guiDialog.getContentPane();
		contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));

		resultText = new ResultsHTMLPane(pnmldata.getURI());
		contentPane.add(resultText);
=====================================================================
Found a 9 line (55 tokens) duplication in the following files: 
Starting at line 122 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 252 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

				final PointsResultWrapper result = (PointsResultWrapper) node.getResult();

				final JMenuItem num = new JMenuItem(String.valueOf(result.getNumResult()));

				menu.add(num);

				final JMenuItem popup = new JMenuItem(new TabOpenFileText(node));
				popup.setText("View Text File");
				menu.add(popup);
=====================================================================
Found a 6 line (55 tokens) duplication in the following files: 
Starting at line 78 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeArcHandler.java
Starting at line 70 of /usr/local/git/PipeCoursework/src/pipe/gui/ArcHandler.java

			((GuiView)contentPane).getSelectionObject().translateSelection(transX, transY);
			dragInit.translate(-(currentObject.getLocation().x - oldLocation.x - transX),
							   -(currentObject.getLocation().y - oldLocation.y - transY));
		}
	}
}
=====================================================================
Found a 11 line (55 tokens) duplication in the following files: 
Starting at line 89 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 77 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

		}
	}

	public void processSelection(MouseEvent e)
	{	
		if (!e.isShiftDown()) clearSelection();
		Component netObj[] = edit_window.getComponents();
		// Get all the objects in the current window
		for (int i=0; i<netObj.length; i++) {
			// Handle Arcs and Arc Points
			if ((netObj[i] instanceof Arc) && ((PetriNetObject)netObj[i]).isSelectable())	{
=====================================================================
Found a 11 line (55 tokens) duplication in the following files: 
Starting at line 75 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/NegationNode.java
Starting at line 78 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/DistributionNode.java

			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();	
				// print out child's textual representation
				QueryManager.colourUp();
				description += child.printTextualRepresentation();
				QueryManager.colourDown();
			}
		}
		else {
			description += QueryManager.addColouring("calculated from a passage that has not been specified yet");
=====================================================================
Found a 7 line (55 tokens) duplication in the following files: 
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PercentileNode.java
Starting at line 81 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/MomentNode.java

		ArrayList children = getChildNodes();
		if (children != null) {
			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();	
				String childsReturnType = child.getReturnType();
				if (childsReturnType.equals(NUM_TYPE)) {
=====================================================================
Found a 9 line (55 tokens) duplication in the following files: 
Starting at line 78 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 585 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java

		QueryLoader.queryData = QueryManager.getData();
		NodeList ptmlElements = PTMLDoc.getDocumentElement().getChildNodes();
		for (int i = 0; i < ptmlElements.getLength(); i++)
		{
			Node ptmlNode = ptmlElements.item(i);
			if (ptmlNode instanceof Element)
			{
				Element ptmlElement = (Element) ptmlNode;
				if ("macro".equals(ptmlElement.getNodeName()))
=====================================================================
Found a 8 line (55 tokens) duplication in the following files: 
Starting at line 235 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 248 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java

			i = nodeOutgoingArcIDs.iterator();
			while (i.hasNext())
			{
				String outgoingArcID = (String) i.next();
				PerformanceTreeArc nodeArc;
				if (!macroNode)
					nodeArc = QueryWriter.queryData.getArc(outgoingArcID);
				else nodeArc = QueryWriter.macro.getMacroArc(outgoingArcID);
=====================================================================
Found a 7 line (55 tokens) duplication in the following files: 
Starting at line 40 of /usr/local/git/PipeCoursework/test/pipe/gui/GuiFrameTest.java
Starting at line 54 of /usr/local/git/PipeCoursework/test/pipe/common/dataLayer/GuiViewTest.java

		Component button1 = getFinder().find(new Matcher(){
			public boolean matches(Component c){
				return JToggleButton.class.isInstance(c)
				&& ((JToggleButton)c).getAction().getValue(Action.NAME)
				.equals("Place");
			}
		});
=====================================================================
Found a 6 line (54 tokens) duplication in the following files: 
Starting at line 383 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 439 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

				     new Ellipse2D.Double
					 (
					  pos.x + (double)(i * PERIPHERY_GAP),
					  pos.y + (double)(i * PERIPHERY_GAP),
					  width - (double)(2 * i * PERIPHERY_GAP),
					  height - (double)(2 * i * PERIPHERY_GAP)
=====================================================================
Found a 6 line (54 tokens) duplication in the following files: 
Starting at line 903 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1521 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          case 2: // graph ::= hdr NT$0 body 
            {
              Object RESULT = null;
              // propagate RESULT from NT$0
              if ( ((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
=====================================================================
Found a 15 line (54 tokens) duplication in the following files: 
Starting at line 1379 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1403 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

    public void removeTypeTags(int type) {
	Attribute attr = null;
	Hashtable tags;
	switch(type) {
	case NODE:
	    attr = getNodeAttribute(TAG_ATTR);
	    break;
	case EDGE:
	    attr = getEdgeAttribute(TAG_ATTR);
	    break;
	case SUBGRAPH:
	    attr = getLocalAttribute(TAG_ATTR);
	    break;
	}
	if(attr == null) return;
=====================================================================
Found a 33 line (54 tokens) duplication in the following files: 
Starting at line 102 of /usr/local/git/PipeCoursework/src/pipe/io/TransitionRecord.java
Starting at line 118 of /usr/local/git/PipeCoursework/src/pipe/io/NewTransitionRecord.java

		isFromTangible = inputBuf.getChar();
		return true;
		
	}
	/**
	 * updateRate()
	 * When recording a transition from one state to another,
	 * it is possible that there will be multiple paths between
	 * them through vanishing states. If this happens, the rates
	 * of transition between all those paths should just be
	 * combined into one effective rate by multiplying the rates.
	 * @param r
	 */
	public void updateRate(double r){
		rate *= r;
	}
	
	public int getFromState(){
		return fromstate;
	}
	
	public int getTransitionNo() {
		return transition;
	}
	
	public int getToState(){
		return tostate;
	}
	
	public double getRate(){
		return rate;
	}
	public boolean getIsFromTan() {
=====================================================================
Found a 14 line (54 tokens) duplication in the following files: 
Starting at line 70 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java
Starting at line 88 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java
Starting at line 106 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java

					((ArithCompNode) this.node).setOperation(this.actionType);
				if (MacroManager.getEditor() == null)
				{
					// not in macro mode
					QueryManager.getData().updateNode(this.node);
				}
				else
				{
					// in macro mode
					MacroManager.getEditor().updateNode(this.node);
				}
				break;
			}
			case NUM :
=====================================================================
Found a 5 line (54 tokens) duplication in the following files: 
Starting at line 70 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeArcHandler.java
Starting at line 65 of /usr/local/git/PipeCoursework/src/pipe/gui/ArcHandler.java

			Arc currentObject = (Arc)myObject;
			Point oldLocation = currentObject.getLocation();
			// Calculate translation in mouse
			int transX = (int)(Grid.getModifiedX(e.getX() - dragInit.x));
			int transY = (int)(Grid.getModifiedY(e.getY() - dragInit.y));
=====================================================================
Found a 7 line (54 tokens) duplication in the following files: 
Starting at line 531 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 120 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/FiringTaggedButton.java

			scaleFactor = this.getZoomController().getPercent();
		}
		this.positionX = this.locationX * scaleFactor / 100.0;
		this.positionY = this.locationY * scaleFactor / 100.0;
		this.bounds.setBounds(	(int) this.positionX,
								(int) this.positionY,
								(int) (DIAMETER * scaleFactor / 100.0),
=====================================================================
Found a 11 line (54 tokens) duplication in the following files: 
Starting at line 216 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 230 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java

					it = ((OperationNode) nodeInput).getOptionalArcs().iterator();
					while (it.hasNext())
					{
						arc = it.next();
						arc.setSource(nodeInput);
						arc = addArc(arc); // add arc to data structure

						// add arc to node's outgoingArcIDs list
						String arcID = arc.getId();
						((OperationNode) nodeInput).addOutgoingArcID(arcID);
					}
=====================================================================
Found a 11 line (54 tokens) duplication in the following files: 
Starting at line 243 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 248 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

				MacroWriter.createArcElement(nodeArc, outgoingArcsElement, document);

			}

			Element childNodesElement = document.createElement("childNodes");
			nodeElement.appendChild(childNodesElement);
			i = nodeOutgoingArcIDs.iterator();
			while (i.hasNext())
			{
				String outgoingArcID = (String) i.next();
				PerformanceTreeArc nodeArc = MacroWriter.macro.getMacroArc(outgoingArcID);
=====================================================================
Found a 9 line (54 tokens) duplication in the following files: 
Starting at line 429 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java
Starting at line 946 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java

			}
		}
		//Now add the diagonals at the end of each row - these are negative sum of all other non-zero elements
		//of the column
		for(int i = 0; i < numColumns; i++) {
			MatrixQTind[i][++MatrixQTind[i][0]] = i;
			MatrixQTind[i][++MatrixQTind[i][0]] = dataIndex;
			//MatrixQTdata[dataIndex++] = sumCol(MatrixQTind, MatrixQTdata, i);
			MatrixQTdata[dataIndex++] = -1;// 0 diagonal minus identity matrix
=====================================================================
Found a 7 line (54 tokens) duplication in the following files: 
Starting at line 86 of /usr/local/git/PipeCoursework/test/pipe/common/dataLayer/GuiViewTest.java
Starting at line 107 of /usr/local/git/PipeCoursework/test/pipe/common/dataLayer/GuiViewTest.java

			expectedLocations[i][1] = (int)(expectedLocations[i][1] * 70 / 100.0);
		}
		Component button = getFinder().find(new Matcher(){
			public boolean matches(Component c){
				return JButton.class.isInstance(c)
				&& ((JButton)c).getAction().getValue(Action.NAME)
				.equals("Zoom out");
=====================================================================
Found a 3 line (53 tokens) duplication in the following files: 
Starting at line 343 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 497 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

		    shape = new GrappaShape(shapeType, pos.x, pos.y, width, height, sides, peripheries, distortion, skew, orientation, style.rounded, style.diagonals, rects);
		} else {
		    shape = new GrappaShape(shapeType, pos.x + (width/2.0), pos.y + (height/2.0), width, height, sides, peripheries, distortion, skew, orientation, style.rounded, style.diagonals, rects);
=====================================================================
Found a 10 line (53 tokens) duplication in the following files: 
Starting at line 503 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 888 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

			grappaNexus.fill(g2d);
			if(GrappaStyle.defaultStroke != grappaNexus.style.stroke) {
			    g2d.setStroke(grappaNexus.style.stroke);
			    grappaNexus.draw(g2d);
			    g2d.setStroke(GrappaStyle.defaultStroke);
			} else {
			    grappaNexus.draw(g2d);
			}
		    }
		    if(grappaNexus.lstr != null && edgeLabels) {
=====================================================================
Found a 4 line (53 tokens) duplication in the following files: 
Starting at line 111 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 120 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

		    case 'P':
			if (args.length <= argn) throw new RuntimeException("too few arguments for format");
			if (args[argn] instanceof java.awt.geom.Point2D)
			    cvt.buildPoint(prtbuf, ((java.awt.geom.Point2D)args[argn++]), true);
=====================================================================
Found a 5 line (53 tokens) duplication in the following files: 
Starting at line 1460 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1479 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

    public int countOfElements(int types) {
	int count = 0;
	if((types&NODE) != 0 && nodedict != null) count += nodedict.size(); 
	if((types&EDGE) != 0 && edgedict != null) count += edgedict.size(); 
	if(graphdict != null) {
=====================================================================
Found a 5 line (53 tokens) duplication in the following files: 
Starting at line 498 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 511 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static Complex[][] twoDarray(int n, int m, Complex constant){
                Complex[][] c =new Complex[n][m];
                for(int i=0; i<n; i++){
                        for(int j=0; j<m; j++){
                                c[i][j]=Complex.copy(constant);
=====================================================================
Found a 4 line (53 tokens) duplication in the following files: 
Starting at line 801 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 814 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            for(int i=1; i<array.length; i++){
                if((int) Math.abs(array[i] - value)<diff){
                    diff = (int)Math.abs(array[i] - value);
                    nearest = i;
=====================================================================
Found a 11 line (53 tokens) duplication in the following files: 
Starting at line 767 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 1174 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java

	      if (debug) debug_reduce((-act)-1, lhs_sym_num, handle_size);

	      /* pop the handle off the stack */
	      for (int i = 0; i < handle_size; i++)
		{
		  stack.pop();
		  tos--;
		}
	      
	      /* look up the state to go to from the one popped back to */
	      act = get_reduce(((Symbol)stack.peek()).parse_state, lhs_sym_num);
=====================================================================
Found a 7 line (53 tokens) duplication in the following files: 
Starting at line 262 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPathPoint.java
Starting at line 323 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPathPoint.java

			this.point.setLocation(x, y);
			this.setBounds(	(int) x - ArcPathPoint.SIZE,
							(int) y - ArcPathPoint.SIZE,
							2 * ArcPathPoint.SIZE + ArcPathPoint.SIZE_OFFSET,
							2 * ArcPathPoint.SIZE + ArcPathPoint.SIZE_OFFSET);

		}
=====================================================================
Found a 8 line (53 tokens) duplication in the following files: 
Starting at line 865 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1129 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

	public int[] getRowPackedCopy()
	{
		final int[] vals = new int[this.m * this.n];
		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
				vals[i * this.n + j] = this.A[i][j];
=====================================================================
Found a 13 line (53 tokens) duplication in the following files: 
Starting at line 233 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LaplaceTransformInverter.java
Starting at line 484 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LTIMapRed.java

			double term = !retDivS ? calculatedRTA.get(new Complex(X,Y)) : calculatedCDF.get(new Complex(X,Y));
			//System.out.println("Want: " + new Complex(X,Y));
			if((N%2) != 0)
				term = -term;
			sum += term;
		}
		
		SU[1] = sum;
		
		for(int K = 1; K <= 12; K++) {
			int N = Ntr + K;
			double Y = N*H;
			double term = !retDivS ? calculatedRTA.get(new Complex(X,Y)) : calculatedCDF.get(new Complex(X,Y));
=====================================================================
Found a 13 line (53 tokens) duplication in the following files: 
Starting at line 37 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/NewSteadyStateSolver.java
Starting at line 115 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/NewSteadyStateSolver.java

		double sum;
		
		int iterations = 0;
		
		while(true) {
			for(int i = 0; i < n; i++) {
			
				sum = 0;
				
				int k = 0;
				int size = matrixQTInd[i][k++];
				//System.out.println("" + size);
				while(k <= size*2 - 1) {//don't wnat to add diagonals
=====================================================================
Found a 8 line (53 tokens) duplication in the following files: 
Starting at line 68 of /usr/local/git/PipeCoursework/src/pipe/gui/Animator.java
Starting at line 92 of /usr/local/git/PipeCoursework/src/pipe/gui/Animator.java

  public void unhighlightDisabledTransitions(){
	DataLayer current = CreateGui.currentPNMLData();
	current.setEnabledTransitions();
			  	  
    Iterator transitionIterator = current.returnTransitions();
    while(transitionIterator.hasNext()){
      Transition tempTransition =(Transition) transitionIterator.next();
      if(tempTransition.isEnabled(true)==false){
=====================================================================
Found a 12 line (53 tokens) duplication in the following files: 
Starting at line 195 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 344 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

			if(tagged) modString += tagPlace + " = " + taggedPlaceIndex + ";";
			modString += "\n\t}\n";					
		}
		
		private void transitions()
		{
			
			for(int i=0; i<transitions.length; i++)
			{
			  	boolean taggedArc = false;
				int numInputArc=0;
			  	Iterator arcsTo = transitions[i]. getConnectToIterator();
=====================================================================
Found a 16 line (53 tokens) duplication in the following files: 
Starting at line 520 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 589 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

		g2.draw(this.myPath);

// if (selected)
// {
// myPath.createSelection();
// g2.fill(myPath.getArcSelection());
// g2.setPaint(SELECTION_LINE_COLOUR);
// g2.fill(myPath.getPointSelection());
// }

	}

	public void setEndPoint(final double x, final double y, final boolean type)
	{
		this.myPath.setPointLocation(this.myPath.getEndIndex(), x, y);
		this.myPath.setPointType(this.myPath.getEndIndex(), type);
=====================================================================
Found a 21 line (53 tokens) duplication in the following files: 
Starting at line 414 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 330 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

	}

	/**
	 * Get X-axis value of end position
	 * 
	 * @return Double value for X-axis of end position
	 */
	public double getEndPositionX()
	{
		return this.myPath.getPoint(this.myPath.getEndIndex()).getX();
	}

	/**
	 * Get Y-axis value of end position
	 * 
	 * @return Double value for Y-axis of end position
	 */
	public double getEndPositionY()
	{
		return this.myPath.getPoint(this.myPath.getEndIndex()).getY();
	}
=====================================================================
Found a 10 line (53 tokens) duplication in the following files: 
Starting at line 318 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java
Starting at line 416 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java

			super.select();
			if (this.outgoingArcIDs != null)
			{
				// select outgoing arcs as well
				Iterator it = this.outgoingArcIDs.iterator();
				while (it.hasNext())
				{
					String outgoingArcID = (String) it.next();
					PerformanceTreeArc outgoingArc;
					if (MacroManager.getEditor() == null)
=====================================================================
Found a 5 line (53 tokens) duplication in the following files: 
Starting at line 142 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java
Starting at line 53 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroTransformer.java

			StreamSource xsltSource = new StreamSource(Thread.currentThread().getContextClassLoader().getResourceAsStream(
					"pipe"+System.getProperty("file.separator")+
					"modules"+System.getProperty("file.separator")+
					"queryeditor"+System.getProperty("file.separator")+
					"io"+System.getProperty("file.separator")+"LoadMacroXML.xsl"));		
=====================================================================
Found a 10 line (53 tokens) duplication in the following files: 
Starting at line 77 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/PerformanceTreeExporter.java
Starting at line 123 of /usr/local/git/PipeCoursework/src/pipe/gui/Export.java

    PetriNetObject.ignoreSelection(true);
    if(gridEnabled)Grid.disableGrid();

    try {
      switch(format) {
      case PNG:
        filename=new FileBrowser("PNG image","png",filename).saveFile();
        if(filename!=null)toPNG(g,filename);
        break;
      case POSTSCRIPT:
=====================================================================
Found a 15 line (53 tokens) duplication in the following files: 
Starting at line 316 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 814 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java

				((OperationNode) node).setOperation(nodeOperation);
			}
		}
		else if (node instanceof ValueNode)
		{
			if (nodeLabel != null)
			{
				// set the visible label
				((ValueNode) node).setNodeLabel(nodeLabel);
				if (node instanceof StatesNode)
				{
					// set the state label variable
					((StatesNode) node).setStateLabel(nodeLabel);
				}
				else if (node instanceof ActionsNode)
=====================================================================
Found a 5 line (53 tokens) duplication in the following files: 
Starting at line 124 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 53 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryTransformer.java

			StreamSource xsltSource = new StreamSource(Thread.currentThread().getContextClassLoader().getResourceAsStream(
					"pipe"+System.getProperty("file.separator")+
					"modules"+System.getProperty("file.separator")+
					"queryeditor"+System.getProperty("file.separator")+
					"io"+System.getProperty("file.separator")+"LoadQueryXML.xsl"));		
=====================================================================
Found a 5 line (52 tokens) duplication in the following files: 
Starting at line 474 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 505 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

			    ((Element)(subg.currentSelection)).setSubgraph(newsubg);
			} else {
			    Vector vec = (Vector)(subg.currentSelection);
			    for(int i = 0; i < vec.size(); i++) {
				GrappaSupport.setHighlight((Element)(vec.elementAt(i)), 0, HIGHLIGHT_OFF); 
=====================================================================
Found a 8 line (52 tokens) duplication in the following files: 
Starting at line 48 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPoint.java
Starting at line 68 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaBox.java

	double[] coords = null;
	try {
	    coords = GrappaSupport.arrayForTuple(coordString);
	}
	catch(NumberFormatException nfe) {
	    throw new IllegalArgumentException("coordinate string (" + coordString + ") has a bad number format (" + nfe.getMessage() + ")");
	}
	if(coords == null || coords.length != 4) {
=====================================================================
Found a 22 line (52 tokens) duplication in the following files: 
Starting at line 317 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 444 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 565 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    attributes.put(attr.getName(),attr);
	    //System.err.println("Adding passthru2 graph attr("+attr.getName()+","+attr.getValue()+") to "+getName());
	    // this is why we need notifyObservers called
	    newAttr = attr;
	}
	// this should only be possible when "else" above has occurred
	if(crntAttr.hasChanged()) {
	    crntAttr.notifyObservers(new Object[] { newAttr, new Long(System.currentTimeMillis()) });
	}
	return oldValue;
    }

    /**
     * Sets the subgraph-specific default using the specified name/value
     * pair.  A new attribute will be created if needed.
     * Overrides Element method.
     *
     * @param name the graph attribute name
     * @param value the graph attribute value
     * @return the attribute pair previously stored for this attribute.
     */
    public Object setAttribute(String name, Object value) {
=====================================================================
Found a 12 line (52 tokens) duplication in the following files: 
Starting at line 1164 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1204 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1225 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static int[] doubleTOint(double[] aa){
            int n = aa.length;
            int[] bb = new int[n];
            for(int i=0; i<n; i++){
               bb[i] = (int)aa[i];
            }
            return bb;
        }

        // print an array of doubles to screen
        // No line returns except at the end
        public static void print(double[] aa){
=====================================================================
Found a 11 line (52 tokens) duplication in the following files: 
Starting at line 1124 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1144 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static float[] shortTOfloat(short[] aa){
            int n = aa.length;
            float[] bb = new float[n];
            for(int i=0; i<n; i++){
               bb[i] = (float)aa[i];
            }
            return bb;
        }

        // recast an array of short as long
        public static long[] shortTOlong(short[] aa){
=====================================================================
Found a 11 line (52 tokens) duplication in the following files: 
Starting at line 1102 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1154 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static long[] shortTOlong(short[] aa){
            int n = aa.length;
            long[] bb = new long[n];
            for(int i=0; i<n; i++){
               bb[i] = (long)aa[i];
            }
            return bb;
        }

        // recast an array of short as int
        public static int[] shortTOint(short[] aa){
=====================================================================
Found a 11 line (52 tokens) duplication in the following files: 
Starting at line 1092 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1124 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static float[] longTOfloat(long[] aa){
            int n = aa.length;
            float[] bb = new float[n];
            for(int i=0; i<n; i++){
               bb[i] = (float)aa[i];
            }
            return bb;
        }

        // recast an array of short as double
        public static double[] shortTOdouble(short[] aa){
=====================================================================
Found a 11 line (52 tokens) duplication in the following files: 
Starting at line 1072 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1082 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] intTOdouble(int[] aa){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = (double)aa[i];
            }
            return bb;
        }

        // recast an array of int as float
        public static float[] intTOfloat(int[] aa){
=====================================================================
Found a 9 line (52 tokens) duplication in the following files: 
Starting at line 1028 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1040 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1052 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1064 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            long[] cc = new long[cLen];
            for(int i=0; i<aLen; i++)cc[i] = aa[i];
            for(int i=0; i<bLen; i++)cc[i+aLen] = bb[i];

            return cc;
        }

        // recast an array of float as doubles
        public static double[] floatTOdouble(float[] aa){
=====================================================================
Found a 23 line (52 tokens) duplication in the following files: 
Starting at line 788 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 520 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

	    debug_message(5, "# Goto state #" + act);
	  }
	/* finally if the entry is zero, we have an error */
	else if (act == 0)
	  {
	    /* call user syntax error reporting routine */
	    syntax_error(cur_token);

	    /* try to error recover */
	    if (!error_recovery(true))
	      {
		/* if that fails give up with a fatal syntax error */
		unrecovered_syntax_error(cur_token);

		/* just in case that wasn't fatal enough, end parse */
		done_parsing();
	      } else {
		lhs_sym = (Symbol)stack.peek();
	      }
	  }
      }
    return lhs_sym;
  }
=====================================================================
Found a 4 line (52 tokens) duplication in the following files: 
Starting at line 539 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java
Starting at line 552 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java

			arc.setTargetLocation(this.positionX + this.centreOffsetLeft() - 0.5 * this.getDiameter() *
									Math.sin(angle), this.positionY + this.centreOffsetTop() + 0.5 *
														this.getDiameter() * Math.cos(angle));
		}
=====================================================================
Found a 6 line (52 tokens) duplication in the following files: 
Starting at line 533 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 555 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

		Iterator iterator = hashrow.iterator();
		CompressedState current;
		for(int index = 0; index < hashrow.size(); index++){
			current = (CompressedState)iterator.next();
			if(test.hashCode2()==current.getHashCode2())
				return current.getID();
=====================================================================
Found a 8 line (52 tokens) duplication in the following files: 
Starting at line 284 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 357 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

							pprime = p * prob(pnmlData, v, vprime);
							if(isTangible(pnmlData, vprime)){
								if(!explored(vprime, exploredStates)){
									numtangiblestates++;
									tangible = new Marking(vprime, numtangiblestates-1);
									tangibleStates.enqueue(tangible);
									addExplored(tangible, exploredStates, esoFile,false);
								}
=====================================================================
Found a 14 line (52 tokens) duplication in the following files: 
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/JFCGraphFrame.java
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/CartesianGraphFrame.java

			int returnVal = fc.showSaveDialog(CartesianGraphFrame.this);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			
			try {
				fw = new FileWriter(saveFile);
			}
			catch (IOException e) {
				e.printStackTrace();
			}
			for(int i = 0; i < xlist.size(); i++) {
=====================================================================
Found a 13 line (52 tokens) duplication in the following files: 
Starting at line 42 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeArcHandler.java
Starting at line 43 of /usr/local/git/PipeCoursework/src/pipe/gui/ArcHandler.java

	    menuItem = new JMenuItem(new SplitArcAction((Arc)myObject, e.getPoint()));
	    menuItem.setText("Split Arc Segment");
	    popup.add(menuItem);
		
		return popup;
	}
//###################################################################################### 
	public void mousePressed(MouseEvent e)
	{
		super.mousePressed(e);
		if (e.getClickCount() == 2)
		{
			((Arc)myObject).getSource().select();
=====================================================================
Found a 13 line (52 tokens) duplication in the following files: 
Starting at line 110 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 89 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

				ArcPath thisArcPath = thisArc.getArcPath();
				
				if (thisArcPath.proximityIntersects(selectionRectangle))
					thisArcPath.showPoints();
				else
					thisArcPath.hidePoints();
				
				if (thisArcPath.intersects(selectionRectangle)) {
					thisArc.select();
				}
			}
		
			if ((netObj[i] instanceof ArcPathPoint) && ((PetriNetObject)netObj[i]).isSelectable())
=====================================================================
Found a 10 line (52 tokens) duplication in the following files: 
Starting at line 258 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 145 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

		selection.updateBounds();
	}

	public void updatePreferredSize() {
		// iterate over net objects
		// setPreferredSize() accordingly
		Component[] components=getComponents();
		Dimension d=new Dimension(0,0);
		for(int i=0;i<components.length;i++) {
			if(components[i] instanceof SelectionObject) continue; // SelectionObject not included
=====================================================================
Found a 17 line (52 tokens) duplication in the following files: 
Starting at line 639 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 846 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

	}
}

class Cubic
{

	float	a, b, c, d; /* a + b*u + c*u^2 +d*u^3 */

	public Cubic(float a, float b, float c, float d) {
		this.a = a;
		this.b = b;
		this.c = c;
		this.d = d;
	}

	/** evaluate cubic */
	public float eval(float u)
=====================================================================
Found a 5 line (52 tokens) duplication in the following files: 
Starting at line 253 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 669 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

									Constants.ARC_CONTROL_POINT_CONSTANT;
			myPoint.setControl2((float) (myPoint.getPoint().x + Math.cos(anAngle) * distance),
								(float) (myPoint.getPoint().y + Math.sin(anAngle) * distance));

			myPoint = (ArcPathPoint) this.pathPoints.get(1);
=====================================================================
Found a 5 line (52 tokens) duplication in the following files: 
Starting at line 239 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 652 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

									Constants.ARC_CONTROL_POINT_CONSTANT;
			myPoint.setControl1((float) (myLastPoint.getPoint().x + Math.cos(anAngle) * distance),
								(float) (myLastPoint.getPoint().y + Math.sin(anAngle) * distance));

			myPoint = (ArcPathPoint) this.pathPoints.get(this.getEndIndex());
=====================================================================
Found a 10 line (52 tokens) duplication in the following files: 
Starting at line 115 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 347 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

		final double ABy = (B.y - A.y) / modAB;

		if (modAB < 7)
		{
			// if the points are virtually superimposed anyway
			p = (Point2D.Float) C.clone();
		}
		else
		{
			p.x = C.x + (float) (ABx * modCD / Constants.ARC_CONTROL_POINT_CONSTANT);
=====================================================================
Found a 11 line (52 tokens) duplication in the following files: 
Starting at line 300 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java
Starting at line 313 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

					it = ((OperationNode) node).getOptionalArcs().iterator();
					while (it.hasNext())
					{
						arc = it.next();
						arc.setSource(node);
						addMacroArc(arc); // add arc to data structure

						// add arc to node's outgoingArcIDs list
						String arcID = arc.getId();
						((OperationNode) node).addOutgoingArcID(arcID);
					}
=====================================================================
Found a 10 line (52 tokens) duplication in the following files: 
Starting at line 306 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 145 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

		selection.updateBounds();
	}

	public void updatePreferredSize() {
		// iterate over net objects
		// setPreferredSize() accordingly
		Component[] components=getComponents();
		Dimension d=new Dimension(0,0);
		for(int i=0;i<components.length;i++) {
			if(components[i] instanceof SelectionObject) continue; // SelectionObject not included
=====================================================================
Found a 11 line (52 tokens) duplication in the following files: 
Starting at line 99 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateGroupEditor.java
Starting at line 138 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateEditor.java

		viewPanel.setBorder((new TitledBorder(new EtchedBorder(),"Click on individual places to set up conditions that uniquely identify the state")) );
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		int viewPanelPreferredWidth = screenSize.width*60/100;
		int viewPanelPreferredHeight = screenSize.height*60/100;
		Dimension viewPanelPreferredSize = new Dimension(viewPanelPreferredWidth, viewPanelPreferredHeight);
		viewPanel.setPreferredSize(viewPanelPreferredSize);
		

		
		// Create auto state group button panel
		JPanel autoConfigPanel = new JPanel();
=====================================================================
Found a 17 line (52 tokens) duplication in the following files: 
Starting at line 151 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java
Starting at line 176 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java

			((StateEditor)parent).addStateElement(curPlace.getId(), "", "");
			
			// Update the UI
			curPlace.removeCondition();
		}
	}
	
	/**
	 * This method sets the condition on each place to be equal its initial marking
	 */
	
	public void setInitialCond()
	{
		for(ConditionPlace curPlace : condPlaces)
		{
			String currentMarking = Integer.toString(curPlace.getCurrentMarking() );
			((StateEditor)parent).addStateElement(curPlace.getId(), "=", currentMarking);
=====================================================================
Found a 11 line (52 tokens) duplication in the following files: 
Starting at line 448 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 503 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

			PerformanceTreeArc arcToDelete = getMacroArc(arcID);

			if (arcToDelete != null)
			{
				// remove arc from list of outgoingArcs of its source
				PerformanceTreeNode arcSource = arcToDelete.getSource();
				if (arcToDelete.getSource() != null && arcSource instanceof OperationNode)
				{
					OperationNode source = (OperationNode) arcSource;
					source.removeArcCompareObject(arcToDelete);
					source.removeOutgoingArcID(arcID);
=====================================================================
Found a 9 line (52 tokens) duplication in the following files: 
Starting at line 820 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java
Starting at line 844 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java

					"Cumulative Density",
					resDataset, 
					PlotOrientation.VERTICAL, 
					false, true, false);
			
			JFCGraphFrame frame = new JFCGraphFrame(pnmlData.pnmlName, resChart);
			frame.setIconImage(new ImageIcon(CreateGui.imgPath + "icon.png").getImage());
			frame.pack();
			frame.setLocation(100, 100);
=====================================================================
Found a 8 line (52 tokens) duplication in the following files: 
Starting at line 65 of /usr/local/git/PipeCoursework/src/pipe/modules/simulation/Simulation.java
Starting at line 62 of /usr/local/git/PipeCoursework/src/pipe/modules/invariantAnalysis/InvariantAnalysis.java

    JDialog guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
    
    // 1 Set layout
    Container contentPane=guiDialog.getContentPane();
    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
    
    // 2 Add file browser
    contentPane.add(sourceFilePanel=new PetriNetChooserPanel("Source net",pnmlData));
=====================================================================
Found a 9 line (52 tokens) duplication in the following files: 
Starting at line 128 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateEditor.java
Starting at line 99 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateGroupEditor.java

												"Click on individual places to set up conditions that uniquely identify the stat group")));
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		int viewPanelPreferredWidth = screenSize.width * 60 / 100;
		int viewPanelPreferredHeight = screenSize.height * 60 / 100;
		Dimension viewPanelPreferredSize = new Dimension(viewPanelPreferredWidth, viewPanelPreferredHeight);
		viewPanel.setPreferredSize(viewPanelPreferredSize);

		// Auto state group helper buttons
		JPanel configButtonsPanel = new JPanel();
=====================================================================
Found a 13 line (52 tokens) duplication in the following files: 
Starting at line 172 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java
Starting at line 151 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java

			((StateGroupEditor)parent).addStateElement(curPlace.getId(), "", "");
			// Update the UI
			curPlace.removeCondition();
		}
	}

	/**
	 * This method sets the condition on each place to be equal its initial marking
	 */
	public void setInitialCond() {
		for(ConditionPlace curPlace : condPlaces) {
			String currentMarking = Integer.toString(curPlace.getCurrentMarking() );
			((StateGroupEditor)parent).addStateElement(curPlace.getId(), "=", currentMarking);
=====================================================================
Found a 19 line (52 tokens) duplication in the following files: 
Starting at line 48 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/InInterval.java
Starting at line 66 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/ArithOp.java

													" Children not evaluated yet");
		}
	}

	@Override
	protected NodeAnalyser checkChildValid(final NodeAnalyser child) throws InvalidNodeAnalyserException
	{
		switch (child.getType())
		{

			case PROBININTERVAL :
			case PROBINSTATES :
			case MOMENT :
			case FIRINGRATE :
			case STEADYSTATEPROB :
			case PERCENTILE :
			case ARITHOP :
			case MACRO :
			case NUM :
=====================================================================
Found a 6 line (51 tokens) duplication in the following files: 
Starting at line 276 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 551 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

	tprnt = prnt = getParent();
	while (tprnt != null && !(tprnt instanceof javax.swing.JViewport))
	    tprnt = tprnt.getParent();
	if (tprnt != null)
	    prnt = tprnt;
	if (prnt instanceof javax.swing.JViewport) {
=====================================================================
Found a 7 line (51 tokens) duplication in the following files: 
Starting at line 275 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 378 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

	    if(scaleChanged) {
		tprnt = prnt = getParent();
		while (tprnt != null && !(tprnt instanceof javax.swing.JViewport))
		    tprnt = tprnt.getParent();
		if (tprnt != null)
		    prnt = tprnt;
		if(prnt instanceof javax.swing.JViewport && inverseTransform != null) {
=====================================================================
Found a 15 line (51 tokens) duplication in the following files: 
Starting at line 1379 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1429 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

    public void removeTypeTag(int type, String tag) {
	Attribute attr = null;
	Hashtable tags;
	switch(type) {
	case NODE:
	    attr = getNodeAttribute(TAG_ATTR);
	    break;
	case EDGE:
	    attr = getEdgeAttribute(TAG_ATTR);
	    break;
	case SUBGRAPH:
	    attr = getLocalAttribute(TAG_ATTR);
	    break;
	}
	if(attr == null) return;
=====================================================================
Found a 4 line (51 tokens) duplication in the following files: 
Starting at line 524 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 538 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                Complex[][][] c =new Complex[n][m][l];
                for(int i=0; i<n; i++){
                        for(int j=0; j<m; j++){
                                for(int k=0; k<l; k++){
=====================================================================
Found a 13 line (51 tokens) duplication in the following files: 
Starting at line 1031 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1077 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

	public int[] getPositiveIndices(final int rowNo)
	{
		final int n = this.getColumnDimension(); // find the number of
													// columns

		// create the single row submatrix for the required row
		try
		{
			PNMatrix A = new PNMatrix(1, n);
			A = this.getMatrix(rowNo, rowNo, 0, n - 1);

			int count = 0; // index of a positive element in the returned array
			final int[] positivesArray = new int[n];
=====================================================================
Found a 5 line (51 tokens) duplication in the following files: 
Starting at line 1001 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 316 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      double[][] B = X.getArray();
      try {
         for (int i = 0; i < r.length; i++) {
            for (int j = 0; j < c.length; j++) {
               B[i][j] = A[r[i]][c[j]];
=====================================================================
Found a 5 line (51 tokens) duplication in the following files: 
Starting at line 968 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 362 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      double[][] B = X.getArray();
      try {
         for (int i = 0; i < r.length; i++) {
            for (int j = j0; j <= j1; j++) {
               B[i][j-j0] = A[r[i]][j];
=====================================================================
Found a 5 line (51 tokens) duplication in the following files: 
Starting at line 932 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 339 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      double[][] B = X.getArray();
      try {
         for (int i = i0; i <= i1; i++) {
            for (int j = 0; j < c.length; j++) {
               B[i-i0][j] = A[i][c[j]];
=====================================================================
Found a 5 line (51 tokens) duplication in the following files: 
Starting at line 897 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 294 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      double[][] B = X.getArray();
      try {
         for (int i = i0; i <= i1; i++) {
            for (int j = j0; j <= j1; j++) {
               B[i-i0][j-j0] = A[i][j];
=====================================================================
Found a 14 line (51 tokens) duplication in the following files: 
Starting at line 483 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LTIMapRed.java
Starting at line 495 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LTIMapRed.java

			double Y = N*H;
			double term = !retDivS ? calculatedRTA.get(new Complex(X,Y)) : calculatedCDF.get(new Complex(X,Y));
			//System.out.println("Want: " + new Complex(X,Y));
			
			//double DELTA = H;
			//Complex i  = new Complex(0, 1);
			
			//seemintly unused code commented out in Euler.cxx, not yet converted to Java:
			//double approxterm = (fnRf(X, Y-DELTA) + fnRfprime(X,Y-DELTA)*i*DELTA = 0.5*fnRfprimeprime(X,Y-DELTA)*DELTA*DELTA).real();
			
			//cout << "term = " << term << "approxterm = " << approxterm << " rel err = " << (approxterm-term)/term << " h = " << H < end;
			
			if((N%2) != 0)
				term = -term;
=====================================================================
Found a 4 line (51 tokens) duplication in the following files: 
Starting at line 210 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java
Starting at line 292 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

		for (int i=0; i<netObj.length; i++) {
			// Handle Arcs and Arc Points
			if ((netObj[i] instanceof Arc) && ((PetriNetObject)netObj[i]).isSelectable())	{
				Arc thisArc = (Arc)netObj[i];
=====================================================================
Found a 12 line (51 tokens) duplication in the following files: 
Starting at line 199 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 439 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

			if(enabledTransitions[i]){ // If the transition is enabled
				if (trans[i].isTimed()== true){  
					//If any immediate transtions exist, the state is vanishing 
					//as they will fire immediately
				hasTimed = true;
				}
				else if (trans[i].isTimed()!= true) {
					hasImmediate = true;
				}
			}
		}
		if (hasTimed == true && hasImmediate == false){
=====================================================================
Found a 11 line (51 tokens) duplication in the following files: 
Starting at line 262 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 401 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

				final JMenuItem popup2 = new JMenuItem(new TabOpenHistogram(node));
				popup2.setText("View distribution");
				menu.add(popup2);

				menu.setVisible(true);

				menu.show(event.getComponent(), event.getX(), event.getY());
			}
			else
			{
				throw new QueryAnalysisException("Argument Node isn't of type SSP");
=====================================================================
Found a 15 line (51 tokens) duplication in the following files: 
Starting at line 94 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java
Starting at line 325 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java

	public void mouseReleased(final MouseEvent e)
	{
		// Have to check for popup here as well as on pressed for
		// crossplatform!!
		if (this.enablePopup)
			checkForPopup(e);

		int switchCondition;
		if (MacroManager.getEditor() == null)
			switchCondition = QueryManager.getMode();
		else switchCondition = MacroManager.getMode();

		switch (switchCondition)
		{
			case SELECT :
=====================================================================
Found a 18 line (51 tokens) duplication in the following files: 
Starting at line 68 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 63 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

	}
	
	public void enableSelection() {
		if (!enabled) {
			edit_window.add(this);
			enabled = true;
			updateBounds();
		}
	}

	public void disableSelection() {
		if (enabled) {
			edit_window.remove(this);
			enabled = false;
		}
	}

	public void processSelection(MouseEvent e)
=====================================================================
Found a 9 line (51 tokens) duplication in the following files: 
Starting at line 800 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 1058 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java

	public static boolean containsLetters(final String inputString)
	{
		boolean stringContainsText = false;
		if (!inputString.equals(""))
		{
			for (int i = 0; i < inputString.length(); i++)
			{
				char chr = inputString.charAt(i);
				if (Character.isLetter(chr))
=====================================================================
Found a 9 line (51 tokens) duplication in the following files: 
Starting at line 890 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 919 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java

			if (assignedStates.contains(oldStateName))
				labelAssignmentsToModify.add(label);
		}
		Iterator<String> j = labelAssignmentsToModify.iterator();
		while (j.hasNext())
		{
			String labelToModify = j.next();
			ArrayList<String> assignedStates = getStatesAssignedToStateLabel(labelToModify);
			assignedStates.remove(oldStateName);
=====================================================================
Found a 19 line (51 tokens) duplication in the following files: 
Starting at line 93 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java
Starting at line 161 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

				modString += computeHash(modString);
//				passageTime();
//				perfString += computeHash(perfString);
			}
						
			// Write buffer to file
			modFileWriter.write(modString);
			modFileWriter.write(perfString);
			modFileWriter.close();
			System.out.println("Done");			
		}
		
		catch (IOException e3)
		{
			System.out.println("Could not write to file! " + file);
			e3.printStackTrace();
		}	
				
	}
=====================================================================
Found a 8 line (50 tokens) duplication in the following files: 
Starting at line 1193 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1239 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

    public boolean hasDefaultTags() {
	Attribute attr;
	Hashtable tags;

	if((attr = getDefaultAttribute(TAG_ATTR)) == null) return false;
	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return false;
	return true;
=====================================================================
Found a 7 line (50 tokens) duplication in the following files: 
Starting at line 1178 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1225 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

    public boolean hasLocalTags() {
	Attribute attr;
	Hashtable tags;
	if((attr = getLocalAttribute(TAG_ATTR)) == null) return false;
	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return false;
	return true;
=====================================================================
Found a 9 line (50 tokens) duplication in the following files: 
Starting at line 1125 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1156 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

    public boolean hasTag(String tag) {
	Attribute attr;
	Hashtable tags;

	if(tag == null || tag.indexOf(',') >= 0) {
	    throw new RuntimeException("tag value null or contains a comma (" + tag + ")");
	}

	if((attr = getLocalAttribute(TAG_ATTR)) == null) {
=====================================================================
Found a 5 line (50 tokens) duplication in the following files: 
Starting at line 463 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 519 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

			    GrappaSupport.setHighlight((Element)(subg.currentSelection), DELETION_MASK, HIGHLIGHT_ON); 
			} else {
			    Vector vec = (Vector)(subg.currentSelection);
			    for(int i = 0; i < vec.size(); i++) {
				GrappaSupport.setHighlight((Element)(vec.elementAt(i)), DELETION_MASK, HIGHLIGHT_ON); 
=====================================================================
Found a 5 line (50 tokens) duplication in the following files: 
Starting at line 463 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 474 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

			    GrappaSupport.setHighlight((Element)(subg.currentSelection), 0, HIGHLIGHT_OFF); 
			} else {
			    Vector vec = (Vector)(subg.currentSelection);
			    for(int i = 0; i < vec.size(); i++) {
				GrappaSupport.setHighlight((Element)(vec.elementAt(i)), 0, HIGHLIGHT_OFF); 
=====================================================================
Found a 3 line (50 tokens) duplication in the following files: 
Starting at line 1095 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 1133 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

	grappaListener.grappaDragged(subgraph, gpt, modifiers, pressedElement, pressedPoint, pressedModifiers, outline, this);

	if((modifiers&java.awt.event.InputEvent.BUTTON1_MASK) != 0 && (modifiers&java.awt.event.InputEvent.BUTTON1_MASK) == modifiers) {
=====================================================================
Found a 9 line (50 tokens) duplication in the following files: 
Starting at line 505 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 840 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

			if(GrappaStyle.defaultStroke != grappaNexus.style.stroke) {
			    g2d.setStroke(grappaNexus.style.stroke);
			    grappaNexus.draw(g2d);
			    g2d.setStroke(GrappaStyle.defaultStroke);
			} else {
			    grappaNexus.draw(g2d);
			}
		    }
		    if(grappaNexus.lstr != null && nodeLabels) {
=====================================================================
Found a 5 line (50 tokens) duplication in the following files: 
Starting at line 920 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1506 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          case 3: // graph ::= error 
            {
              Object RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
=====================================================================
Found a 8 line (50 tokens) duplication in the following files: 
Starting at line 2228 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 2236 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

			if((getEnumerationTypes()&EDGE) != 0 && (enm = edgeElements()).hasMoreElements()) {
			    dictType = EDGE;
			    elem = (Element)enm.nextElement();
			} else {
			    dictType = 0;
			    enm = null;
			}
		    } else {
=====================================================================
Found a 10 line (50 tokens) duplication in the following files: 
Starting at line 1351 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1385 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(bb[i]<bb[index]){
                        index=i;
                    }
                }
                lastIndex++;
=====================================================================
Found a 10 line (50 tokens) duplication in the following files: 
Starting at line 842 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 880 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                        diff0 = min - value;
                        test = false;
                    }
                }
            }
            for(int i=0; i<array.length; i++){
                diff1 = value - array[i];
                if(diff1>=0 && diff1<diff0 ){
                    diff0 = diff1;
                    nearest = i;
=====================================================================
Found a 10 line (50 tokens) duplication in the following files: 
Starting at line 743 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 781 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                        diff0 = value - max;
                        test = false;
                    }
                }
            }
            for(int i=0; i<array.length; i++){
                diff1 = array[i]- value;
                if(diff1>=0.0D && diff1<diff0 ){
                    diff0 = diff1;
                    nearest = i;
=====================================================================
Found a 10 line (50 tokens) duplication in the following files: 
Starting at line 671 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 709 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                        diff0 = min - value;
                        test = false;
                    }
                }
            }
            for(int i=0; i<array.length; i++){
                diff1 = value - array[i];
                if(diff1>=0.0D && diff1<diff0 ){
                    diff0 = diff1;
                    nearest = i;
=====================================================================
Found a 5 line (50 tokens) duplication in the following files: 
Starting at line 572 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 604 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 636 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 668 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

   public Matrix arrayRightDivideEquals (Matrix B) {
      checkMatrixDimensions(B);
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            A[i][j] = A[i][j] / B.A[i][j];
=====================================================================
Found a 8 line (50 tokens) duplication in the following files: 
Starting at line 512 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 838 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
				C[i][j] = this.A[i][j];
			}
		}
		return C;
=====================================================================
Found a 6 line (50 tokens) duplication in the following files: 
Starting at line 57 of /usr/local/git/PipeCoursework/src/pipe/io/StateRecord.java
Starting at line 65 of /usr/local/git/PipeCoursework/src/pipe/io/StateRecord.java

	public void read1(int statesize, RandomAccessFile ipfile) throws IOException{
		state = new int[statesize];
		stateid = ipfile.readInt();
		for(int index = 0; index < state.length; index++){
			state[index] = ipfile.readInt();
		}
=====================================================================
Found a 3 line (50 tokens) duplication in the following files: 
Starting at line 602 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 624 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

							modString += " tagged_location== " + tagInputPlaceIndex[0] + 
				  			"? ( (double)" + rate + " -  ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[0]].getId(), i ) 
				  			+ "/(double)" + places[tagInputPlaceIndex[0]].getId() +") * " + rate + ") : ";
=====================================================================
Found a 14 line (50 tokens) duplication in the following files: 
Starting at line 376 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/CartesianGraphFrame.java

			int returnVal = fc.showSaveDialog(CartesianGraphFrame.this);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			
			try {
				fw = new FileWriter(saveFile);
			}
			catch (IOException e) {
				e.printStackTrace();
			}
			for(int i = 0; i < xlist.size(); i++) {
=====================================================================
Found a 3 line (50 tokens) duplication in the following files: 
Starting at line 439 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 461 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

							modString += " tagged_location== " + tagInputPlaceIndex[0] + 
				  			"? ( (double)" + rate + " -  ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[0]].getId(), i ) 
				  			+ "/(double)" + places[tagInputPlaceIndex[0]].getId() +") * " + rate + ") : ";
=====================================================================
Found a 4 line (50 tokens) duplication in the following files: 
Starting at line 625 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 71 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

			final Point2D.Double p2 = new Point2D.Double(	this.arc.getArcPath().getPoint(index).x,
															this.arc.getArcPath().getPoint(index).y);

			if (p1.y <= p2.y)
=====================================================================
Found a 8 line (50 tokens) duplication in the following files: 
Starting at line 251 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 380 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

		addMenuItem(fileMenu, ((Action) this.actions.get("SaveAs")));

		// File->QueryExporter
		JMenu exportMenu = new JMenu("Export");
		exportMenu.setIcon(new ImageIcon(Thread	.currentThread()
												.getContextClassLoader()
												.getResource(QueryManager.imgPath + "Export.png")));
		addMenuItem(exportMenu, ((Action) this.actions.get("EPS")));
=====================================================================
Found a 13 line (50 tokens) duplication in the following files: 
Starting at line 147 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java
Starting at line 141 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ConditionPlaceHandler.java

						 ((StateEditor)parent).addStateElement(place.getId(), operatorStr, targetStr);
						
						 // Update the UI
						 place.setCondition(operatorStr, targetStr);
						
						 closeWindow();				 
					 }
					 catch (Exception exp) {
						 System.out.println("Error creating state: " + exp);
					 }	
				 }
				 else {
					 JOptionPane.showMessageDialog(null, "Please specify the number of tokens for the condition (under 1,000).",
=====================================================================
Found a 17 line (50 tokens) duplication in the following files: 
Starting at line 51 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java
Starting at line 50 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ConditionPlaceHandler.java

		conditionEdit = new JDialog(parent, "Add condition to " + place.getName(), true);
		
		   
		// Set layout
		Container contentPane= conditionEdit.getContentPane();
		contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
		
			
		
		// Panel for entry of place condition for the state
		JPanel mainPanel = new JPanel();
		
		// combo box for operator
		operaterCombo = new JComboBox();
		
		// Add standard operators to combo-box
		operaterCombo.addItem("=");
=====================================================================
Found a 10 line (50 tokens) duplication in the following files: 
Starting at line 303 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 806 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java

		macro.addMacroNode(node);

		if (node instanceof OperationNode)
		{
			if (nodeOutgoingArcIDs.size() != 0)
				((OperationNode) node).setOutgoingArcIDs(nodeOutgoingArcIDs);
			if (nodeOperation != null)
			{
				((OperationNode) node).setOperation(nodeOperation);
			}
=====================================================================
Found a 8 line (50 tokens) duplication in the following files: 
Starting at line 81 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 108 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

			NodeList ptmlElements = macroDocument.getDocumentElement().getChildNodes();
			for (int i = 0; i < ptmlElements.getLength(); i++)
			{
				Node ptmlNode = ptmlElements.item(i);
				if (ptmlNode instanceof Element)
				{
					Element ptmlElement = (Element) ptmlNode;
					if ("macro".equals(ptmlElement.getNodeName()))
=====================================================================
Found a 10 line (50 tokens) duplication in the following files: 
Starting at line 141 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 147 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java

						((StateGroupEditor)parentDialog).addStateElement(place.getId(), operatorStr, targetStr);
						// Update the UI
						place.setCondition(operatorStr, targetStr);
						closeWindow();				 
					} catch (Exception exp) {
						System.out.println("Error creating state: " + exp);
					}	
				}
				else {
					JOptionPane.showMessageDialog(QueryManager.getEditor().getContentPane(),
=====================================================================
Found a 14 line (50 tokens) duplication in the following files: 
Starting at line 50 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 51 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java

		conditionEdit = new JDialog(parentDialog, "Add condition to " + place.getName(), true);

		// Set layout
		Container contentPane= conditionEdit.getContentPane();
		contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));

		// Panel for entry of place condition for the state
		JPanel mainPanel = new JPanel();

		// combo box for operator
		operaterCombo = new JComboBox();

		// Add standard operators to combo-box
		operaterCombo.addItem("<");
=====================================================================
Found a 14 line (50 tokens) duplication in the following files: 
Starting at line 239 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/CartesianGraphFrame.java

			int returnVal = fc.showSaveDialog(CartesianGraphFrame.this);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			
			try {
				fw = new FileWriter(saveFile);
			}
			catch (IOException e) {
				e.printStackTrace();
			}
			for(int i = 0; i < xlist.size(); i++) {
=====================================================================
Found a 16 line (50 tokens) duplication in the following files: 
Starting at line 57 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateEditor.java
Starting at line 65 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateEditor.java

	public void addState(DataLayer pnmlData)
	{
		appModel = pnmlData;
		activeStateGroup = new StateGroup(pnmlData);
		newStateGroup = true;
		init();
	}
	
	public void editState(DataLayer pnmlData, StateGroup editStateGroup)
	{
		appModel = pnmlData;
		activeStateGroup = editStateGroup;
		init();
	}
	
	public void setParent(Passage parentRef)
=====================================================================
Found a 16 line (50 tokens) duplication in the following files: 
Starting at line 69 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 125 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java

				passageTime();
			}
						
			// Write buffer to file
			modFileWriter.write(modString.toString());
			modFileWriter.close();
			System.out.println("Done");			
		}
		
		catch (IOException e3)
		{
			System.out.println("Could not write to file! " + file);
			e3.printStackTrace();
		}	
				
	}
=====================================================================
Found a 5 line (50 tokens) duplication in the following files: 
Starting at line 40 of /usr/local/git/PipeCoursework/test/pipe/gui/GuiFrameTest.java
Starting at line 61 of /usr/local/git/PipeCoursework/test/pipe/common/dataLayer/GuiViewTest.java

		Component button2 = getFinder().find(new Matcher(){
			public boolean matches(Component c){
				return JToggleButton.class.isInstance(c)
				&& ((JToggleButton)c).getAction().getValue(Action.NAME)
				.equals("Select");
=====================================================================
Found a 7 line (49 tokens) duplication in the following files: 
Starting at line 1252 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1266 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

    public void removeTag(String tag) {
	Attribute attr;
	Hashtable tags;
	if((attr = getLocalAttribute(TAG_ATTR)) == null) return;
	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return;
	tags.remove(tag);
=====================================================================
Found a 12 line (49 tokens) duplication in the following files: 
Starting at line 1181 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1197 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	if((attr = getDefaultAttribute(TAG_ATTR)) == null) return false;
	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return false;
	return(tags.containsKey(tag));
    }

    /**
     * Check if this Element is tagged at all either locally or with a default.
     *
     * @return true, if this Element is tagged at all
     */
    public boolean hasTags() {
=====================================================================
Found a 8 line (49 tokens) duplication in the following files: 
Starting at line 169 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java
Starting at line 204 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

    public String toString() {
	int ps = 0;
	int pe = gpts.length - 1;
	boolean spacer = false;
	StringBuffer buf = new StringBuffer();
	if((arrow&HEAD_ARROW_EDGE) != 0) {
	    buf.append("s,");
	    buf.append(gpts[ps].x);
=====================================================================
Found a 9 line (49 tokens) duplication in the following files: 
Starting at line 765 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 868 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

			grappaNexus.fill(g2d);
			if(GrappaStyle.defaultStroke != deletionStyle.stroke) {
			    g2d.setStroke(deletionStyle.stroke);
			    grappaNexus.draw(g2d);
			    g2d.setStroke(GrappaStyle.defaultStroke);
			} else {
			    grappaNexus.draw(g2d);
			}
		    } else if((edge.highlight&SELECTION_MASK) == SELECTION_MASK) {
=====================================================================
Found a 6 line (49 tokens) duplication in the following files: 
Starting at line 379 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 551 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

	tprnt = prnt = getParent();
	while (tprnt != null && !(tprnt instanceof javax.swing.JViewport))
	    tprnt = tprnt.getParent();
	if (tprnt != null)
	    prnt = tprnt;
	if (prnt instanceof javax.swing.JViewport) {
=====================================================================
Found a 29 line (49 tokens) duplication in the following files: 
Starting at line 99 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSize.java
Starting at line 60 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPoint.java

    }

    /**
     * Provides a string representation of this object consistent 
     * with Grappa attributes.
     *
     * @return attribute-suitable string representation of this GrappaPoint.
     */
    public String toAttributeString() {
	return(toFormattedString("%p"));
    }

    /**
     * Provides a formatted string representation of this object.
     * 
     * @param format the format used to build the string (<TT>%p</TT> is the base directive for a GrappaPoint).
     * @return a string representation of this GrappaPoint. 
     */
    public String toFormattedString(String format) {
	return(GrappaSupportPrintf.sprintf(new Object[] { format, this }));
    }

    /**
     * Provides a generic string representation of this object.
     * 
     * @return a generic string representation of this GrappaPoint. 
     */
    public String toString() {
	return(x+","+y);
=====================================================================
Found a 25 line (49 tokens) duplication in the following files: 
Starting at line 172 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 128 of /usr/local/git/PipeCoursework/src/att/grappa/Node.java

    }

    /**
     * Sets the node name to the supplied argument.
     * When the argument is null, setName() is called.
     *
     * @exception IllegalArgumentException when newName is not unique.
     * @param newName the new name for the node.
     * @see Node#setName()
     */
    public void setName(String newName) throws IllegalArgumentException {
	if(newName == null) {
	    setName();
	    return;
	}

	String oldName = name;
    
	// test if name is the same as the old name (if any)
	if(oldName != null && oldName.equals(newName)) {
	    return;
	}

	// is name unique?
	if(getGraph().findNodeByName(newName) != null) {
=====================================================================
Found a 22 line (49 tokens) duplication in the following files: 
Starting at line 177 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 214 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                                        }
                                        done = true;
                                }
                                else{
                                        cstring = cstring + (char) ch;
                                        i++;
                                 }
                        }
                        catch(java.io.IOException e){
                                done = true;
                        }
                }
                return Complex.parseComplex(cstring);
        }



        // Read a complex number from the keyboard console without a prompt message
        // in a String format compatible with Complex.parse,
        // e.g 2+j3, 2 + j3, 2+i3, 2 + i3
        // prompt = Prompt message to vdu
        public static final synchronized Complex readComplex()
=====================================================================
Found a 5 line (49 tokens) duplication in the following files: 
Starting at line 301 of /usr/local/git/PipeCoursework/src/jama/LUDecomposition.java
Starting at line 189 of /usr/local/git/PipeCoursework/src/jama/CholeskyDecomposition.java

            X[k][j] /= L[k][k];
         }
         for (int i = 0; i < k; i++) {
            for (int j = 0; j < nx; j++) {
               X[i][j] -= X[k][j]*L[k][i];
=====================================================================
Found a 5 line (49 tokens) duplication in the following files: 
Starting at line 532 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1328 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
				this.A[i][j] = this.A[i][j] - B.A[i][j];
=====================================================================
Found a 9 line (49 tokens) duplication in the following files: 
Starting at line 687 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 705 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

	public int hasTaggedArcAndPlace()
	{
		final Iterator arcIterator = this.arcAngleList.iterator();
		while (arcIterator.hasNext())
		{
			final ArcAngleCompare thisArc = (ArcAngleCompare) arcIterator.next();
			
			if( thisArc.arc.getSource() instanceof Place )
			if(thisArc.arc.isTagged()  && ((Place)thisArc.arc.getSource()).isTagged() ){
=====================================================================
Found a 10 line (49 tokens) duplication in the following files: 
Starting at line 36 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/GraphFrame.java
Starting at line 43 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/CartesianGraphFrame.java

		setSize(600,600);
		setLocation(100,100);
		
		addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent wev) {
				Window w = wev.getWindow();
				w.setVisible(false);
				w.dispose();
			}
		});
=====================================================================
Found a 23 line (49 tokens) duplication in the following files: 
Starting at line 69 of /usr/local/git/PipeCoursework/src/pipe/io/RGFileHeader.java
Starting at line 84 of /usr/local/git/PipeCoursework/src/pipe/io/NewRGFileHeader.java

		offsettotransitions = inputBuf.getLong();
	}

	public int getNumStates(){
		return numstates;
	}
	
	public int getStateArraySize(){
		return statearraysize;
	}
	
	public int getNumTransitions(){
		return numtransitions;
	}
	
	public int getTransitionRecordSize(){
		return transitionrecordsize;
	}
	
	public long getOffsetToTransitions(){
		return offsettotransitions;
	}
}
=====================================================================
Found a 4 line (49 tokens) duplication in the following files: 
Starting at line 29 of /usr/local/git/PipeCoursework/src/pipe/io/StateRecord.java
Starting at line 26 of /usr/local/git/PipeCoursework/src/pipe/io/NewStateRecord.java

	public NewStateRecord(Marking newstate){
		stateid = newstate.getIDNum();
		state = new int[newstate.getState().length];
		System.arraycopy(newstate.getState(), 0, state, 0, newstate.getState().length);
=====================================================================
Found a 7 line (49 tokens) duplication in the following files: 
Starting at line 185 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 350 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

      if(compareWeighting) s+="<br>Weighting= \"" + source[i].getWeight() + "\"";
      results.add(s);
    }
    // Fill in unmatched comparison arcs
    for(i=0;i<comparison.length;i++) if(comparison[i]!= null) {
      results.add("");
      results.add(comparison[i].getSource().getName()+"->"+comparison[i].getTarget().getName());
=====================================================================
Found a 12 line (49 tokens) duplication in the following files: 
Starting at line 164 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java
Starting at line 270 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java

				((BoolNode) this.node).setNodeLabel(nodeLabel);

				if (MacroManager.getEditor() == null)
				{
					// not in macro mode
					QueryManager.getData().updateNode(this.node);
				}
				else
				{
					// in macro mode
					MacroManager.getEditor().updateNode(this.node);
				}
=====================================================================
Found a 7 line (49 tokens) duplication in the following files: 
Starting at line 55 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeObject.java
Starting at line 57 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPathPoint.java

		if (MacroManager.getEditor() == null) {
			if (QueryManager.getEditor()!=null) 
				addZoomController(QueryManager.getView().getZoomController());
		}
		else {
			addZoomController(MacroManager.getView().getZoomController());
		}
=====================================================================
Found a 13 line (49 tokens) duplication in the following files: 
Starting at line 95 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/InIntervalNode.java
Starting at line 105 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ArithOpNode.java

						description += QueryManager.addColouring("another numerical value that has not been specified yet ");
						QueryManager.colourDown();
					}
				}	
			}
		}
		else {
			QueryManager.colourUp();
			description += QueryManager.addColouring("a numerical value that has not been specified yet ");
			QueryManager.colourDown();
			description += QueryManager.addColouring(op);
			QueryManager.colourUp();
			description += QueryManager.addColouring("another numerical value that has also not been specified yet ");
=====================================================================
Found a 5 line (49 tokens) duplication in the following files: 
Starting at line 76 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 833 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java

		StateLabelManager.popupDialog = new JDialog(QueryManager.getEditor(), "State Label Manager", true);
		StateLabelManager.popupDialog.setMinimumSize(new Dimension(730, 450));
		Container contentPane = StateLabelManager.popupDialog.getContentPane();
		contentPane.setLayout(new BoxLayout(contentPane, BoxLayout.PAGE_AXIS));
		contentPane.add(StateLabelManager.getStateLabelManagementPanel(true));
=====================================================================
Found a 8 line (49 tokens) duplication in the following files: 
Starting at line 63 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryTransformer.java
Starting at line 63 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroTransformer.java

			outputObjectArrayList = new File(System.getProperty("java.io.tmpdir") + System.getProperty("file.separator") + "MacroDocument.xml"); 			
			outputObjectArrayList.deleteOnExit();
			StreamSource source = new StreamSource(filename);
			StreamResult result = new StreamResult(outputObjectArrayList);
			transformer.transform(source, result);
			document = getDOM(outputObjectArrayList);    
		} catch (IOException e) {
			System.out.println("IOException thrown in transformPTML(String filename) : modules.queryeditor.io.MacroTransformer");
=====================================================================
Found a 8 line (49 tokens) duplication in the following files: 
Starting at line 99 of /usr/local/git/PipeCoursework/test/pipe/dataLayer/calculations/StateSpaceGeneratorTest.java
Starting at line 117 of /usr/local/git/PipeCoursework/test/pipe/dataLayer/calculations/StateSpaceGeneratorTest.java

					for (int j = 0; j < sl1.size(); j++){

						if (j != i)	assertFalse("There are duplicate entries in the state records",
								sl1.compareMarking(sl1.get(i), sl1.get(j)));

					}
				}
			}
=====================================================================
Found a 5 line (48 tokens) duplication in the following files: 
Starting at line 463 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 505 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

			    ((Element)(subg.currentSelection)).setSubgraph(newsubg);
			} else {
			    Vector vec = (Vector)(subg.currentSelection);
			    for(int i = 0; i < vec.size(); i++) {
				GrappaSupport.setHighlight((Element)(vec.elementAt(i)), 0, HIGHLIGHT_OFF); 
=====================================================================
Found a 4 line (48 tokens) duplication in the following files: 
Starting at line 88 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 257 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

		    } else {
			Vector vec = ((Vector)(subg.currentSelection));
			for(int i = 0; i < vec.size(); i++) {
			    ((Element)(vec.elementAt(i))).highlight = 0;
=====================================================================
Found a 8 line (48 tokens) duplication in the following files: 
Starting at line 505 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 754 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

		    if(GrappaStyle.defaultStroke != grappaNexus.style.stroke) {
		        g2d.setStroke(grappaNexus.style.stroke);
		        grappaNexus.draw(g2d);
		        g2d.setStroke(GrappaStyle.defaultStroke);
		    } else {
		        grappaNexus.draw(g2d);
		    }
		}
=====================================================================
Found a 8 line (48 tokens) duplication in the following files: 
Starting at line 1497 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1520 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

     public boolean hasEmptySubgraphs() {
	if(
	   (graphdict == null || graphdict.size() == 0)
	   &&
	   (nodedict == null || nodedict.size() == 0)
	   &&
	   (edgedict == null || edgedict.size() == 0)
	   ) {
=====================================================================
Found a 14 line (48 tokens) duplication in the following files: 
Starting at line 1305 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1354 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	Attribute attr = null;
	Hashtable tags;
	switch(type) {
	case NODE:
	    attr = getNodeAttribute(TAG_ATTR);
	    break;
	case EDGE:
	    attr = getEdgeAttribute(TAG_ATTR);
	    break;
	case SUBGRAPH:
	    attr = getLocalAttribute(TAG_ATTR);
	    break;
	}
	if(attr == null) return false;
=====================================================================
Found a 18 line (48 tokens) duplication in the following files: 
Starting at line 399 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 519 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	Attribute attr = (Attribute)edgeAttributes.remove(name);
	if(attr == null) return;
	attr.setValue("");
	if(attr.hasChanged()) attr.notifyObservers(new Long(System.currentTimeMillis()));
	attr.deleteObservers();
    }

    /**
     * Sets the subgraph-specific default for the specified graph attribute.
     * If the attribute is not from the parent subgraph, then
     * setAttribute(attr.getName(), attr.getValue()) is called.
     * Overrides Element method.
     *
     * @param attr the graph attribute pair to set.
     * @return the attribute pair previously stored for this attribute.
     * @see Subgraph#setAttribute(java.lang.String, java.lang.String)
     */
    public Object setAttribute(Attribute attr) {
=====================================================================
Found a 8 line (48 tokens) duplication in the following files: 
Starting at line 968 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1032 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

		this.forwardsIncidenceMatrix.setToZero();

		for (int i = 0; i < this.arcsArray.size(); i++)
		{
			arc = (Arc) this.arcsArray.get(i);
			if (arc != null)
			{
				PetriNetObject pnObject = arc.getTarget();
=====================================================================
Found a 17 line (48 tokens) duplication in the following files: 
Starting at line 421 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 355 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java

	}

	/**
	 * Paints the Place component taking into account the number of tokens from
	 * the currentMarking
	 * 
	 * @param g
	 *            The Graphics object onto which the Place is drawn.
	 */
	@Override
	public void paintComponent(final Graphics g)
	{
		super.paintComponent(g);

		final Graphics2D g2 = (Graphics2D) g;
		final AffineTransform saveXform = g2.getTransform();
		final AffineTransform scaledXform = this.getZoomController().getTransform();
=====================================================================
Found a 23 line (48 tokens) duplication in the following files: 
Starting at line 432 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LaplaceTransformInverter.java
Starting at line 684 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LTIMapRed.java

	}
	
	 /**
	  * Main Entry point to distributed Laplace Transform Inverter. Overloads method in
	  * LaplaceTransformInverter class
	  * @param pstartStates
	  * @param ptargetStates
	  * @param startTime
	  * @param stopTime
	  * @param step
	  * @param MatrixQind
	  * @param MatrixQdata
	  * @param MatrixQTorV
	  * @param numMaps Requested number of map tasks
	  * @param pi The steady state vector of the Petri net
	  * @param res Boolean - want to calculate response time distribution
	  * @param cdf Boolean - want to calculate cumulative distribution function
	  * @return
	  * @throws IOException
	  * @throws NotConvergingException
	  */
	public  ArrayList<Double> getResponseTime(ArrayList<Integer> pstartStates, HashMap<Integer, Integer> ptargetStates, double startTime,
			double stopTime, double step, int[][] MatrixQind, double[] MatrixQdata, boolean[] MatrixQTorV, 
=====================================================================
Found a 16 line (48 tokens) duplication in the following files: 
Starting at line 129 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/ResultsHTMLPane.java
Starting at line 69 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/CartesianGraphFrame.java

		   	StringSelection data=new StringSelection(xlist.toString());
		   	try {
		   		clipboard.setContents(data,data);
		   	} catch (IllegalStateException e) {
		   		System.out.println("Error copying to clipboard, seems it's busy?");
		   	}
		}
	};
	
	/**
	 * Code for when the save button is pressed. Converts the data to a Comma Seperated
	 * Variable file of format t value, probability, etc. Creates JFileChooser so user
	 * can select file name
	 */
	private ActionListener SaveHandler=new ActionListener() {
	  	public void actionPerformed(ActionEvent arg0) {
=====================================================================
Found a 15 line (48 tokens) duplication in the following files: 
Starting at line 170 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 901 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

				}
			}
			if (hasTimed && hasImmediate){
				for (int i = 0; i<transCount; i++){
					if (transArray[i].isTimed()==true){
						result[i] = false;
					}
				}
			}
		/*}*/
		
		/*System.out.println("getTransitionEnabledStatusArray:");
		printArray(result);*/
		return result;
	}
=====================================================================
Found a 13 line (48 tokens) duplication in the following files: 
Starting at line 69 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 55 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultBarChartPlotter.java

														graphData = ResultBarChartPlotter.this.chart.getXYPlot()
																									.getDataset();

														int size = graphData.getItemCount(0);

														FileWriter fw = null;
														StringBuffer content = new StringBuffer();

														File saveFile;

														JFileChooser fc = new JFileChooser();

														int returnVal = fc.showSaveDialog(ResultBarChartPlotter.this.resultsPanel);
=====================================================================
Found a 10 line (48 tokens) duplication in the following files: 
Starting at line 319 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 285 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

    edit_window.updatePreferredSize();
	}

	public int getSelectionCount() {
		Component netObj[] = edit_window.getComponents();
		int selectionCount = 0;
		// Get all the objects in the current window
		for (int i=0; i<netObj.length; i++) {
			// Handle Arcs and Arc Points
			if ((netObj[i] instanceof Arc) && ((PetriNetObject)netObj[i]).isSelectable())	{
=====================================================================
Found a 9 line (48 tokens) duplication in the following files: 
Starting at line 1030 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java
Starting at line 202 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java

			if ((netObj[i] instanceof PerformanceTreeObject) && (((PerformanceTreeObject)netObj[i]).isSelected())) {
				if (netObj[i] instanceof PerformanceTreeArc) {
					if (QueryManager.allowDeletionOfArcs) {
						((PerformanceTreeArc)netObj[i]).delete();
					}
				}
				else if (netObj[i] instanceof PerformanceTreeNode) {
					//delete node is not allowed in text query editor mode
					if (((PerformanceTreeNode)netObj[i]).enablePopup){
=====================================================================
Found a 12 line (48 tokens) duplication in the following files: 
Starting at line 201 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 737 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

				myCurrentPoint.setControl2(this.getControlPoint(myCurrentPoint.getPoint(),
																myPreviousPoint.getPoint(),
																myCurrentPoint.getPoint(),
																myPreviousPoint.getPoint()));
			}

			else
			{
				if (c > 1 && myPreviousPoint.getPointType() == false)
				{

					myPreviousButOnePoint = (ArcPathPoint) this.pathPoints.get(c - 2);
=====================================================================
Found a 12 line (48 tokens) duplication in the following files: 
Starting at line 185 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java
Starting at line 204 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java

			mapIterator = this.optionalChildNodesOrdered.iterator();
			while (mapIterator.hasNext())
			{
				role = (String) mapIterator.next();
				arc = new PerformanceTreeArc(	arcStartPointX,
												arcStartPointY,
												arcEndPointX,
												arcEndPointY,
												this,
												role,
												this.showArcLabels);
				arc.setRequired(false);
=====================================================================
Found a 19 line (48 tokens) duplication in the following files: 
Starting at line 546 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 577 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

						QueryManager.getData().addStateLabel(stateLabel, stateName);
					}
				}
			}
		}
	}

	/**
	 * Extracts action labels from the xml document and stores them in QueryData
	 * 
	 * @param inputElement
	 */
	private static void createActionLabel(final Element inputElement)
	{
		// retrieve info from element's elements
		String actionLabel = "";
		String retrievedActionLabel = inputElement.getAttribute("label");
		if (retrievedActionLabel.length() > 0)
			actionLabel = retrievedActionLabel;
=====================================================================
Found a 7 line (48 tokens) duplication in the following files: 
Starting at line 57 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryTransformer.java
Starting at line 57 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroTransformer.java

					"io"+System.getProperty("file.separator")+"LoadMacroXML.xsl"));		
			
			if (xsltSource == null)
				System.out.println("xsltSource is null");
			
			Transformer transformer = TransformerFactory.newInstance().newTransformer(xsltSource);	
			outputObjectArrayList = new File(System.getProperty("java.io.tmpdir") + System.getProperty("file.separator") + "MacroDocument.xml"); 			
=====================================================================
Found a 6 line (48 tokens) duplication in the following files: 
Starting at line 31 of /usr/local/git/PipeCoursework/test/pipe/modules/reachabilityGraphGenerator/ReachabilityGraphTest.java
Starting at line 38 of /usr/local/git/PipeCoursework/test/pipe/modules/gspn/GSPNAnalysisTest.java

		gspn = new GSPNNew();
		nets = new File(new URI(this.getClass().getClassLoader().
				getResource("Example nets").toString())).listFiles();
		currentMarkings = new ArrayList();
		testNets = new ArrayList();
		addNets("gspn1");
=====================================================================
Found a 11 line (47 tokens) duplication in the following files: 
Starting at line 176 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java
Starting at line 213 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

	    buf.append(gpts[ps++].y);
	    spacer = true;
	}
	if((arrow&TAIL_ARROW_EDGE) != 0) {
	    if(spacer) {
		buf.append(" e,");
	    } else {
		buf.append("e,");
		spacer = true;
	    }
	    buf.append(gpts[pe].x);
=====================================================================
Found a 9 line (47 tokens) duplication in the following files: 
Starting at line 831 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 878 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

			grappaNexus.fill(g2d);
			if(GrappaStyle.defaultStroke != selectionStyle.stroke) {
			    g2d.setStroke(selectionStyle.stroke);
			    grappaNexus.draw(g2d);
			    g2d.setStroke(GrappaStyle.defaultStroke);
			} else {
			    grappaNexus.draw(g2d);
			}
		    } else {
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1501 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1541 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(32/*NT$0*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= graph EOF 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1488 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1530 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(9/*graph*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // NT$0 ::= 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1440 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1516 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(9/*graph*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // graph ::= hdr NT$0 body 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1429 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1501 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(9/*graph*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // graph ::= error 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1396 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1407 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1440 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(1/*optStrict*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // hdr ::= STRICTDIGRAPH optGraphName 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1382 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1429 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(1/*optStrict*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // optStrict ::= STRICT 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1371 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1488 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(10/*hdr*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // graph ::= 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1362 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1396 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(6/*optGraphName*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // graphType ::= DIGRAPH 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1353 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1382 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(6/*optGraphName*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // optGraphName ::= ATOM 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1344 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1454 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(10/*hdr*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // hdr ::= STRICTGRAPH optGraphName 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1335 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1362 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(12/*optStmtList*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // body ::= LCUR optStmtList RCUR 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1317 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1344 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(13/*stmtList*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // optStmtList ::= 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1308 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1371 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(11/*body*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // optGraphName ::= 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1261 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1284 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1335 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(13/*stmtList*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // stmtList ::= stmtList stmt 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1217 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1247 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1353 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(12/*optStmtList*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // optStmtList ::= stmtList 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1205 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1261 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(31/*edge_op*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // edge_op ::= D_EDGE_OP 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1196 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1308 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(18/*compound*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // stmt ::= compound optSemi 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1170 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1187 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1317 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(14/*stmt*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // stmt ::= attrStmt optSemi 
=====================================================================
Found a 3 line (47 tokens) duplication in the following files: 
Starting at line 1163 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1508 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              Object RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1156 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1217 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(3/*rCompound*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // rCompound ::= edge_op NT$1 simple rCompound 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1145 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1196 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(21/*nodeList*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // nodeList ::= node 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1117 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1128 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1205 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(21/*nodeList*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // rCompound ::= 
=====================================================================
Found a 3 line (47 tokens) duplication in the following files: 
Starting at line 1110 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1163 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              String RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1103 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1128 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(15/*attrStmt*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // attrStmt ::= attrType optMacroName attrList 
=====================================================================
Found a 3 line (47 tokens) duplication in the following files: 
Starting at line 1096 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1163 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              String RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1089 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1128 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(15/*attrStmt*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // attrStmt ::= attrType optMacroName attrList 
=====================================================================
Found a 3 line (47 tokens) duplication in the following files: 
Starting at line 1082 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1163 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              String RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1075 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1170 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(8/*optPort*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // node ::= ATOM optPort 
=====================================================================
Found a 3 line (47 tokens) duplication in the following files: 
Starting at line 1068 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1300 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              Object RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1061 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1156 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(8/*optPort*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // optPort ::= COLON ATOM 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1050 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1089 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(4/*attrType*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // attrType ::= NODE 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1041 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1061 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(7/*optMacroName*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // optMacroName ::= ATOM EQUAL 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1032 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1235 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(3/*rCompound*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // NT$1 ::= 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1023 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1050 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(20/*optAttr*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // optMacroName ::= 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1014 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1041 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(20/*optAttr*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // optAttr ::= attrList 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 1005 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1023 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(26/*optAttrDefs*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // attrList ::= optAttr LBR optAttrDefs RBR 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 996 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1145 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(15/*attrStmt*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // optPort ::= 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 978 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1005 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(27/*attrDefs*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // optAttrDefs ::= 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 969 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 996 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(27/*attrDefs*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // attrDefs ::= attrItem 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 952 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1075 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(7/*optMacroName*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // attrType ::= EDGE 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 938 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 978 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(28/*attrItem*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // attrItem ::= attrAssignment 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 929 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1014 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(26/*optAttrDefs*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // optAttrDefs ::= attrDefs 
=====================================================================
Found a 3 line (47 tokens) duplication in the following files: 
Starting at line 922 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1082 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              Integer RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 915 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 969 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(29/*attrAssignment*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // attrItem ::= attrMacro 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 898 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 952 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(30/*attrMacro*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // attrAssignment ::= ATOM EQUAL ATOM 
=====================================================================
Found a 3 line (47 tokens) duplication in the following files: 
Starting at line 891 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1082 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              Integer RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 884 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 938 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(25/*graphAttrDefs*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // attrMacro ::= ATSIGN ATOM 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 873 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 929 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(34/*NT$2*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // graphAttrDefs ::= attrAssignment 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 862 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 884 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(5/*optSubgHdr*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // optSubgHdr ::= SUBGRAPH ATOM 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 853 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 873 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(5/*optSubgHdr*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // optSubgHdr ::= SUBGRAPH 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 835 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 862 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(16/*optSemi*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // optSubgHdr ::= 
=====================================================================
Found a 6 line (47 tokens) duplication in the following files: 
Starting at line 826 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 853 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(16/*optSemi*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // optSemi ::= SEMI 
=====================================================================
Found a 10 line (47 tokens) duplication in the following files: 
Starting at line 1236 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1253 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1270 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1287 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1304 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1321 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static void print(String[] aa){
            for(int i=0; i<aa.length; i++){
                System.out.print(aa[i]+"   ");
            }
            System.out.println();
        }

        // print an array of Strings to screen
        // with line returns
        public static void println(String[] aa){
=====================================================================
Found a 4 line (47 tokens) duplication in the following files: 
Starting at line 630 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 643 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            for(int i=1; i<array.length; i++){
                if(Math.abs(array[i] - value)<diff){
                    diff = Math.abs(array[i] - value);
                    nearest = i;
=====================================================================
Found a 12 line (47 tokens) duplication in the following files: 
Starting at line 958 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1019 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

	private void createForwardIncidenceMatrix()
	{// m

		int placeNo = 0, transitionNo = 0;
		final int placeSize = this.placesArray.size();
		final int transitionSize = this.transitionsArray.size();

		Arc arc = null;
		Place place = null;
		Transition transition = null;

		this.forwardsIncidenceMatrix = new PNMatrix(placeSize, transitionSize);
=====================================================================
Found a 5 line (47 tokens) duplication in the following files: 
Starting at line 512 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1306 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
				C[i][j] = this.A[i][j] - B.A[i][j];
=====================================================================
Found a 22 line (47 tokens) duplication in the following files: 
Starting at line 594 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 482 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

	private static double prob(DataLayer pnmlData, State v, State vprime){
		return rateorprob(pnmlData, v, vprime, PROBABILITY);
	}
	
	private static double rate(DataLayer pnmlData, State s, State sprime){
		return rateorprob(pnmlData, s, sprime, RATE);
	}
	
	/**
	 * Records the fact that there is a transition firing sequence 
	 * from whatever the current tangible state is to the tangible
	 * state sprime with an effective transition firing rate r.
	 * Note it does not need to know what the current tangible state
	 * actually is, it just needs a reference to the list of arcs
	 * from that state.
	 * 
	 * @param sprime
	 * @param r
	 * @param arclist		A linked list of arcs from the current
	 * 						tangible state.
	 */
	private static int transition(Marking sprime, double r, LinkedList arclist){
=====================================================================
Found a 16 line (47 tokens) duplication in the following files: 
Starting at line 392 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 107 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/CartesianGraphFrame.java

				content.append(ylist.get(i));
				content.append(",\n");				
			}
	  		String content1 = content.toString();
	  		
	  		try {
		  		fw.write(content1);
		  		fw.close();
	  		}
	  		catch (Exception e) {
	  			e.printStackTrace();
	  		}
	  	}
	  };

}
=====================================================================
Found a 22 line (47 tokens) duplication in the following files: 
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateEditor.java
Starting at line 36 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/StateEditor.java

public class StateEditor extends JDialog
{

	private static final long serialVersionUID = 1L;

	DataLayer appModel;
	StateViewer viewer;
	ArrayList<StateElement> changeBuffer;
	StateGroup activeStateGroup;
	
	
	// Required to update 'Passage' with any new groups
	Passage parent =null;
	boolean newStateGroup = false;
	
	JDialog stateDialog;
	JTextField stateNameTextField;
	JButton saveStateGroupBtn, cancelBtn;
	JButton initialStateBtn, allZeroBtn, clearStatesBtn;
	
	
	public void addState(DataLayer pnmlData)
=====================================================================
Found a 16 line (47 tokens) duplication in the following files: 
Starting at line 1066 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 1095 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

				createNewTab(null);
				QueryEditor.this.queryView.getSelectionObject().enableSelection();
				QueryEditor.this.queryEditor.pack(); // Make window fit
				// contents' preferred
				// size
				QueryEditor.this.queryEditor.setLocationRelativeTo(null); // Move
				// window
				// to
				// the
				// middle
				// of
				// the
				// screen
				QueryEditor.this.queryEditor.setVisible(true); // Make window
				// appear
				QueryEditor.this.queryView.drawResultNode();
=====================================================================
Found a 9 line (47 tokens) duplication in the following files: 
Starting at line 876 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 611 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

				JOptionPane.showMessageDialog(GuiFrame.this,"Error loading file:\n"+filename+"\nGuru meditation:\n"+e.toString(),"File load error",
						JOptionPane.ERROR_MESSAGE);
				e.printStackTrace();
				return;
			}
		}
		ViewExpansionComponent expand = new ViewExpansionComponent(
				getWidth(), getHeight());
		expand.addZoomController(appView.getZoomController());
=====================================================================
Found a 16 line (47 tokens) duplication in the following files: 
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java
Starting at line 281 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java

	public static int getMode() {
		return mode;
	}
	
	public static void setMode(int _mode) {
		if (mode != _mode){		// Don't bother unless new mode is different.
			prev_mode = mode;
			mode = _mode;
		}
	}

	public static void restoreMode() {
		mode = prev_mode;
	}
	
	public static ProgressWindow getProgressWindow() {
=====================================================================
Found a 7 line (47 tokens) duplication in the following files: 
Starting at line 399 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 334 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java

			if (e.getButton() == MouseEvent.BUTTON1)
			{
				Point start = e.getPoint();
				double startX = start.x - QueryConstants.NODE_WIDTH / 2;
				double startY = start.y - QueryConstants.NODE_HEIGHT / 2;

				switch (QueryManager.getMode())
=====================================================================
Found a 8 line (47 tokens) duplication in the following files: 
Starting at line 377 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 338 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

	public void addArc(final Arc arcInput)
	{
		boolean unique = true;
		if (arcInput != null)
		{
			if (arcInput.getId() != null && arcInput.getId().length() > 0)
			{
				for (int i = 0; i < this.arcsArray.size(); i++)
=====================================================================
Found a 4 line (47 tokens) duplication in the following files: 
Starting at line 402 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java
Starting at line 419 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java

		inputBuf.position((int)rgHeader.getOffsetToTransitions());
		for(int record = 0; record < numtransitions; record++){
			currentTrans.read(inputBuf);
			if(currentTrans.getFromState() != currentTrans.getToState()){
=====================================================================
Found a 36 line (47 tokens) duplication in the following files: 
Starting at line 104 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/SteadyState.java
Starting at line 132 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java

	    setupPanel.add(new ButtonBar("Validate", validateClick));
	    setupPanel.add(new ButtonBar("Analyse",analyseButtonClick));
	    

	 // 6 Add setup panel to tabbed pane, add tabbed pane to guiDialog
	    tabbedPane.addTab("Setup", setupPanel);  
	    //System.out.println("get analysis panel done");
	    contentPane.add(tabbedPane);
	    
	    
	 // 7 Make window fit contents' preferred size, centre on screen, display
	    guiDialog.pack();
	    guiDialog.setLocationRelativeTo(null);    
	    guiDialog.setVisible(true);
	    
	    
	}

	/*
	public void itemStateChanged(ItemEvent e) {
	    Object source = e.getItemSelectable();

	    if (source == autoTimeBox) {
	        if(autoTimeBox.isSelected()){
	        	startTime.setEnabled(false);
	        	endTime.setEnabled(false);
	        	timeStep.setEnabled(false);
	        }else{
	        	startTime.setEnabled(true);
	        	endTime.setEnabled(true);
	        	timeStep.setEnabled(true);	        	
	        }
	    } 
	}*/
	
	ActionListener validateClick= new ActionListener() 
=====================================================================
Found a 26 line (47 tokens) duplication in the following files: 
Starting at line 104 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/SteadyState.java
Starting at line 114 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

    setupPanel.add( getAnalysisPanel() );
/*
    clearCacheBox = new JCheckBox("Clear cached values from server"); 
    setupPanel.add(clearCacheBox);
    
    autoTimeBox = new JCheckBox("Automatically determine time range"); 
    setupPanel.add(autoTimeBox);

    autoTimeBox.addItemListener(this);
 */   
    
    // 5 Add Analyse button
    setupPanel.add(new ButtonBar("Analyse",analyseButtonClick));
    
    
    // 6 Add setup panel to tabbed pane, add tabbed pane to guiDialog
    tabbedPane.addTab("Setup", setupPanel);    
    contentPane.add(tabbedPane);
    
    
    // 7 Make window fit contents' preferred size, centre on screen, display
    guiDialog.pack();
    guiDialog.setLocationRelativeTo(null);    
    guiDialog.setVisible(true);

  }
=====================================================================
Found a 16 line (47 tokens) duplication in the following files: 
Starting at line 255 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 107 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/CartesianGraphFrame.java

				content.append(ylist.get(i));
				content.append(",\n");				
			}
	  		String content1 = content.toString();
	  		
	  		try {
		  		fw.write(content1);
		  		fw.close();
	  		}
	  		catch (Exception e) {
	  			e.printStackTrace();
	  		}
	  	}
	  };

}
=====================================================================
Found a 23 line (47 tokens) duplication in the following files: 
Starting at line 235 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 219 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

	    	}
	    	
	    	
	    	progressPane.setText(statusMesg);
	    }

	
	  };
	  
	  
	  /**
	   * This ActionListener responds to the buttons within the
	   * state group selection panel    
	   * i.e. the Add, Remove, Edit buttons
	   */
	  ActionListener stateButtonClick = new ActionListener()
	  {		  
		  public void actionPerformed(ActionEvent event)
		  {
			  if (event.getSource() == addBtn)
			  {
				  StateEditor addState = new StateEditor();
				  addState.setParent(Passage.this);
=====================================================================
Found a 9 line (46 tokens) duplication in the following files: 
Starting at line 307 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 361 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

			shape = new RoundRectangle2D.Double(pos.x, pos.y, width, height, arcWidthFactor * width, arcHeightFactor * height);
		    }
		    if(Peripheries != null && peripheries > 1) {
			path = new GeneralPath(shape);
			for(int i = 1; i < peripheries; i++) {
			    if(Grappa.centerPointNodes) {
				path.append
				    (
				     new RoundRectangle2D.Double
=====================================================================
Found a 4 line (46 tokens) duplication in the following files: 
Starting at line 980 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1116 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                    if(Math.abs(b.real)>=Math.abs(b.imag)){
                        ratio=b.imag/b.real;
                        denom=b.real+b.imag*ratio;
                        c.real=(this.real+this.imag*ratio)/denom;
=====================================================================
Found a 8 line (46 tokens) duplication in the following files: 
Starting at line 765 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 936 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            int max = array[0];
            int maxI = 0;
            while(test){
                if(array[ii]>max){
                    max = array[ii];
                    maxI = ii;
                }
                if((array[ii] - value )>=0){
=====================================================================
Found a 8 line (46 tokens) duplication in the following files: 
Starting at line 693 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 864 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            int min = array[0];
            int minI = 0;
            while(test){
                if(array[ii]<min){
                    min = array[ii];
                    minI = ii;
                }
                if((value - array[ii])>=0){
=====================================================================
Found a 5 line (46 tokens) duplication in the following files: 
Starting at line 208 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 301 of /usr/local/git/PipeCoursework/src/jama/LUDecomposition.java

            X[k][j] /= LU[k][k];
         }
         for (int i = 0; i < k; i++) {
            for (int j = 0; j < nx; j++) {
               X[i][j] -= X[k][j]*LU[i][k];
=====================================================================
Found a 7 line (46 tokens) duplication in the following files: 
Starting at line 1378 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1755 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		final PNMatrix X = new PNMatrix(this.n, this.m);
		final int[][] C = X.getArray();
		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
				C[j][i] = this.A[i][j];
=====================================================================
Found a 7 line (46 tokens) duplication in the following files: 
Starting at line 530 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1728 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

	public PNMatrix timesEquals(final int s)
	{
		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
				this.A[i][j] = s * this.A[i][j];
=====================================================================
Found a 7 line (46 tokens) duplication in the following files: 
Starting at line 510 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1755 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		final PNMatrix X = new PNMatrix(this.n, this.m);
		final int[][] C = X.getArray();
		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
				C[j][i] = this.A[i][j];
=====================================================================
Found a 30 line (46 tokens) duplication in the following files: 
Starting at line 261 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/myNode.java
Starting at line 410 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/myNode.java

					children[transIndex - 1].RecursiveExpansion(statespace, timedTrans);
				}
			}
		}
		if(!A_Transition_Is_Enabled){
			if(!tree.no_Enabled_Transitions || tree.pathToDeadlock.length<depth-1){
				RecordDeadlockPath();
				tree.no_Enabled_Transitions = true;
			} else {
//			System.out.println("Deadlocked node found, but path is not shorter than current path.");
			}
		} else{
//			System.out.println("Transitions enabled.");
		}
	}

	
	
	/*----------------------------------------------------------------------
	 Function: void InsertOmegas()

	 Checks if any omegas need to be inserted in the places of a given node.
	 Omegas (shown by -1 here) represent unbounded places and are therefore
	 important when testing whether a petri net is bounded. This function
	 checks each of the ancestors of a given node.
	 Returns true iff all places now contain an omega.

	 -----------------------------------------------------------------------*/

	public boolean InsertOmegas() {
=====================================================================
Found a 3 line (46 tokens) duplication in the following files: 
Starting at line 671 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 694 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

				  			modString += "tagged_location== " + tagInputPlaceIndex[0] + 
				  			"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[0]].getId(), i ) 
				  			+ "/(double)" + places[tagInputPlaceIndex[0]].getId() +") * " + rate + " : ";
=====================================================================
Found a 26 line (46 tokens) duplication in the following files: 
Starting at line 132 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java
Starting at line 114 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

    setupPanel.add( getAnalysisPanel() );
/*
    clearCacheBox = new JCheckBox("Clear cached values from server"); 
    setupPanel.add(clearCacheBox);
    
    autoTimeBox = new JCheckBox("Automatically determine time range"); 
    setupPanel.add(autoTimeBox);

    autoTimeBox.addItemListener(this);
 */   
    
    // 5 Add Analyse button
    setupPanel.add(new ButtonBar("Analyse",analyseButtonClick));
    
    
    // 6 Add setup panel to tabbed pane, add tabbed pane to guiDialog
    tabbedPane.addTab("Setup", setupPanel);    
    contentPane.add(tabbedPane);
    
    
    // 7 Make window fit contents' preferred size, centre on screen, display
    guiDialog.pack();
    guiDialog.setLocationRelativeTo(null);    
    guiDialog.setVisible(true);

  }
=====================================================================
Found a 4 line (46 tokens) duplication in the following files: 
Starting at line 119 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 104 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsReceiver.java

				CDFDataset = new XYSeriesCollection(CDFpoints);
				cdfGraph = ChartFactory.createXYLineChart("Passage Time Results", "Time","Probability Density", CDFDataset, PlotOrientation.VERTICAL, false, false, false); 
				cdfGraph.setBackgroundPaint(Color.white); 
				cdfChartPanel = new ChartPanel(cdfGraph);
=====================================================================
Found a 3 line (46 tokens) duplication in the following files: 
Starting at line 508 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 531 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

				  			modString += "tagged_location== " + tagInputPlaceIndex[0] + 
				  			"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[0]].getId(), i ) 
				  			+ "/(double)" + places[tagInputPlaceIndex[0]].getId() +") * " + rate + " : ";
=====================================================================
Found a 15 line (46 tokens) duplication in the following files: 
Starting at line 61 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultBarChartPlotter.java
Starting at line 115 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultBarChartPlotter.java

																															600);

														File saveFile;
														JFileChooser fc = new JFileChooser();
														int returnVal = fc.showSaveDialog(ResultBarChartPlotter.this.resultsPanel);
														if (returnVal == JFileChooser.APPROVE_OPTION)
														{
															saveFile = fc.getSelectedFile();
														}
														else
														{
															return;
														}
														try
														{
=====================================================================
Found a 5 line (46 tokens) duplication in the following files: 
Starting at line 166 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 428 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

				final int hash = node.getResult().hashCode() + name.hashCode();
				final ProgressWindow window = QueryManager.getProgressWindow();
				if (!window.allComponents.containsKey(hash))
				{
					final ResultPlotter myPlotter = new ResultBarChartPlotter(window.getTabPanelPreferredSize());
=====================================================================
Found a 15 line (46 tokens) duplication in the following files: 
Starting at line 92 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 367 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

						ResultProvider.setupNodeAnalyser(node, event);
						break;
					}
					default :
						throw new QueryAnalysisException(node.getResult().getType() +
															":Can't support this kind of result presentation on result node currently..");
				}
			}
		}
		catch (final QueryAnalysisException e)
		{
			EvaluatorGuiLoggingHandler.logger.log(	Level.WARNING,
													"Attempt to display Result node result failed",
													e);
		}
=====================================================================
Found a 6 line (46 tokens) duplication in the following files: 
Starting at line 251 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 218 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

				ArcPath thisArcPath = thisArc.getArcPath();
				thisArcPath.hidePoints();
				for(int j=1; j < thisArcPath.getEndIndex(); j++) {
					thisArcPath.deselectPoint(j);
				}	
			} else if ((netObj[i] instanceof PetriNetObject)
=====================================================================
Found a 7 line (46 tokens) duplication in the following files: 
Starting at line 104 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 331 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java

				}
			}

			// Handle Arcs and PerformanceTreeArc Points
			if ((netObj[i] instanceof PerformanceTreeArc) && ((PerformanceTreeObject)netObj[i]).isSelectable())	{				
				PerformanceTreeArc thisArc = (PerformanceTreeArc)netObj[i];
				PerformanceTreeArcPath thisArcPath = thisArc.getArcPath();
=====================================================================
Found a 5 line (46 tokens) duplication in the following files: 
Starting at line 213 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java
Starting at line 253 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

		mapIterator = optionalChildNodesOrdered.iterator();
		while (mapIterator.hasNext()) {
			role = (String)mapIterator.next();
			arc = new PerformanceTreeArc(arcStartPointX, arcStartPointY, arcEndPointX, arcEndPointY, this, role, showArcLabels);
			arc.setRequired(false);
=====================================================================
Found a 7 line (46 tokens) duplication in the following files: 
Starting at line 77 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/DistributionNode.java
Starting at line 64 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

					description += QueryManager.addColouring("determined by ");
					Iterator<PerformanceTreeNode> i = children.iterator();
					while (i.hasNext()) {
						PerformanceTreeNode child = i.next();
						QueryManager.colourUp();
						description += child.printTextualRepresentation();
						QueryManager.colourDown();
=====================================================================
Found a 14 line (46 tokens) duplication in the following files: 
Starting at line 51 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java
Starting at line 55 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

		conditionEdit = new JDialog(parent, "Add condition to " + place.getName(), true);
		
		   
		// Set layout
		Container contentPane= conditionEdit.getContentPane();
		contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
		
			
		
		// Panel for entry of place condition for the state
		JPanel mainPanel = new JPanel();
		
		// combo box for operator
		operaterCombo = new JComboBox();
=====================================================================
Found a 8 line (46 tokens) duplication in the following files: 
Starting at line 252 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 264 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java

			ActionListener deleteStateLabelButtonListener = new ActionListener()
			{
				public void actionPerformed(ActionEvent arg0)
				{
					String selectedStateLabel = (String) StateLabelManager.stateLabelDropdown.getSelectedItem();
					if (!selectedStateLabel.equals("-- Select --") &&
						!selectedStateLabel.equals("CREATE NEW STATE LABEL"))
					{
=====================================================================
Found a 12 line (46 tokens) duplication in the following files: 
Starting at line 333 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 385 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

						outgoingArc.delete();
					}
				}
				else if (nodeToDelete instanceof ValueNode)
				{
					// remove node label
					if (((ValueNode) nodeToDelete).getNodeLabelObject() != null)
						((ValueNode) nodeToDelete).getNodeLabelObject().delete();
				}

				// delete node from nodesArray
				this.macroNodes.remove(node);
=====================================================================
Found a 9 line (46 tokens) duplication in the following files: 
Starting at line 200 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 214 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

		MacroWriter.nodesProcessed.put(nodeID, "true");

		if (nodeIncomingArcID == null || nodeIncomingArcID.equals(""))
		{
			Element tree = document.createElement("tree");
			parentElement.appendChild(tree);
			tree.appendChild(nodeElement);
		}
		else
=====================================================================
Found a 4 line (46 tokens) duplication in the following files: 
Starting at line 104 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 119 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

			CDFDataset = new XYSeriesCollection(CDFpoints);
			cdfGraph = ChartFactory.createXYLineChart("Passage Time Results", "Time","Probability Density", CDFDataset, PlotOrientation.VERTICAL, false, false, false); 
			cdfGraph.setBackgroundPaint(Color.white); 
			cdfChartPanel = new ChartPanel(cdfGraph);
=====================================================================
Found a 10 line (46 tokens) duplication in the following files: 
Starting at line 503 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 500 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

	private AnalysisSettings getTimeSettings()
	{
    	String startString = startTime.getText();
    	String endString = endTime.getText();
    	Double step = (Double)timeStep.getValue();
    	String method = (String)methodCombo.getSelectedItem();
    	int numProcessors;
    	
    	try
    	{
=====================================================================
Found a 9 line (45 tokens) duplication in the following files: 
Starting at line 774 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 878 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

			grappaNexus.fill(g2d);
			if(GrappaStyle.defaultStroke != selectionStyle.stroke) {
			    g2d.setStroke(selectionStyle.stroke);
			    grappaNexus.draw(g2d);
			    g2d.setStroke(GrappaStyle.defaultStroke);
			} else {
			    grappaNexus.draw(g2d);
			}
		    } else {
=====================================================================
Found a 8 line (45 tokens) duplication in the following files: 
Starting at line 521 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 581 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java

		}
	    }
	    enm = subg.nodeElements();
	    Node node;
	    while(enm.hasMoreElements()) {
		node = (Node)enm.nextElement();
		if((grappaNexus = node.grappaNexus) == null) continue;
		if(box.contains(grappaNexus.rawBounds2D())) {
=====================================================================
Found a 8 line (45 tokens) duplication in the following files: 
Starting at line 510 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 569 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java

		}
	    }
	    enm = subg.edgeElements();
	    Edge edge;
	    while(enm.hasMoreElements()) {
		edge = (Edge)enm.nextElement();
		if((grappaNexus = edge.grappaNexus) == null) continue;
		if(box.contains(grappaNexus.rawBounds2D())) {
=====================================================================
Found a 4 line (45 tokens) duplication in the following files: 
Starting at line 174 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 183 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

		    case 'G':
			if (args.length <= argn) throw new RuntimeException("too few arguments for format");
			if (args[argn] instanceof Character)
			    cvt.buildFlex(prtbuf, ((Character)args[argn++]).charValue(), true);
=====================================================================
Found a 4 line (45 tokens) duplication in the following files: 
Starting at line 147 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 156 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

		    case 'E':
			if (args.length <= argn) throw new RuntimeException("too few arguments for format");
			if (args[argn] instanceof Character)
			    cvt.buildExp(prtbuf, ((Character)args[argn++]).charValue(), true);
=====================================================================
Found a 4 line (45 tokens) duplication in the following files: 
Starting at line 129 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 138 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

		    case 'X':
			if (args.length <= argn) throw new RuntimeException("too few arguments for format");
			if (args[argn] instanceof Character)
			    cvt.buildHex(prtbuf, ((Character)args[argn++]).charValue(), true);
=====================================================================
Found a 13 line (45 tokens) duplication in the following files: 
Starting at line 1367 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1181 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	if((attr = getLocalAttribute(TAG_ATTR)) == null) return false;
	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return false;
	return(tags.containsKey(tag));
    }

    /**
     * Check if this Element has the supplied tag as a default tag.
     *
     * @param tag tag value to be searched for
     * @return true, if this Element has the supplied tag as a default tag
     */
    public boolean hasDefaultTag(String tag) {
=====================================================================
Found a 4 line (45 tokens) duplication in the following files: 
Starting at line 1024 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1116 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                    if(Math.abs(b.real)>=Math.abs(b.imag)){
                        ratio=b.imag/b.real;
                        denom=b.real+b.imag*ratio;
                        c.real=(this.real+this.imag*ratio)/denom;
=====================================================================
Found a 8 line (45 tokens) duplication in the following files: 
Starting at line 201 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 294 of /usr/local/git/PipeCoursework/src/jama/LUDecomposition.java

               X[i][j] -= X[k][j]*LU[i][k];
            }
         }
      }
      // Solve U*X = Y;
      for (int k = n-1; k >= 0; k--) {
         for (int j = 0; j < nx; j++) {
            X[k][j] /= LU[k][k];
=====================================================================
Found a 11 line (45 tokens) duplication in the following files: 
Starting at line 575 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 506 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

	    for (int i = 0; i < handle_size; i++)
	      {
		stack.pop();
		tos--;
	      }
	      
	    /* look up the state to go to from the one popped back to */
	    act = get_reduce(((Symbol)stack.peek()).parse_state, lhs_sym_num);

	    /* shift to that state */
	    lhs_sym.parse_state = act;
=====================================================================
Found a 5 line (45 tokens) duplication in the following files: 
Starting at line 586 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 603 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

			for (int i = 0; i < this.stateGroups.size(); i++)
			{
				// If a matching ID is found, increment id and reset loop
				if (id.equals(((StateGroup) this.stateGroups.get(i)).getId()))
				{
=====================================================================
Found a 4 line (45 tokens) duplication in the following files: 
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 885 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      double[][] X = A.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            X[i][j] = Math.random();
=====================================================================
Found a 6 line (45 tokens) duplication in the following files: 
Starting at line 759 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 802 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

		  		condition += arc.getSource().getId()+" > "+ (arc.getWeight() - 1);
		  	}
		  		
		  	while (arcsTo.hasNext())
		  	{
		  		final Arc arc = (Arc)arcsTo.next();
=====================================================================
Found a 6 line (45 tokens) duplication in the following files: 
Starting at line 502 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 565 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java

			result.add(places[i].getName());
			result.add(f.format(data[i]));
		}
		
		return ResultsHTMLPane.makeTable(result.toArray(),2,false,true,true,true);
	}
=====================================================================
Found a 9 line (45 tokens) duplication in the following files: 
Starting at line 170 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 433 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

				}
			}
			if (hasTimed && hasImmediate){
				for (int i = 0; i<transCount; i++){
					if (transArray[i].isTimed()==true){
						result[i] = false;
					}
				}
			}
=====================================================================
Found a 6 line (45 tokens) duplication in the following files: 
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 874 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

			result[t] = true;
		}
		
		for (int i = 0; i <transCount ;i++) {
			for (int j = 0; j <placeCount; j++){
				if (marking[j] < CMinus[j][i]){
=====================================================================
Found a 21 line (45 tokens) duplication in the following files: 
Starting at line 135 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java
Starting at line 108 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ConditionPlaceHandler.java

	}
	
	
	/**
	  * This action listener responds to the buttons used in
	  * the "Add Condition" pop up dialog
	  * i.e the Cancel / OK buttons 
	  */
	 
	 ActionListener BtnClick = new ActionListener()
	 {
		 public void actionPerformed(ActionEvent event)
		 {
			 if (event.getSource() == cancelButton)
			 {
				 closeWindow();
			 }
			 
			 else if (event.getSource() == okButton)
			 {
				 String operatorStr, targetStr;
=====================================================================
Found a 6 line (45 tokens) duplication in the following files: 
Starting at line 596 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 639 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

		  		condition += arc.getSource().getId()+" > "+ (arc.getWeight() - 1);
		  	}
		  		
		  	while (arcsTo.hasNext())
		  	{
		  		final Arc arc = (Arc)arcsTo.next();
=====================================================================
Found a 11 line (45 tokens) duplication in the following files: 
Starting at line 58 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeArcPathPointHandler.java
Starting at line 58 of /usr/local/git/PipeCoursework/src/pipe/gui/ArcPathPointHandler.java

			((ArcPathPoint)e.getComponent()).setVisibilityLock(true);
			super.mousePressed(e);
		}
	}

	public void mouseDragged(MouseEvent e) {
		super.mouseDragged(e);	
	}

  public void mouseReleased(MouseEvent e) {
		((ArcPathPoint)e.getComponent()).setVisibilityLock(false);
=====================================================================
Found a 15 line (45 tokens) duplication in the following files: 
Starting at line 1004 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 1262 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java

								e.printStackTrace();
							}
						}
					}
				}
			}
			catch (QueryException e)
			{
				String msg = e.getMessage();
				JOptionPane.showMessageDialog(	MacroManager.getEditor().getContentPane(),
												msg,
												"Warning",
												JOptionPane.ERROR_MESSAGE);
			}
		}
=====================================================================
Found a 16 line (45 tokens) duplication in the following files: 
Starting at line 744 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 447 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

			public void propertyChange(PropertyChangeEvent pce) {
				if (pce.getPropertyName().equals("selected")){
					b.setSelected(((Boolean)pce.getNewValue()).booleanValue());
				}
			}

		});
		return b;
	}

	/**
	 * Enables either the drawing buttons ("drawing" = true) or the
	 * animation buttons ("drawing" = false)
	 * @param drawing true for drawing, false for animation
	 */
	public void enableDrawingActions(boolean drawing){
=====================================================================
Found a 4 line (45 tokens) duplication in the following files: 
Starting at line 256 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 386 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

												.getResource(QueryManager.imgPath + "Export.png")));
		addMenuItem(exportMenu, ((Action) this.actions.get("EPS")));
		addMenuItem(exportMenu, ((Action) this.actions.get("PNG")));
		fileMenu.add(exportMenu);
=====================================================================
Found a 6 line (45 tokens) duplication in the following files: 
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 84 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ProbInStatesNode.java

			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();	
				QueryManager.colourUp();
				description += child.printTextualRepresentation();	
				QueryManager.colourDown();
=====================================================================
Found a 20 line (45 tokens) duplication in the following files: 
Starting at line 126 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java
Starting at line 135 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

	 };
	
	/**
	  * This action listener responds to the buttons used in
	  * the "Add Condition" pop up dialog
	  * i.e the Cancel / OK buttons 
	  */
	 
	 ActionListener BtnClick = new ActionListener()
	 {
		 public void actionPerformed(ActionEvent event)
		 {
			 if (event.getSource() == cancelButton)
			 {
				 closeWindow();
			 }
			 
			 else if (event.getSource() == okButton)
			 {
				 String placeStr, operatorStr, targetStr;
=====================================================================
Found a 11 line (45 tokens) duplication in the following files: 
Starting at line 623 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java
Starting at line 384 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LaplaceTransformInverter.java

						String op = matrixF.format(MAstore[MAind[i][n]]);
						System.out.print(op + ", ");
						printed = true;
						break;
					}						
					n++;
				}
				if(printed == false)
					System.out.print("   0, ");
			}
			System.out.print("                ");
=====================================================================
Found a 16 line (45 tokens) duplication in the following files: 
Starting at line 61 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/Analyse.java
Starting at line 57 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/Analyse.java

	  }
	  
	  
	  public void run()
	  {	
		  // Convert the PNML data into a serialisable form for transmission  
		  SimplePlaces splaces = new SimplePlaces(pnmlData);
		  SimpleTransitions sTransitions = new SimpleTransitions(pnmlData);
		  
		  		  
		  
		  try
		  {
			  updateUI("Opening Connection");
			  SocketIO serverSock = new SocketIO(serverAddr, serverPort); 
			  serverSock.send(AnalysisType.STEADYSTATE); // Inform server of the process to be performed
=====================================================================
Found a 20 line (45 tokens) duplication in the following files: 
Starting at line 108 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 135 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

	 };
	
	/**
	  * This action listener responds to the buttons used in
	  * the "Add Condition" pop up dialog
	  * i.e the Cancel / OK buttons 
	  */
	 
	 ActionListener BtnClick = new ActionListener()
	 {
		 public void actionPerformed(ActionEvent event)
		 {
			 if (event.getSource() == cancelButton)
			 {
				 closeWindow();
			 }
			 
			 else if (event.getSource() == okButton)
			 {
				 String placeStr, operatorStr, targetStr;
=====================================================================
Found a 6 line (45 tokens) duplication in the following files: 
Starting at line 512 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 514 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

    		}else {
    			double startT = Double.valueOf( startString.trim()).doubleValue();
    			double endT = Double.valueOf( endString.trim()).doubleValue();
    			double stepT = step.doubleValue();
    		
    			numProcessors = serverPanel.getNumProcessors();
=====================================================================
Found a 18 line (45 tokens) duplication in the following files: 
Starting at line 147 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 168 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

	    	AnalysisSettings analysisSetting = getTimeSettings();

	    	
    		// Create Progress Tab and set it as selected	
	    	if (progressPane == null)
	    	{
	    		progressPane = new ProgressBarHTMLPane("Analysis Progress");
	    		tabbedPane.addTab("Progress", progressPane);
	    	}
	    	
	    	if (resultsPanel == null)
	    		  resultsPanel = new JPanel();
	    	
	    	
	    	tabbedPane.setSelectedComponent(progressPane);
	    	
	    	
	    	String statusMesg="<h2>Passage Time Analysis</h2>";
=====================================================================
Found a 9 line (45 tokens) duplication in the following files: 
Starting at line 250 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 413 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

	private String getTaggedTransitionConditions(int transitionNum, String tagInputPlace) {
		String condition = new String();
	  	
		Iterator<SimpleArc> arcsTo = transitions.arcsTo.get(transitionNum).iterator();
		SimpleArc currArc;
		
	  	if (arcsTo.hasNext())
	  	{
	  		currArc = arcsTo.next();
=====================================================================
Found a 16 line (45 tokens) duplication in the following files: 
Starting at line 129 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 168 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

			modFileWriter.write(perfString);
			modFileWriter.close();
			System.out.println("Done");			
		}
		
		catch (IOException e3)
		{
			System.out.println("Could not write to file! " + file);
			e3.printStackTrace();
		}	
				
	}
	
	private void model()
	{
		modString += "\\model{\n";			
=====================================================================
Found a 15 line (45 tokens) duplication in the following files: 
Starting at line 45 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/RangeNode.java
Starting at line 50 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/InInterval.java

	}

	@Override
	protected NodeAnalyser checkChildValid(final NodeAnalyser child) throws InvalidNodeAnalyserException
	{
		switch (child.getType())
		{
			case PROBININTERVAL :
			case PROBINSTATES :
			case MOMENT :
			case FIRINGRATE :
			case STEADYSTATEPROB :
			case PERCENTILE :
			case ARITHOP :
			case MACRO :
=====================================================================
Found a 8 line (44 tokens) duplication in the following files: 
Starting at line 622 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 643 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

		    if(subg.currentSelection != null) {
			if(subg.currentSelection == obj) {
			    subg.currentSelection = null;
			} else if(subg.currentSelection instanceof Vector) {
			    ((Vector)(subg.currentSelection)).remove(obj);
			}
		    }
		    break;
=====================================================================
Found a 2 line (44 tokens) duplication in the following files: 
Starting at line 342 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 496 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

		if(Grappa.centerPointNodes) {
		    shape = new GrappaShape(shapeType, pos.x, pos.y, width, height, sides, peripheries, distortion, skew, orientation, style.rounded, style.diagonals, rects);
=====================================================================
Found a 8 line (44 tokens) duplication in the following files: 
Starting at line 491 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 806 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

			    g2d.setPaint(grappaNexus.fillcolor);
			    grappaNexus.fill(g2d);
			    if (grappaNexus.color != null)
				g2d.setPaint(grappaNexus.color);
			    else
				g2d.setPaint(grappaNexus.style.line_color);
			} else {
			    g2d.setPaint(grappaNexus.color);
=====================================================================
Found a 2 line (44 tokens) duplication in the following files: 
Starting at line 1170 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1553 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
=====================================================================
Found a 2 line (44 tokens) duplication in the following files: 
Starting at line 1083 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1228 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

		int valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
=====================================================================
Found a 2 line (44 tokens) duplication in the following files: 
Starting at line 952 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1553 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
=====================================================================
Found a 2 line (44 tokens) duplication in the following files: 
Starting at line 923 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1228 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

		int valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
=====================================================================
Found a 2 line (44 tokens) duplication in the following files: 
Starting at line 898 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1553 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
=====================================================================
Found a 2 line (44 tokens) duplication in the following files: 
Starting at line 892 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1228 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

		int valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right;
=====================================================================
Found a 20 line (44 tokens) duplication in the following files: 
Starting at line 377 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 498 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

		    return setEdgeAttribute(prntAttr);
		}
	    } else {
		crntAttr.setValue(value);
		//System.err.println("changing edge attr("+name+","+value+") in "+getName());
	    }
	}
	if(crntAttr.hasChanged()) {
	    crntAttr.notifyObservers(new Long(System.currentTimeMillis()));
	}
	return oldValue;
    }

    /*
     * Remove named default edge attribute (assumes there is no default in
     * the subgraph chain).
     *
     * @param name the name of the attribute to remove
     */
    private void removeEdgeAttribute(String name) {
=====================================================================
Found a 7 line (44 tokens) duplication in the following files: 
Starting at line 502 of /usr/local/git/PipeCoursework/src/circularbuffers/CircularByteBuffer.java
Starting at line 557 of /usr/local/git/PipeCoursework/src/circularbuffers/CircularByteBuffer.java

		public int read(byte[] cbuf, int off, int len) throws IOException {
			while (true){
				synchronized (CircularByteBuffer.this){
					if (inputStreamClosed) throw new IOException("InputStream has been closed; cannot read from a closed InputStream.");
					int available = CircularByteBuffer.this.available();
					if (available > 0){
						int length = Math.min(len, available);
=====================================================================
Found a 13 line (44 tokens) duplication in the following files: 
Starting at line 1178 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1204 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                double imod = Math.abs(this.imag);
                double ratio = 0.0D;
                double res = 0.0D;

                if(rmod==0.0D){
                        res=imod;
                }
                else{
                        if(imod==0.0D){
                                res=rmod;
                        }
                        if(rmod>=imod){
                                ratio=this.imag/this.real;
=====================================================================
Found a 5 line (44 tokens) duplication in the following files: 
Starting at line 232 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 246 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

   public double[] getRowPackedCopy () {
      double[] vals = new double[m*n];
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            vals[i*n+j] = A[i][j];
=====================================================================
Found a 6 line (44 tokens) duplication in the following files: 
Starting at line 191 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 220 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            C[i][j] = A[i][j];
         }
      }
      return C;
=====================================================================
Found a 4 line (44 tokens) duplication in the following files: 
Starting at line 98 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 151 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      A = new double[m][n];
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            A[i][j] = vals[i+j*m];
=====================================================================
Found a 7 line (44 tokens) duplication in the following files: 
Starting at line 924 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1346 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

			for (int i = 1; i < nodelist.getLength() - 1; i++)
			{
				node = nodelist.item(i);
				if (node instanceof Element)
				{
					final Element element = (Element) node;
					if ("statecondition".equals(element.getNodeName()))
=====================================================================
Found a 5 line (44 tokens) duplication in the following files: 
Starting at line 605 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LTIMapRed.java
Starting at line 611 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LTIMapRed.java

				while(record < totalmaps) {
					writer.append(new ComplexWritable(svals.get(record).getReal(), svals.get(record).getImag()), new DoubleTupleWritable(0, 0));
					record++;
				}
			}
=====================================================================
Found a 8 line (44 tokens) duplication in the following files: 
Starting at line 36 of /usr/local/git/PipeCoursework/src/pipe/io/StateRecord.java
Starting at line 46 of /usr/local/git/PipeCoursework/src/pipe/io/StateRecord.java

	public void write(RandomAccessFile opfile, boolean Tangible) throws IOException{
		if(state == null){
			return;
		}
		opfile.writeInt(stateid);
		for(int index = 0; index < state.length; index++){
			opfile.writeInt(state[index]);
		}
=====================================================================
Found a 10 line (44 tokens) duplication in the following files: 
Starting at line 228 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsReceiver.java
Starting at line 82 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/JFCGraphFrame.java

	  		XYDataset graphData = graph.getXYPlot().getDataset();
	  		int size = graphData.getItemCount(0);
	  		
	  		FileWriter fw = null;
	  		StringBuffer content = new StringBuffer();
	  		
	  		File saveFile;
		
			JFileChooser fc = new JFileChooser();
			int returnVal = fc.showSaveDialog(JFCGraphFrame.this);
=====================================================================
Found a 18 line (44 tokens) duplication in the following files: 
Starting at line 174 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlace.java
Starting at line 162 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ConditionPlace.java

		condOperator = operator;
		condOperand = operand;
		currentColor = validColor;
		repaint();
	}
	
	public void removeCondition()
	{
		condOperator = "";
		condOperand = "";
		currentColor = defaultColor;
		repaint();
	}


	@Override
	public void updateEndPoint(Arc arc) {}
}
=====================================================================
Found a 12 line (44 tokens) duplication in the following files: 
Starting at line 55 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultBarChartPlotter.java
Starting at line 365 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

	  			graphData = cdfGraph.getXYPlot().getDataset();
	  			
	  		int size = graphData.getItemCount(0);
	  		
	  		FileWriter fw = null;
	  		StringBuffer content = new StringBuffer();
	  		
	  		File saveFile;
		
			JFileChooser fc = new JFileChooser();			
			
			int returnVal = fc.showSaveDialog(resultsPanel);
=====================================================================
Found a 12 line (44 tokens) duplication in the following files: 
Starting at line 75 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 126 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java

																														600);

														File saveFile;
														JFileChooser fc = new JFileChooser();
														int returnVal = fc.showSaveDialog(ResultGraphPlotter.this.resultsPanel);
														if (returnVal == JFileChooser.APPROVE_OPTION)
														{
															saveFile = fc.getSelectedFile();
														}
														else return;
														try
														{
=====================================================================
Found a 12 line (44 tokens) duplication in the following files: 
Starting at line 69 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 365 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

	  			graphData = cdfGraph.getXYPlot().getDataset();
	  			
	  		int size = graphData.getItemCount(0);
	  		
	  		FileWriter fw = null;
	  		StringBuffer content = new StringBuffer();
	  		
	  		File saveFile;
		
			JFileChooser fc = new JFileChooser();			
			
			int returnVal = fc.showSaveDialog(resultsPanel);
=====================================================================
Found a 14 line (44 tokens) duplication in the following files: 
Starting at line 164 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java
Starting at line 374 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java

									((StateFunctionNode) this.node).setNodeLabel(input);

									if (MacroManager.getEditor() == null)
									{
										// not in macro mode
										QueryManager.getData().updateNode(this.node);
									}
									else
									{
										// in macro mode
										MacroManager.getEditor().updateNode(this.node);
									}
									inputValid = true;
								}
=====================================================================
Found a 4 line (44 tokens) duplication in the following files: 
Starting at line 110 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java
Starting at line 475 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java

						{
							if (MacroManager.getEditor() == null)
								((QueryView) this.contentPane).getSelectionObject().clearSelection();
							else ((MacroView) this.contentPane).getSelectionObject().clearSelection();
=====================================================================
Found a 4 line (44 tokens) duplication in the following files: 
Starting at line 308 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 279 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

				for(int j=1; j < thisArc.getArcPath().getEndIndex(); j++)
					if (thisArc.getArcPath().isPointSelected(j))
						thisArc.getArcPath().translatePoint(j,transX,transY);
				thisArc.updateArcPosition();
=====================================================================
Found a 7 line (44 tokens) duplication in the following files: 
Starting at line 1048 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 1151 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

		ZoomAction(final String name, final String tooltip, final String keystroke) {
			super(name, tooltip, keystroke);
		}

		public void actionPerformed(final ActionEvent e)
		{
			String actionName = (String) getValue(Action.NAME);
=====================================================================
Found a 9 line (44 tokens) duplication in the following files: 
Starting at line 684 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 447 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

			public void propertyChange(PropertyChangeEvent pce) {
				if (pce.getPropertyName().equals("selected")){
					b.setSelected(((Boolean)pce.getNewValue()).booleanValue());
				}
			}

		});
		return b;
	}
=====================================================================
Found a 9 line (44 tokens) duplication in the following files: 
Starting at line 442 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 358 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

	private JMenuItem addMenuItem(JMenu menu, Action action){
		JMenuItem item = menu.add(action);
		KeyStroke keystroke = (KeyStroke)action.getValue(Action.ACCELERATOR_KEY);
		if(keystroke != null)
			item.setAccelerator(keystroke);
		return item;
	}

	private void buildToolbar() {
=====================================================================
Found a 8 line (44 tokens) duplication in the following files: 
Starting at line 555 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 565 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

			if (MacroManager.getMode() == QueryConstants.SELECT)
			{
				if (this.myPath.proximityContains(PerformanceTreeArc.point) || this.selected)
					// show also if PerformanceTreeArc itself selected
					this.myPath.showPoints();
				else this.myPath.hidePoints();
			}
		}
=====================================================================
Found a 15 line (44 tokens) duplication in the following files: 
Starting at line 66 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 117 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

		this(startPositionXInput, startPositionYInput, endPositionXInput, endPositionYInput);
		setSource(sourceInput);
		if (MacroManager.getEditor() == null)
		{
			if (QueryManager.getEditor() != null)
			{
				updateArcPosition();
				updateArcPosition();
			}
		}
		else
		{
			updateArcPosition();
			updateArcPosition();
		}
=====================================================================
Found a 7 line (44 tokens) duplication in the following files: 
Starting at line 1201 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 1375 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java

		ZoomAction(final String name, final String tooltip, final String keystroke) {
			super(name, tooltip, keystroke);
		}

		public void actionPerformed(final ActionEvent e)
		{
			String actionName = (String) getValue(Action.NAME);
=====================================================================
Found a 9 line (44 tokens) duplication in the following files: 
Starting at line 527 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 358 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

	private JMenuItem addMenuItem(JMenu menu, Action action){
		JMenuItem item = menu.add(action);
		KeyStroke keystroke = (KeyStroke)action.getValue(Action.ACCELERATOR_KEY);
		if(keystroke != null)
			item.setAccelerator(keystroke);
		return item;
	}

	private void buildToolbar() {
=====================================================================
Found a 10 line (44 tokens) duplication in the following files: 
Starting at line 223 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 485 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java

		PerformanceTreeObjectHandler.justSelected = false;
	}

	private void writeErrorMessage(final String message)
	{
		String msg = QueryManager.addColouring(message);
		if (MacroManager.getEditor() == null)
			QueryManager.writeToInfoBox(msg);
		else MacroEditor.writeToInfoBox(msg);
	}
=====================================================================
Found a 10 line (44 tokens) duplication in the following files: 
Starting at line 207 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 376 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java

		node.updateConnected();

		// create child nodes if applicable
		for (int i = 0; i < nodeElementList.getLength(); i++)
		{
			Node nodeNode = nodeElementList.item(i);
			if (nodeNode instanceof Element)
			{
				Element nodeElement = (Element) nodeNode;
				if ("childNodes".equals(nodeElement.getNodeName()))
=====================================================================
Found a 18 line (44 tokens) duplication in the following files: 
Starting at line 162 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlace.java
Starting at line 174 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlace.java

		condOperator = operator;
		condOperand = operand;
		currentColor = validColor;
		repaint();
	}
	
	public void removeCondition()
	{
		condOperator = "";
		condOperand = "";
		currentColor = defaultColor;
		repaint();
	}


	@Override
	public void updateEndPoint(Arc arc) {}
}
=====================================================================
Found a 13 line (44 tokens) duplication in the following files: 
Starting at line 228 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 69 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java

														graphData = ResultGraphPlotter.this.chart	.getXYPlot()
																									.getDataset();

														int size = graphData.getItemCount(0);

														FileWriter fw = null;
														StringBuffer content = new StringBuffer();

														File saveFile;

														JFileChooser fc = new JFileChooser();

														int returnVal = fc.showSaveDialog(ResultGraphPlotter.this.resultsPanel);
=====================================================================
Found a 23 line (44 tokens) duplication in the following files: 
Starting at line 56 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 56 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

	  public Passage() {}
	
	  /**  The module name  */
	  public String getName()
	  {
	    return MODULE_NAME;
	  }

 
  
  // Main GUI elements
  private JDialog guiDialog;
  private JTabbedPane tabbedPane;

  private ProgressBarHTMLPane progressPane = null;
  private JPanel resultsPanel = null;
  private ServerPanelProcessors serverPanel = null;
  
  
  
  // State lists panel
  JList startStatesList, endStatesList;
  JButton addBtn, removeBtn, editBtn;
=====================================================================
Found a 4 line (43 tokens) duplication in the following files: 
Starting at line 511 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java
Starting at line 517 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java

	    Rpt.y = Ppt.y;

	    path.moveTo((float)Ppt.x, (float)Ppt.y);
	    path.lineTo((float)Rpt.x, (float)Rpt.y);
=====================================================================
Found a 7 line (43 tokens) duplication in the following files: 
Starting at line 1561 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1578 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    Subgraph sg;
	    String style;
	    Attribute attr;
	    Enumeration enm = elements(Grappa.SUBGRAPH);
	    while(enm.hasMoreElements()) {
		sg = (Subgraph)(enm.nextElement());
		if(sg != this) {
=====================================================================
Found a 7 line (43 tokens) duplication in the following files: 
Starting at line 610 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 394 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	    attributes.put(name,(crntAttr = new Attribute(getType(),name,value)));
	    if(grappaNexus != null && isOfInterest(name)) {
		crntAttr.addObserver(grappaNexus);
	    }
	} else {
	    oldValue = crntAttr.getValue();
	    if(value == null) {
=====================================================================
Found a 19 line (43 tokens) duplication in the following files: 
Starting at line 320 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 336 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                double xI = this.getImag();
                Complex y = new Complex();

                xR = Fmath.truncate(xR, prec);
                xI = Fmath.truncate(xI, prec);

                y.reset(xR, xI);

                return y;
        }


        // CONVERSIONS
        // Format a complex number as a string, a + jb or a + ib[instance method]
        // < value of real > < + or - > < j or i> < value of imag >
        // Choice of j or i is set by Complex.seti() or Complex.setj()
        // j is the default option for j or i
        // Overides java.lang.String.toString()
        public String toString(){
=====================================================================
Found a 5 line (43 tokens) duplication in the following files: 
Starting at line 430 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1072 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] floatTOdouble(float[] aa){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = (double)aa[i];
=====================================================================
Found a 6 line (43 tokens) duplication in the following files: 
Starting at line 292 of /usr/local/git/PipeCoursework/src/jama/LUDecomposition.java
Starting at line 303 of /usr/local/git/PipeCoursework/src/jama/LUDecomposition.java

         for (int i = 0; i < k; i++) {
            for (int j = 0; j < nx; j++) {
               X[i][j] -= X[k][j]*LU[i][k];
            }
         }
      }
=====================================================================
Found a 5 line (43 tokens) duplication in the following files: 
Starting at line 572 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 700 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

   public Matrix arrayLeftDivideEquals (Matrix B) {
      checkMatrixDimensions(B);
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            A[i][j] = B.A[i][j] / A[i][j];
=====================================================================
Found a 4 line (43 tokens) duplication in the following files: 
Starting at line 266 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java
Starting at line 514 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

    		}else {
    			double startT = Double.valueOf( startString.trim()).doubleValue();
    			double endT = Double.valueOf( endString.trim()).doubleValue();
    			double stepT = step.doubleValue();
=====================================================================
Found a 4 line (43 tokens) duplication in the following files: 
Starting at line 99 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 326 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java

		for (int i=0; i<netObj.length; i++) {
			// Handle PerformanceTreeNodes
			if ((netObj[i] instanceof PerformanceTreeNode) && ((PerformanceTreeObject)netObj[i]).isSelectable()) {
				if (((PerformanceTreeNode)netObj[i]).isSelected()) {
=====================================================================
Found a 11 line (43 tokens) duplication in the following files: 
Starting at line 37 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryAction.java
Starting at line 37 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiAction.java

		putValue("selected",new Boolean(false));
	}	
	
	public boolean isSelected(){
		return ((Boolean)getValue("selected")).booleanValue();
	}
	
	public void setSelected(boolean selected){
		putValue("selected",new Boolean(selected));
	}
}
=====================================================================
Found a 4 line (43 tokens) duplication in the following files: 
Starting at line 402 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 219 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

		Action select = new TypeAction("Select", QueryConstants.SELECT, "Select query components", "S");
		select.putValue("default", new Boolean(true));
		this.actions.put("Draw Select", select);
		this.actions.put("State Label Manager", new LabelAction("State Label Manager",
=====================================================================
Found a 5 line (43 tokens) duplication in the following files: 
Starting at line 106 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java
Starting at line 526 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java

		popupDialog = new JDialog(QueryManager.getEditor(),"Macro Manager",true);
		popupDialog.setMinimumSize(new Dimension(630,350));
	    Container contentPane = popupDialog.getContentPane();
	    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
	    contentPane.add(getMacroAssignmentManagerPanel(true));
=====================================================================
Found a 5 line (43 tokens) duplication in the following files: 
Starting at line 154 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SequentialNode.java
Starting at line 175 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SequentialNode.java

		Iterator i = outgoingArcIDs.iterator();
		while (i.hasNext()) {
			String arcID = (String)i.next();
			PerformanceTreeArc arc = QueryManager.getData().getArc(arcID);
			if (!arc.isRequired() && arc.getTarget() == null) {
=====================================================================
Found a 4 line (43 tokens) duplication in the following files: 
Starting at line 803 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 168 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java

		if (inputString != null && !inputString.equals("")) {
			for (int i = 0; i < inputString.length(); i++){
				char chr = inputString.charAt(i);
				if (Character.isDigit(chr)) 
=====================================================================
Found a 9 line (43 tokens) duplication in the following files: 
Starting at line 1206 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 538 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java

			}
		} catch (QueryException e) {
			String msg = e.getMessage();
			JOptionPane.showMessageDialog(QueryManager.getEditor().getContentPane(), msg, "Warning", JOptionPane.ERROR_MESSAGE);
			return false;
		}
	}

	public static void resetQueryEditor() {
=====================================================================
Found a 7 line (43 tokens) duplication in the following files: 
Starting at line 1047 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 608 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

			Iterator<PerformanceTreeArc> it = this.macroArcs.iterator();
			while (it.hasNext())
			{
				PerformanceTreeArc arc = it.next();
				String arcID = arc.getId();
				System.out.println("The array has an arc entry with ID " + arcID);
				if (arc.getSourceID() != null)
=====================================================================
Found a 10 line (43 tokens) duplication in the following files: 
Starting at line 348 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 376 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java

		node.updateConnected();

		// create child nodes if applicable
		for (int i = 0; i < nodeElementList.getLength(); i++)
		{
			Node nodeNode = nodeElementList.item(i);
			if (nodeNode instanceof Element)
			{
				Element nodeElement = (Element) nodeNode;
				if ("childNodes".equals(nodeElement.getNodeName()))
=====================================================================
Found a 8 line (43 tokens) duplication in the following files: 
Starting at line 63 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/SimpleTransitions.java
Starting at line 56 of /usr/local/git/PipeCoursework/src/pipe/common/SimpleTransitions.java

			this.arcsFrom.add(i, new LinkedList<SimpleArc>());

			arcsToIter = transitions[i].getConnectToIterator();
			arcsFromIter = transitions[i].getConnectFromIterator();

			// Create list of all targets from current place
			while (arcsToIter.hasNext())
			{
=====================================================================
Found a 4 line (43 tokens) duplication in the following files: 
Starting at line 512 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 266 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java

    		{
    			double startT = Double.valueOf( startString.trim()).doubleValue();
    			double endT = Double.valueOf( endString.trim()).doubleValue();
    			double stepT = step.doubleValue();
=====================================================================
Found a 13 line (43 tokens) duplication in the following files: 
Starting at line 202 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java
Starting at line 181 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

			}

			modString += ", " + tagPlace;		
				
			modString += "}\n";
			modString += "\t}\n\n";
		}
	  
		private void initial() {
			modString += "\t\\initial{\n";			
			modString += "\t\t";
			for(int i=0; i<places.length; i++) {
				modString += places[i].getId()+" = " + places[i].getCurrentMarking()+"; ";
=====================================================================
Found a 7 line (43 tokens) duplication in the following files: 
Starting at line 151 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/DrmaaExecutor.java
Starting at line 174 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/DrmaaExecutor.java

					final PointsResultWrapper p = (PointsResultWrapper) this.subtree.getChildByRole(QueryConstants.percentileChildDensity)
																					.getResult();
					final String coeffFilePath = TextFileResultWrapper	.getFile(	p.getResultsDir(),
																					ServerConstants.ptdCoeffFileName)
																		.getAbsolutePath();
					final String cdfPointsFilePath = TextFileResultWrapper	.getFile(	p.getResultsDir(),
																						ServerConstants.cdfResultsFileName)
=====================================================================
Found a 3 line (42 tokens) duplication in the following files: 
Starting at line 415 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java
Starting at line 430 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

		grpath.lineTo(x = (float)grpts[pts].x, y = (float)grpts[pts++].y);
		grtestpath.lineTo(x-z,y-z);
	    }
=====================================================================
Found a 20 line (42 tokens) duplication in the following files: 
Starting at line 69 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPoint.java
Starting at line 124 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaBox.java

	return(toFormattedString("%b"));
    }

    /**
     * Provides a formatted string representation of this object.
     * 
     * @param format the format used to build the string (<TT>%b</TT> is the base directive for a GrappaBox).
     * @return a string representation of this GrappaBox. 
     */
    public String toFormattedString(String format) {
	return(GrappaSupportPrintf.sprintf(new Object[] { format, this }));
    }

    /**
     * Provides a generic string representation of this object.
     * 
     * @return a generic string representation of this GrappaBox. 
     */
    public String toString() {
	return(x+","+y+","+width+","+height);
=====================================================================
Found a 5 line (42 tokens) duplication in the following files: 
Starting at line 425 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java
Starting at line 441 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java

			tmpVertices[tverts++] = new GrappaPoint(
								Pt0.x + tmp2 * (Pt1.x - Pt0.x),
								Pt0.y + tmp2 * (Pt1.y - Pt0.y)
								);
		    }
=====================================================================
Found a 4 line (42 tokens) duplication in the following files: 
Starting at line 743 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 767 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

      Vector list = (Vector)(headPair[0]);
      Object[] nodePair = null;
      for(int j = 0; j < list.size(); j++) {
	nodePair = (Object[])(list.elementAt(j));
=====================================================================
Found a 12 line (42 tokens) duplication in the following files: 
Starting at line 377 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 634 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

		    return setAttribute(prntAttr);
		}
	    } else {
		crntAttr.setValue(value);
		//System.err.println("changing graph attr("+name+","+value+") in "+getName());
	    }
	}
	if(crntAttr.hasChanged()) {
	    crntAttr.notifyObservers(new Long(System.currentTimeMillis()));
	}
	return oldValue;
    }
=====================================================================
Found a 3 line (42 tokens) duplication in the following files: 
Starting at line 2286 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 2339 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double tan(double xAtA, double yAtA, double xAtB, double yAtB, double xAtC, double yAtC){
            double angle = Fmath.angle(xAtA, yAtA, xAtB, yAtB, xAtC, yAtC);
            return Math.tan(angle);
=====================================================================
Found a 5 line (42 tokens) duplication in the following files: 
Starting at line 439 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 449 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] arrayMultByConstant(int[] aa, int constant){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = (double)(aa[i]*constant);
=====================================================================
Found a 5 line (42 tokens) duplication in the following files: 
Starting at line 420 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 439 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] arrayMultByConstant(double[] aa, int constant){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = aa[i]*(double)constant;
=====================================================================
Found a 5 line (42 tokens) duplication in the following files: 
Starting at line 420 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 430 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] arrayMultByConstant(int[] aa, double constant){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = (double)aa[i]*constant;
=====================================================================
Found a 2 line (42 tokens) duplication in the following files: 
Starting at line 368 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java
Starting at line 372 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

			{
				return ((ArcPathPoint) this.pathPoints.get(this.getEndIndex())).getAngle(((ArcPathPoint) (this.pathPoints.get(this.getEndIndex()))).getControl1());
=====================================================================
Found a 7 line (42 tokens) duplication in the following files: 
Starting at line 530 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1707 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

	public void setToZero()
	{
		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
				this.A[i][j] = 0;
=====================================================================
Found a 9 line (42 tokens) duplication in the following files: 
Starting at line 841 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 313 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

			tifc.close();
		} catch (EOFException e){
			System.err.println("EOFException");
		} catch (IOException e) {
			System.out.println("Could not create output file.");
			e.getMessage();
			return;
		}
	}
=====================================================================
Found a 5 line (42 tokens) duplication in the following files: 
Starting at line 133 of /usr/local/git/PipeCoursework/src/pipe/gui/ArrowHead.java
Starting at line 143 of /usr/local/git/PipeCoursework/src/pipe/gui/ArrowHead.java

	public PathIterator getPathIterator(AffineTransform at, double flatness) {
		AffineTransform transform = new AffineTransform();
		transform.translate(pointTo.getX(),pointTo.getY());
		transform.rotate(angle);
		return head.createTransformedShape(transform).getPathIterator(at, flatness);
=====================================================================
Found a 17 line (42 tokens) duplication in the following files: 
Starting at line 37 of /usr/local/git/PipeCoursework/src/pipe/gui/EditTaggedRateAction.java
Starting at line 44 of /usr/local/git/PipeCoursework/src/pipe/gui/EditRateAction.java

					String.valueOf(currentRate));
		
		if ( input == null )		// if user cancels the action
		{
			return;
		}
		try 
		{
			double newRate = Double.parseDouble(input);
			if (newRate < 0)
			{
				JOptionPane.showMessageDialog(contentPane,
					"Please enter a positive real number.");
			}
			else
			{
				selected.setRate(newRate);
=====================================================================
Found a 13 line (42 tokens) duplication in the following files: 
Starting at line 57 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/JFCGraphFrame.java
Starting at line 86 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/JFCGraphFrame.java

	  		StringBuffer content = new StringBuffer();
	  		
	  		File saveFile;
		
			JFileChooser fc = new JFileChooser();
			int returnVal = fc.showSaveDialog(JFCGraphFrame.this);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			
			try {
=====================================================================
Found a 11 line (42 tokens) duplication in the following files: 
Starting at line 117 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ConditionPlaceHandler.java
Starting at line 183 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/ServerPanel.java

	 ActionListener addServClick = new ActionListener() {
		 public void actionPerformed(ActionEvent event)
		 {
			 if (event.getSource() == cancelButton)
			 {
				 closeWindow();
			 }
			 
			 else if (event.getSource() == okButton)
			 {
				 String servAdd = new String();
=====================================================================
Found a 5 line (42 tokens) duplication in the following files: 
Starting at line 92 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/StateViewer.java
Starting at line 157 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

			int y=r.y+r.height+100;
			if(x>d.width)  d.width =x;
			if(y>d.height) d.height=y;
		}
		setPreferredSize(d);
=====================================================================
Found a 11 line (42 tokens) duplication in the following files: 
Starting at line 143 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java
Starting at line 183 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/ServerPanel.java

	 ActionListener addServClick = new ActionListener() {
		 public void actionPerformed(ActionEvent event)
		 {
			 if (event.getSource() == cancelButton)
			 {
				 closeWindow();
			 }
			 
			 else if (event.getSource() == okButton)
			 {
				 String servAdd = new String();
=====================================================================
Found a 3 line (42 tokens) duplication in the following files: 
Starting at line 98 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 88 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsReceiver.java

				values = lines[i].split("\\s+");
				points.add(new Double(values[0]).doubleValue(), new Double(values[1]).doubleValue() );
			}
=====================================================================
Found a 5 line (42 tokens) duplication in the following files: 
Starting at line 87 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java
Starting at line 157 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

			int y=r.y+r.height+100;
			if(x>d.width)  d.width =x;
			if(y>d.height) d.height=y;
		}
		setPreferredSize(d);
=====================================================================
Found a 8 line (42 tokens) duplication in the following files: 
Starting at line 75 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ProgressWindow.java
Starting at line 82 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ProgressWindow.java

																	else if (msg.equals(QueryConstants.timeoutComplete))
																	{
																		ProgressWindow.this.progressBar.setForeground(Color.RED);
																		msg += finishedTail;
																		TimedTextUpdater.this.stopChangingProgressBarText();
																		ProgressWindow.this.fillProgressBar();
																	}
																	else if (msg.equals(QueryConstants.successfulComplete))
=====================================================================
Found a 5 line (42 tokens) duplication in the following files: 
Starting at line 273 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 87 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java

			y=r.y+r.height+100;
			if (x>d.width)  d.width =x;
			if (y>d.height) d.height=y;
		}
		setPreferredSize(d);
=====================================================================
Found a 8 line (42 tokens) duplication in the following files: 
Starting at line 1037 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java
Starting at line 1064 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java

			if (node instanceof ResultNode) {
				String msg = QueryManager.addColouring("Deletion of the topmost node in the tree is not permitted.");
				if (MacroManager.getEditor() == null)
					QueryManager.writeToInfoBox(msg);
				else
					MacroManager.getEditor().writeToInfoBox(msg);
			}					
			else {
=====================================================================
Found a 28 line (42 tokens) duplication in the following files: 
Starting at line 404 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 412 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

	}

	/**
	 * Get X-axis value of start position
	 * 
	 * @return Double value for X-axis of start position
	 */
	public double getStartPositionX()
	{
		return this.myPath.getPoint(0).getX();
	}

	/**
	 * Get Y-axis value of start position
	 * 
	 * @return Double value for Y-axis of start position
	 */
	public double getStartPositionY()
	{
		return this.myPath.getPoint(0).getY();
	}

	/**
	 * Get target returns null if value not yet entered
	 * 
	 * @return String value for Arc target;
	 */
	public PlaceTransitionObject getTarget()
=====================================================================
Found a 8 line (42 tokens) duplication in the following files: 
Starting at line 236 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 262 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

		if (this.targetID != null)
		{
			if (QueryManager.getMode() == QueryConstants.LOADING &&
				MacroManager.getMode() == QueryConstants.LOADING)
			{
				// when a macro is loaded in in the background
				MacroDefinition macro = QueryLoader.getMacro();
				return macro.getMacroNode(this.targetID);
=====================================================================
Found a 8 line (42 tokens) duplication in the following files: 
Starting at line 574 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 805 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

			final Point2D.Float midpoint = first.getMidPoint(second);
			distances[index] = midpoint.distance(mouseposition);
		}

		// Now determine the shortest midpoint
		double shortest = distances[0];
		int wantedpoint = 0;
		for (int index = 0; index < this.pathPoints.size() - 1; index++)
=====================================================================
Found a 6 line (42 tokens) duplication in the following files: 
Starting at line 520 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 297 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

		final String[][] details = new String[length][3];

		for (int c = 0; c < length; c++)
		{

			details[c][0] = String.valueOf(((ArcPathPoint) this.pathPoints.get(c)).getX());
=====================================================================
Found a 9 line (42 tokens) duplication in the following files: 
Starting at line 148 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 586 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

			myCurrentPoint = (ArcPathPoint) this.pathPoints.get(c);

			if (myCurrentPoint.getPointType() == true)
			{
				curveStartIndex = c - 1;

				for (; c <= endIndex && myCurrentPoint.getPointType() == true; c++)
				{
					myCurrentPoint = (ArcPathPoint) this.pathPoints.get(c);
=====================================================================
Found a 6 line (42 tokens) duplication in the following files: 
Starting at line 107 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 336 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

	}

	/* returns a control point for curve CD with incoming vector AB */
	private Point2D.Float getControlPoint(Point2D.Float A, Point2D.Float B, Point2D.Float C, Point2D.Float D)
	{
		Point2D.Float p = new Point2D.Float(0, 0);
=====================================================================
Found a 12 line (42 tokens) duplication in the following files: 
Starting at line 545 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 946 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

	}

	/**
	 * Remove the listener from the zoomComboBox, so that when the box's
	 * selected item is updated to keep track of ZoomActions called from other
	 * sources, a duplicate ZoomAction is not called
	 */
	public void updateZoomCombo()
	{
		ActionListener zoomComboListener = (this.zoomComboBox.getActionListeners())[0];
		this.zoomComboBox.removeActionListener(zoomComboListener);
		this.zoomComboBox.setSelectedItem(String.valueOf(this.queryView.getZoomController().getPercent()) +
=====================================================================
Found a 5 line (42 tokens) duplication in the following files: 
Starting at line 321 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 87 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java

			y=r.y+r.height+100;
			if (x>d.width)  d.width =x;
			if (y>d.height) d.height=y;
		}
		setPreferredSize(d);
=====================================================================
Found a 6 line (42 tokens) duplication in the following files: 
Starting at line 168 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 322 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java

			Iterator it = this.outgoingArcIDs.iterator();
			while (it.hasNext())
			{
				String outgoingArcID = (String) it.next();
				PerformanceTreeArc outgoingArc;
				if (MacroManager.getEditor() == null)
=====================================================================
Found a 11 line (42 tokens) duplication in the following files: 
Starting at line 135 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java
Starting at line 183 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/ServerPanel.java

	 ActionListener addServClick = new ActionListener() {
		 public void actionPerformed(ActionEvent event)
		 {
			 if (event.getSource() == cancelButton)
			 {
				 closeWindow();
			 }
			 
			 else if (event.getSource() == okButton)
			 {
				 String servAdd = new String();
=====================================================================
Found a 11 line (42 tokens) duplication in the following files: 
Starting at line 148 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateGroupEditor.java
Starting at line 181 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateEditor.java

	public void addStateElement(String placeA, String operator, String placeB)
	{
		// Convert equals to double equals for comparison
		if (operator.equals("=" ))
			operator = "==";
		
		// Convert from unicode character to ASCII
		else if (operator.equals("\u2264" ) )
			operator = "<=";
		else if (operator.equals("\u2265"))
			operator = ">=";
=====================================================================
Found a 7 line (42 tokens) duplication in the following files: 
Starting at line 422 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 500 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java

		StateLabelManager.stateLabelTextField.setText(StateLabelManager.currentStateLabel);
		stateLabelNamePanel.add(StateLabelManager.stateLabelTextField);
		StateLabelManager.stateLabelDialog.add(stateLabelNamePanel);
		SpringLayoutUtilities.makeCompactGrid(stateLabelNamePanel, 1, 2, 6, 6, 6, 6);

		// button panel
		JPanel stateLabelButtonsPanel = new JPanel();
=====================================================================
Found a 20 line (42 tokens) duplication in the following files: 
Starting at line 138 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java
Starting at line 157 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java

			((StateEditor)parent).addStateElement(curPlace.getId(), "=", "0");
			
			// Update the UI
			curPlace.setCondition("=", "0");
		}
	}
	



	/**
	 * This method clears the marking on all states
	 */
	
	public void clearAllCond()
	{
		for(ConditionPlace curPlace : condPlaces)
		{
			// Update the 'change buffer' with a blank condition; this will remove the condition
			((StateEditor)parent).addStateElement(curPlace.getId(), "", "");
=====================================================================
Found a 7 line (42 tokens) duplication in the following files: 
Starting at line 95 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java
Starting at line 321 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java

			int y = r.y + r.height + 100;
			if (x > d.width)
				d.width = x;
			if (y > d.height)
				d.height = y;
		}
		setPreferredSize(d);
=====================================================================
Found a 8 line (42 tokens) duplication in the following files: 
Starting at line 99 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroTransformer.java
Starting at line 128 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroTransformer.java

	public Document getDOM(File ptmlFile) throws ParserConfigurationException, IOException, SAXException {
		Document document = null;

		try {
			DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilderFactory.setIgnoringElementContentWhitespace(true);
			DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
			document = documentBuilder.parse(ptmlFile);
=====================================================================
Found a 7 line (42 tokens) duplication in the following files: 
Starting at line 208 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 871 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java

		for (int i = 0; i < nodeElementList.getLength(); i++)
		{
			Node nodeNode = nodeElementList.item(i);
			if (nodeNode instanceof Element)
			{
				Element nodeElement = (Element) nodeNode;
				if ("childNodes".equals(nodeElement.getNodeName()))
=====================================================================
Found a 8 line (42 tokens) duplication in the following files: 
Starting at line 99 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryTransformer.java
Starting at line 128 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryTransformer.java

	public Document getDOM(File ptmlFile) throws ParserConfigurationException, IOException, SAXException {
		Document document = null;

		try {
			DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilderFactory.setIgnoringElementContentWhitespace(true);
			DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
			document = documentBuilder.parse(ptmlFile);
=====================================================================
Found a 11 line (42 tokens) duplication in the following files: 
Starting at line 117 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 183 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/ServerPanel.java

	 ActionListener addServClick = new ActionListener() {
		 public void actionPerformed(ActionEvent event)
		 {
			 if (event.getSource() == cancelButton)
			 {
				 closeWindow();
			 }
			 
			 else if (event.getSource() == okButton)
			 {
				 String servAdd = new String();
=====================================================================
Found a 8 line (42 tokens) duplication in the following files: 
Starting at line 6 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/PerformanceMeasure.java
Starting at line 6 of /usr/local/git/PipeCoursework/src/pipe/common/PerformanceMeasure.java

public class PerformanceMeasure implements Serializable
{
	private static final long	serialVersionUID	= 1L;
	public ArrayList<String>	states				= null;
	public ArrayList<String>	counts				= null;
	public ArrayList<String>	stateEstimators		= null;

	public PerformanceMeasure() {
=====================================================================
Found a 4 line (42 tokens) duplication in the following files: 
Starting at line 88 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 98 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

				values = lines[i].split("\\s+");
				points.add(new Double(values[0]).doubleValue(), new Double(values[1]).doubleValue() );
				
			}
=====================================================================
Found a 9 line (42 tokens) duplication in the following files: 
Starting at line 171 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateEditor.java
Starting at line 148 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateGroupEditor.java

	public void addStateElement(final String placeA, String operator, final String placeB)
	{
		// Convert from unicode character to ASCII
		if (operator.equals("="))
			operator = "==";
		else if (operator.equals("\u2264"))
			operator = "<=";
		else if (operator.equals("\u2265"))
			operator = ">=";
=====================================================================
Found a 14 line (42 tokens) duplication in the following files: 
Starting at line 156 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java
Starting at line 138 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java

			((StateGroupEditor)parent).addStateElement(curPlace.getId(), "=", "0");
			// Update the UI
			curPlace.setCondition("=", "0");
		}
	}


	/**
	 * This method clears the marking on all states
	 */
	public void clearAllCond() {
		for(ConditionPlace curPlace : condPlaces) {
			// Update the 'change buffer' with a blank condition; this will remove the condition
			((StateGroupEditor)parent).addStateElement(curPlace.getId(), "", "");
=====================================================================
Found a 7 line (42 tokens) duplication in the following files: 
Starting at line 92 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java
Starting at line 321 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java

			int y = r.y + r.height + 100;
			if (x > d.width)
				d.width = x;
			if (y > d.height)
				d.height = y;
		}
		setPreferredSize(d);
=====================================================================
Found a 11 line (42 tokens) duplication in the following files: 
Starting at line 204 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java
Starting at line 332 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

			if(tagged)modString += ", " + tagPlace;		
				
			modString += "}\n";
			modString += "\t}\n\n";
		}
	  
		private void initial() {
			modString += "\t\\initial{\n";			
			modString += "\t\t";
			for(int i=0; i<places.length; i++) {
				modString += places[i].getId()+" = " + places[i].getCurrentMarking()+"; ";
=====================================================================
Found a 12 line (42 tokens) duplication in the following files: 
Starting at line 92 of /usr/local/git/PipeCoursework/src/pipe/server/JobStatusUpdater.java
Starting at line 196 of /usr/local/git/PipeCoursework/src/pipe/server/JobStatusChecker.java

		}
	}

	private String getCurrentDateAndTime()
	{
		Calendar cal = Calendar.getInstance();
		final String DATE_FORMAT_NOW = "dd/MM/yyyy HH:mm:ss";
		SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT_NOW);
		return sdf.format(cal.getTime());
	}

}
=====================================================================
Found a 6 line (42 tokens) duplication in the following files: 
Starting at line 71 of /usr/local/git/PipeCoursework/test/pipe/modules/reachabilityGraphGenerator/ReachabilityGraphTest.java
Starting at line 56 of /usr/local/git/PipeCoursework/test/pipe/modules/reachabilityGraphGenerator/ReachabilityGraphGeneratorTest.java

	public void testDotFile()throws Exception{

		//File [] testFiles = new File(new URI(this.getClass().getResource("test.Dot File").toString())).listFiles();
				//getResource("Dot Files").toString())).listFiles();
		File [] testFiles = new File(new URI(this.getClass().getClassLoader().getResource("Dot Files").toString())).listFiles();
		int numberofTest = testFiles.length;
=====================================================================
Found a 18 line (41 tokens) duplication in the following files: 
Starting at line 249 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 274 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java

	}
	String attrValue = attr.getStringValue();
	if(attrValue == getStringValue()) {
	    return true;
	}
	if(attrValue == null) {
	    return false;
	}
	// note: since getStringValue() was called, stringValue is up-to-date
	return attrValue.equals(stringValue);
    }

    /**
     * Get the hash value for this attributes name.
     *
     * @return the hash code for the name portion of this attribute
     */
    public final int getNameHash() {
=====================================================================
Found a 10 line (41 tokens) duplication in the following files: 
Starting at line 1228 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1243 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	if((attr = getDefaultAttribute(TAG_ATTR)) == null) return false;
	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return false;
	return true;
    }

    /**
     * Removes all tags locally associated with this element.
     */
    public void removeTags() {
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 273 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 349 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

	    if(currentModifiers == InputEvent.BUTTON1_MASK || currentModifiers == (InputEvent.BUTTON1_MASK|InputEvent.CTRL_MASK)) {
		Graphics2D g2d = (Graphics2D)(panel.getGraphics());
		AffineTransform orig = g2d.getTransform();
		g2d.setTransform(panel.getTransform());
		g2d.setXORMode(Color.darkGray);
=====================================================================
Found a 4 line (41 tokens) duplication in the following files: 
Starting at line 430 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java
Starting at line 435 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java

		    tmpVertices[tverts++] = new GrappaPoint(
							    Pt0.x + tmp1 * (Pt1.x - Pt0.x),
							    Pt0.y + tmp1 * (Pt1.y - Pt0.y)
							    );
=====================================================================
Found a 6 line (41 tokens) duplication in the following files: 
Starting at line 727 of /usr/local/git/PipeCoursework/src/circularbuffers/CircularByteBuffer.java
Starting at line 782 of /usr/local/git/PipeCoursework/src/circularbuffers/CircularByteBuffer.java

			while (!written){
				synchronized (CircularByteBuffer.this){
					if (outputStreamClosed) throw new IOException("OutputStream has been closed; cannot write to a closed OutputStream.");
					if (inputStreamClosed) throw new IOException("Buffer closed by InputStream; cannot write to a closed buffer.");
					int spaceLeft = spaceLeft();
					while (infinite && spaceLeft < 1){
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 360 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 400 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static long[] arrayAbs(long[] aa){
            int n = aa.length;
            long[] bb = new long[n];
            for(int i=0; i<n; i++){
               bb[i] = Math.abs(aa[i]);
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 350 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 410 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static int[] arrayAbs(int[] aa){
            int n = aa.length;
            int[] bb = new int[n];
            for(int i=0; i<n; i++){
               bb[i] = Math.abs(aa[i]);
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 340 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 390 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static float[] arrayAbs(float[] aa){
            int n = aa.length;
            float[] bb = new float[n];
            for(int i=0; i<n; i++){
               bb[i] = Math.abs(aa[i]);
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 330 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 380 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] arrayAbs(double[] aa){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = Math.abs(aa[i]);
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 189 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 471 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      Matrix X = new Matrix(n,m);
      double[][] C = X.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            C[j][i] = A[i][j];
=====================================================================
Found a 7 line (41 tokens) duplication in the following files: 
Starting at line 722 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1195 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		for (int i = 0; i < m; i++)
		{
			for (int j = 0; j < n; j++)
			{
				if (this.get(i, j) != 0)
				{
					return false;
=====================================================================
Found a 8 line (41 tokens) duplication in the following files: 
Starting at line 687 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 723 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

	public String getIdOfTaggedPlace()
	{
		final Iterator arcIterator = this.arcAngleList.iterator();
		while (arcIterator.hasNext())
		{
			final ArcAngleCompare thisArc = (ArcAngleCompare) arcIterator.next();
			
			if( thisArc.arc.getTarget() instanceof Place )
=====================================================================
Found a 3 line (41 tokens) duplication in the following files: 
Starting at line 293 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LaplaceTransformInverter.java
Starting at line 318 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LaplaceTransformInverter.java

			while(k < MQind[i].length) {
				isTgt = false;
				if(targetStates.containsKey(MQind[i][k]) && MQind[i][k] != i) {
=====================================================================
Found a 27 line (41 tokens) duplication in the following files: 
Starting at line 53 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/myNode.java
Starting at line 101 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/myNode.java

		trans_array = new boolean[tree.number_transitions];

		//Create an array of nodes for each node (for children)
		//Number of children limited to total number of transitions.
		children = new myNode[tree.number_transitions];

		//Initialise trans_array
		for(i=0; i< tree.number_transitions; i++){
			trans_array[i] = false;
		}

//        for(i=0; i< Markup.length; i++) {
//          System.out.print(this.Markup[i]);
//          System.out.print(" ");
//        }

	}
	/*---------------------------------------------------------------------
	 Function: boolean TransitionEnabled(int transIndex)

	 Tests to see if a particular transition is enabled by consulting C-
	 and the current markup contained in the tree.
	 transIndex = usual petri net description of a transition by an integer

	 ---------------------------------------------------------------------*/

	public  boolean TransitionEnabled(int transIndex) {
=====================================================================
Found a 8 line (41 tokens) duplication in the following files: 
Starting at line 142 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 300 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

              (source[i].getSource().getName().equals(comparison[j].getSource().getName()) && source[i].getTarget().getName().equals(comparison[j].getTarget().getName()))
              )
            k = j;
      }
      j = k;

      if(j != -1 && source[i] != null && comparison[j] != null) {
        results.add(source[i].getSource().getName()+"->"+source[i].getTarget().getName());
=====================================================================
Found a 6 line (41 tokens) duplication in the following files: 
Starting at line 582 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 633 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

		private String getTransitionConditions(int transitionNum) {
			
			String condition = new String();
		  	Iterator arcsTo = transitions[transitionNum]. getConnectToIterator();
		  	if (arcsTo.hasNext()){
		  		final Arc arc = (Arc)arcsTo.next();
=====================================================================
Found a 7 line (41 tokens) duplication in the following files: 
Starting at line 539 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 291 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

				offScreen.translate(dragStart.x - e.getX(), dragStart.y - e.getY());
				Rectangle r = new Rectangle(offScreen.x, offScreen.y, 1, 1);
				scrollRectToVisible(r);
				super.mouseDragged(e);
			}
		}
	}
=====================================================================
Found a 12 line (41 tokens) duplication in the following files: 
Starting at line 1275 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 1243 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

			}
		}
	}

	class DeleteAction extends QueryAction
	{
		DeleteAction(final String name, final String tooltip, final String keystroke) {
			super(name, tooltip, keystroke);
		}

		public void actionPerformed(final ActionEvent e)
		{
=====================================================================
Found a 7 line (41 tokens) duplication in the following files: 
Starting at line 550 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 291 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

				offScreen.translate(dragStart.x - e.getX(), dragStart.y - e.getY());
				Rectangle r = new Rectangle(offScreen.x, offScreen.y, 1, 1);
				scrollRectToVisible(r);
				super.mouseDragged(e);
			}
		}
	}
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 73 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/NegationNode.java
Starting at line 81 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/MomentNode.java

		ArrayList children = getChildNodes();
		if (children != null) {
			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();	
=====================================================================
Found a 4 line (41 tokens) duplication in the following files: 
Starting at line 204 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java
Starting at line 253 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

		mapIterator = optionalChildNodesOrdered.iterator();
		while (mapIterator.hasNext()) {
			role = (String)mapIterator.next();
			arc = new PerformanceTreeArc(arcStartPointX, arcStartPointY, arcEndPointX, arcEndPointY, this, role, showArcLabels);
=====================================================================
Found a 4 line (41 tokens) duplication in the following files: 
Starting at line 185 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java
Starting at line 213 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

		Iterator mapIterator = requiredChildNodesOrdered.iterator();
		while (mapIterator.hasNext()) {
			role = (String)mapIterator.next();
			arc = new PerformanceTreeArc(arcStartPointX, arcStartPointY, arcEndPointX, arcEndPointY, this, role, showArcLabels);
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 88 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 95 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SequentialNode.java
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PercentileNode.java

		ArrayList children = getChildNodes();
		if (children != null) {
			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();
=====================================================================
Found a 13 line (41 tokens) duplication in the following files: 
Starting at line 147 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java
Starting at line 178 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

						 ((StateEditor)parent).addStateElement(placeStr, operatorStr, targetStr);
						
						 // Update the UI
						 place.setCondition(operatorStr, targetStr);
						
						 closeWindow();				 
					 }
					 catch (Exception exp) {
						 System.out.println("Error creating state: " + exp);
					 }	
				 }
				 else {
					 JOptionPane.showMessageDialog(null, "Please specify the number of tokens for the condition (under 1,000).",
=====================================================================
Found a 22 line (41 tokens) duplication in the following files: 
Starting at line 105 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java
Starting at line 246 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

	    JMenuItem menuItem = new JMenuItem("Remove");
	    
	    // Add action lister for the remove pop up item
	    menuItem.addActionListener ( new ActionListener () {
			public void actionPerformed(ActionEvent e)
			{
				remove(); 
			}

		});


	    popup.add(menuItem);

	    return popup;
	  }
	  
	  // Removes condition from currently selected place
	  private void remove()
	  {
		// Update the change buffer					 
		((StateEditor)parent).addStateElement(place.getId(), "", "");
=====================================================================
Found a 8 line (41 tokens) duplication in the following files: 
Starting at line 958 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 979 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java

	public boolean sequentialNodeAlreadyCreated()
	{
		boolean nodeAlreadyCreated = false;
		Iterator<PerformanceTreeNode> i = this.treeNodes.iterator();
		while (i.hasNext())
		{
			PerformanceTreeNode node = i.next();
			if (node instanceof SequentialNode)
=====================================================================
Found a 4 line (41 tokens) duplication in the following files: 
Starting at line 169 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java
Starting at line 70 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

		StringBuilder sb = new StringBuilder(System.getProperty("java.io.tmpdir"));
		sb.append(System.getProperty("file.separator"));
		sb.append("pipeTmpFiles");
		sb.append(System.getProperty("file.separator"));
=====================================================================
Found a 19 line (41 tokens) duplication in the following files: 
Starting at line 204 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 105 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java

		JMenuItem menuItem = new JMenuItem("Remove Condition");

		// Add action lister for the remove pop up item
		menuItem.addActionListener ( new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				remove(); 
			}
		});

		popup.add(menuItem);
		return popup;
	}

	/** 
	 * Removes condition from currently selected place
	 */
	private void remove() {
		// Update the change buffer					 
		((StateGroupEditor)parentDialog).addStateElement(place.getId(), "", "");
=====================================================================
Found a 12 line (41 tokens) duplication in the following files: 
Starting at line 216 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java
Starting at line 193 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

				modString += places[i].getId()+" = " + places[i].getCurrentMarking()+"; ";
			}
			modString += tagPlace + " = " + taggedPlaceIndex + ";";
			modString += "\n\t}\n";					
		}
		
		private void transitions()
		{
			
			for(int i=0; i<transitions.length; i++)
			{
			  	boolean taggedArc = false;
=====================================================================
Found a 13 line (41 tokens) duplication in the following files: 
Starting at line 357 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 535 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

	}
	
	private void stateGroups(ArrayList<StateGroup> stateGroups)
	{
		String[] currentCondition;
		int groupCount =0;
		
		for(StateGroup curStateGroup : stateGroups)
		{
			currentCondition = curStateGroup.getConditions();
			
			// for any group after the first add the OR 
			if (groupCount > 0)
=====================================================================
Found a 11 line (41 tokens) duplication in the following files: 
Starting at line 58 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

		try
		{			
			// Create output mod file
			modFile = new File(file);
			FileWriter modFileWriter = new FileWriter(modFile); 
			
			System.out.print("Creating mod file " + file + ".. ");
			
			if (places.length > 0)
			{
				model();
=====================================================================
Found a 6 line (41 tokens) duplication in the following files: 
Starting at line 54 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/MomentSSPExecutor.java
Starting at line 252 of /usr/local/git/PipeCoursework/src/pipe/common/queryresult/TextFileResultWrapper.java

						final Scanner s2 = new Scanner(temp);

						final double x = s2.hasNextDouble() ? s2.nextDouble() : StringHelper.SENTINEL;
						final double y = s2.hasNextDouble() ? s2.nextDouble() : StringHelper.SENTINEL;

						if (s2.hasNext() || x == StringHelper.SENTINEL || x == StringHelper.SENTINEL)
=====================================================================
Found a 12 line (40 tokens) duplication in the following files: 
Starting at line 1167 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1182 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return false;
	return(tags.containsKey(tag));
    }

    /**
     * Check if this Element has the supplied tag as a default tag.
     *
     * @param tag tag value to be searched for
     * @return true, if this Element has the supplied tag as a default tag
     */
    public boolean hasDefaultTag(String tag) {
=====================================================================
Found a 5 line (40 tokens) duplication in the following files: 
Starting at line 289 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 349 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

	    if(currentModifiers == InputEvent.BUTTON1_MASK || currentModifiers == (InputEvent.BUTTON1_MASK|InputEvent.CTRL_MASK)) {
		Graphics2D g2d = (Graphics2D)(panel.getGraphics());
		AffineTransform orig = g2d.getTransform();
		g2d.setTransform(panel.getTransform());
		g2d.setXORMode(Color.darkGray);
=====================================================================
Found a 7 line (40 tokens) duplication in the following files: 
Starting at line 318 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 330 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

					  pos.y + (double)(i * PERIPHERY_GAP),
					  width - (double)(2 * i * PERIPHERY_GAP),
					  height - (double)(2 * i * PERIPHERY_GAP)
					  ),
				     false
				     );
			    }
=====================================================================
Found a 3 line (40 tokens) duplication in the following files: 
Starting at line 473 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java
Starting at line 481 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java

			path.curveTo(
				     (float)(x + tmpVertices[i].x), (float)(y - tmpVertices[i].y),
				     (float)(x + tmpVertices[0].x), (float)(y - tmpVertices[0].y),
=====================================================================
Found a 3 line (40 tokens) duplication in the following files: 
Starting at line 114 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 123 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

			    cvt.buildPoint(prtbuf, ((java.awt.geom.Point2D)args[argn++]), true);
			else if (args[argn] instanceof java.awt.geom.Dimension2D)
			    cvt.buildSize(prtbuf, ((java.awt.geom.Dimension2D)args[argn++]), true);
=====================================================================
Found a 12 line (40 tokens) duplication in the following files: 
Starting at line 1368 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1167 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return false;
	return(tags.containsKey(tag));
    }

    /**
     * Check if this Element has the supplied tag locally.
     *
     * @param tag tag value to be searched for
     * @return true, if this Element contains the supplied tag
     */
    public boolean hasLocalTag(String tag) {
=====================================================================
Found a 8 line (40 tokens) duplication in the following files: 
Starting at line 722 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 568 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

			sgbox.add(((Subgraph)elem).getBoundingBox());
		    }
		    break;
		default: // cannot happen
		    throw new InternalError("unknown type (" + elem.getType() + ")");
		}
	    }
	    GrappaSize minSize = (GrappaSize)element.getAttributeValue(MINSIZE_ATTR);
=====================================================================
Found a 19 line (40 tokens) duplication in the following files: 
Starting at line 575 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 366 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

    }
  
    /**
     * Sets or creates an attribute for this element from the supplied
     * arguments. The storage key is the attribute name.  If the value
     * argument is null, then the attribute will be removed from the element.
     *
     * @param name the attribute name
     * @param value the attribute value
     * @return the value of the (local) attribute previously stored
     *         under the same name
     */
    public Object setAttribute(String name, Object value) {
	if(attributes == null) {
	    attributes = new Hashtable();
	}
	if(name == null) {
	    throw new IllegalArgumentException("cannot set an attribute using a null name");
	}
=====================================================================
Found a 6 line (40 tokens) duplication in the following files: 
Starting at line 304 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 431 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 552 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	Attribute crntAttr =  getLocalAttribute(attr.getName());
	if(attr == crntAttr) return attr.getValue();
	if(crntAttr == null) {
	    if(attr.getValue() == null) {
		return null;
	    }
=====================================================================
Found a 19 line (40 tokens) duplication in the following files: 
Starting at line 161 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 204 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	}

	// update subgraph graph dictionary
	if(getSubgraph() != null) {
	    if(oldName != null) {
		getSubgraph().removeSubgraph(oldName);
	    }
	    getSubgraph().addSubgraph(this);
	}

	canonName = null;
    }

    /**
     * Check if the subgraph is a cluster subgraph.
     *
     * @return true, if the graph is a cluster subgraph.
     */
    public boolean isCluster() {
=====================================================================
Found a 9 line (40 tokens) duplication in the following files: 
Starting at line 1245 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1262 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1279 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1296 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1313 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static void println(char[] aa){
            for(int i=0; i<aa.length; i++){
                System.out.println(aa[i]+"   ");
            }
        }

        // print an array of String to screen
        // No line returns except at the end
        public static void print(String[] aa){
=====================================================================
Found a 5 line (40 tokens) duplication in the following files: 
Starting at line 1072 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1174 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] byteTOdouble(byte[] aa){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = (int)aa[i];
=====================================================================
Found a 9 line (40 tokens) duplication in the following files: 
Starting at line 662 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 734 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                if((array[ii] - value )>=0.0D){
                    diff0 = value - array[ii];
                    nearest = array[ii];
                    test = false;
                }
                else{
                    ii++;
                    if(ii>array.length-1){
                        nearest = max;
=====================================================================
Found a 5 line (40 tokens) duplication in the following files: 
Starting at line 430 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 449 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] arrayMultByConstant(int[] aa, int constant){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = (double)(aa[i]*constant);
=====================================================================
Found a 9 line (40 tokens) duplication in the following files: 
Starting at line 292 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 302 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 312 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 322 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            long aamin=aa[0];
            for(int i=1; i<n; i++){
                if(aa[i]<aamin)aamin=aa[i];
            }
            return aamin;
        }

        // Reverse the order of the elements of a 1D array of doubles, aa
        public static double[] reverseArray(double[] aa){
=====================================================================
Found a 9 line (40 tokens) duplication in the following files: 
Starting at line 252 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 262 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 272 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 282 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            long aamax=aa[0];
            for(int i=1; i<n; i++){
                if(aa[i]>aamax)aamax=aa[i];
            }
            return aamax;
        }

        // Minimum of a 1D array of doubles, aa
        public static double minimum(double[] aa){
=====================================================================
Found a 8 line (40 tokens) duplication in the following files: 
Starting at line 575 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 770 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java

	      for (int i = 0; i < handle_size; i++)
		{
		  stack.pop();
		  tos--;
		}
	      
	      /* look up the state to go to from the one popped back to */
	      act = get_reduce(((Symbol)stack.peek()).parse_state, lhs_sym_num);
=====================================================================
Found a 9 line (40 tokens) duplication in the following files: 
Starting at line 980 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1045 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

						pnObject = arc.getSource();
						if (pnObject != null)
						{
							if (pnObject instanceof Transition)
							{
								transition = (Transition) pnObject;
								transitionNo = this.getListPosition(transition);
								placeNo = this.getListPosition(place);
								this.forwardsIncidenceMatrix.set(placeNo, transitionNo, arc.getWeight());
=====================================================================
Found a 11 line (40 tokens) duplication in the following files: 
Starting at line 57 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMLTransformer.java
Starting at line 104 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMLTransformer.java

			document = documentBuilder.parse(pnmlFileName);

		}
		catch (final ParserConfigurationException e)
		{
			System.err.println("javax.xml.parsers.ParserConfigurationException thrown in getDom(String pnmlFileName) : dataLayer Class : dataLayer Package");
		}
		catch (final IOException e)
		{
			System.err.println("ERROR: File may not be present or have the correct attributes");
			System.err.println("java.io.IOException thrown in getDom(String pnmlFileName) : dataLayer Class : dataLayer Package");
=====================================================================
Found a 5 line (40 tokens) duplication in the following files: 
Starting at line 1328 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1709 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
				this.A[i][j] = 0;
=====================================================================
Found a 4 line (40 tokens) duplication in the following files: 
Starting at line 22 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/NewSteadyStateSolver.java
Starting at line 103 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/NewSteadyStateSolver.java

	public static double [] solveP(int[][] matrixQTInd, double[] matrixQTData) {
		int n;
		double [] pi = new double [n = matrixQTInd.length];
		double [] pisub1 = new double [n];
=====================================================================
Found a 8 line (40 tokens) duplication in the following files: 
Starting at line 502 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 547 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java

			result.add("<A HREF='#" + list.getID(i) + "'>" + list.getID(i).toString().toUpperCase()+ "</A>");
			result.add(f.format(data[i]));
		}
		
		return ResultsHTMLPane.makeTable(result.toArray(),2,false,true,true,true);
	}
	
	protected String renderLists(double[] data, Place[] places, String[] headings) {
=====================================================================
Found a 6 line (40 tokens) duplication in the following files: 
Starting at line 388 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPNNew.java
Starting at line 560 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java

		result.add(headings[1]);
		
		DecimalFormat f=new DecimalFormat();
		f.setMaximumFractionDigits(5);
		for (int i=0; i<rows; i++) {
			result.add(places[i].getName());
=====================================================================
Found a 14 line (40 tokens) duplication in the following files: 
Starting at line 336 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 370 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

	  		StringBuffer content = new StringBuffer();
	  		
	  		File saveFile;
		
			JFileChooser fc = new JFileChooser();			
			
			int returnVal = fc.showSaveDialog(resultsPanel);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			
			try {
=====================================================================
Found a 11 line (40 tokens) duplication in the following files: 
Starting at line 132 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 121 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsReceiver.java

			if(doCDF)
				graphPanel.add(cdfChartPanel, "CDF");		
			
	
			//	 Create the results panel
			resultsPanel.removeAll(); // clear if previously used
			resultsPanel.setLayout(new BorderLayout());
			resultsPanel.add(graphPanel, BorderLayout.CENTER);
			
			// Create button panel then add
			JPanel buttons = new JPanel();
=====================================================================
Found a 6 line (40 tokens) duplication in the following files: 
Starting at line 161 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 168 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultBarChartPlotter.java

			domainAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());

			this.chart.setBackgroundPaint(Color.white);
			this.chartPanel = new ChartPanel(this.chart);
			this.graphPanel = new JPanel();
			this.graphPanel.add(this.chartPanel, "Dist");
=====================================================================
Found a 10 line (40 tokens) duplication in the following files: 
Starting at line 130 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 341 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

			int returnVal = fc.showSaveDialog(resultsPanel);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			try {
				ImageIO.write(graphImage, "png", saveFile);
			}
			catch (IOException e) {
=====================================================================
Found a 12 line (40 tokens) duplication in the following files: 
Starting at line 70 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java
Starting at line 164 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java

											((NumNode) this.node).setNodeLabel(nodeLabel);

											if (MacroManager.getEditor() == null)
											{
												// not in macro mode
												QueryManager.getData().updateNode(this.node);
											}
											else
											{
												// in macro mode
												MacroManager.getEditor().updateNode(this.node);
											}
=====================================================================
Found a 8 line (40 tokens) duplication in the following files: 
Starting at line 242 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 205 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

	}

	public void clearSelection() {
		Component netObj[] = edit_window.getComponents();
		// Get all the objects in the current window
		for (int i=0; i<netObj.length; i++)
		{
			if ((netObj[i] instanceof Arc)
=====================================================================
Found a 9 line (40 tokens) duplication in the following files: 
Starting at line 1232 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 760 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

					toTest=selection.substring(0, (selection.length())-1);
				}
				
				if(Integer.parseInt(toTest)<40 || Integer.parseInt(toTest)>2000)
					throw new Exception();

				else return toTest;

			} catch(Exception e) {
=====================================================================
Found a 14 line (40 tokens) duplication in the following files: 
Starting at line 67 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 94 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

		setTarget(targetInput);
		if (MacroManager.getEditor() == null)
		{
			if (QueryManager.getEditor() != null)
			{
				updateArcPosition();
				updateArcPosition();
			}
		}
		else
		{
			updateArcPosition();
			updateArcPosition();
		}
=====================================================================
Found a 6 line (40 tokens) duplication in the following files: 
Starting at line 165 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 608 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

					y[k1] = (int) ((ArcPathPoint) this.pathPoints.get(curveStartIndex + k1)).getPoint().y;
				}
				x[k1] = x[k1 - 1];
				y[k1] = y[k1 - 1];

				X = this.calcNaturalCubic(k1, x);
=====================================================================
Found a 8 line (40 tokens) duplication in the following files: 
Starting at line 162 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java
Starting at line 178 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

						String acceptableNodeType = (String) retrievedNodesParentsOptionalChildNodes.get(retrievedNodesIncomingArcRole);
						ArrayList acceptableChildNodeTypes = new ArrayList();
						acceptableChildNodeTypes.add(acceptableNodeType);
						OutgoingArcInfo arcInfo = new OutgoingArcInfo(	acceptableChildNodeTypes,
																		argumentRequired);
						outgoingArcsInfo.put(argumentNodeName, arcInfo);
					}
					else if (retrievedNodesParentsOptionalChildNodes.get(retrievedNodesIncomingArcRole) instanceof ArrayList)
=====================================================================
Found a 9 line (40 tokens) duplication in the following files: 
Starting at line 1456 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 760 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

					toTest=selection.substring(0, (selection.length())-1);
				}
				
				if(Integer.parseInt(toTest)<40 || Integer.parseInt(toTest)>2000)
					throw new Exception();

				else return toTest;

			} catch(Exception e) {
=====================================================================
Found a 5 line (40 tokens) duplication in the following files: 
Starting at line 173 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 1110 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java

						Collection<String> outgoingArcIDs = ((OperationNode) node).getOutgoingArcIDs();
						Iterator<String> j = outgoingArcIDs.iterator();
						while (j.hasNext())
						{
							String outgoingArcID = j.next();
=====================================================================
Found a 4 line (40 tokens) duplication in the following files: 
Starting at line 204 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java
Starting at line 213 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

		Iterator mapIterator = requiredChildNodesOrdered.iterator();
		while (mapIterator.hasNext()) {
			role = (String)mapIterator.next();
			arc = new PerformanceTreeArc(arcStartPointX, arcStartPointY, arcEndPointX, arcEndPointY, this, role, showArcLabels);
=====================================================================
Found a 14 line (40 tokens) duplication in the following files: 
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/ValueNode.java
Starting at line 358 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

		if (MacroManager.getEditor() == null)
		{
			// we want the label to be put on the main drawing canvas
			QueryView queryView = QueryManager.getView();
			if (queryView != null)
			{
				// If this is the first time the arc label is being added then
				// the remove operation will have no affect. However, for
				// subsequent
				// updates to the weight label, the remove will prevent it from
				// being added more than once.
				if (!QueryManager.isEvaluatingQuery())
				{
					queryView.remove(this.arcLabel);
=====================================================================
Found a 13 line (40 tokens) duplication in the following files: 
Starting at line 45 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/ValueNode.java
Starting at line 126 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

	}
	
	public void setNodeLabel(String labelInput) {
		if (nodeLabel == null) {
			nodeLabel = new PerformanceTreeObjectLabel();
		}
		nodeLabel.setText(labelInput);	
		
		if (g2d != null)
			displayNodeLabel();		
	}
	
	public void displayNodeLabel(){		
=====================================================================
Found a 5 line (40 tokens) duplication in the following files: 
Starting at line 664 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 719 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java

						for (int i = 0; i < stateGroupsListSelectedIndices.length; i++)
						{
							int selectionIndex = stateGroupsListSelectedIndices[i];
							String selectedStateName = (String) StateLabelManager.stateGroupsList	.getModel()
																									.getElementAt(selectionIndex);
=====================================================================
Found a 10 line (40 tokens) duplication in the following files: 
Starting at line 90 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/PerformanceTreeExporter.java
Starting at line 133 of /usr/local/git/PipeCoursework/src/pipe/gui/Export.java

        filename=new FileBrowser("PostScript file","ps",filename).saveFile();
        if(filename!=null)toPostScript(g,filename);
        break;
      case PRINTER:
        toPrinter(g);
        break;
      }
    } catch (Exception e) {
      // There was some problem with the action
      JOptionPane.showMessageDialog(CreateGui.getApp(),
=====================================================================
Found a 6 line (40 tokens) duplication in the following files: 
Starting at line 1023 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 584 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

						Iterator<String> i = ((OperationNode) macroNode).getOutgoingArcIDs().iterator();
						while (i.hasNext())
						{
							String outgoingArcID = i.next();
							System.out.println("  an outgoing arc with ID " + outgoingArcID + " ");
							if (getMacroArc(outgoingArcID).getTargetID() != null)
=====================================================================
Found a 8 line (40 tokens) duplication in the following files: 
Starting at line 632 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 126 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

							Node macroNode = macroElements.item(j);
							if (macroNode instanceof Element)
							{
								Element macroElement = (Element) macroNode;
								if ("tree".equals(macroElement.getNodeName()))
								{
									NodeList treeElements = macroElement.getChildNodes();
									for (int k = 0; k < treeElements.getLength(); k++)
=====================================================================
Found a 3 line (40 tokens) duplication in the following files: 
Starting at line 359 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 354 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

		HashMap<String, ArrayList<String>> retrievedStateLabels = QueryManager.getData().getStateLabels();
		HashMap<String, ArrayList<String>> stateLabels = new HashMap<String, ArrayList<String>>();
		ArrayList<String> actionLabels = new ArrayList<String>();
=====================================================================
Found a 6 line (40 tokens) duplication in the following files: 
Starting at line 59 of /usr/local/git/PipeCoursework/src/pipe/modules/reachability/ReachabilityGraphGenerator.java
Starting at line 54 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

    Container contentPane=guiDialog.getContentPane();
    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
    
    // 2 Add file browser
    contentPane.add(sourceFilePanel    =new PetriNetChooserPanel("Source net",pnmlData));
    contentPane.add(comparisonFilePanel=new PetriNetChooserPanel("Comparison net",null));
=====================================================================
Found a 12 line (40 tokens) duplication in the following files: 
Starting at line 233 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 336 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

				graphImage = cdfGraph.createBufferedImage(800, 600);
			
			
			File saveFile;
			JFileChooser fc = new JFileChooser();
			int returnVal = fc.showSaveDialog(resultsPanel);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			try {
=====================================================================
Found a 12 line (40 tokens) duplication in the following files: 
Starting at line 204 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 130 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java

														int returnVal = fc.showSaveDialog(ResultGraphPlotter.this.resultsPanel);
														if (returnVal == JFileChooser.APPROVE_OPTION)
														{
															saveFile = fc.getSelectedFile();
														}
														else return;
														try
														{
															ImageIO.write(graphImage, "png", saveFile);
														}
														catch (IOException e)
														{
=====================================================================
Found a 14 line (40 tokens) duplication in the following files: 
Starting at line 199 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 233 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java

	  		StringBuffer content = new StringBuffer();
	  		
	  		File saveFile;
		
			JFileChooser fc = new JFileChooser();			
			
			int returnVal = fc.showSaveDialog(resultsPanel);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			
			try {
=====================================================================
Found a 14 line (40 tokens) duplication in the following files: 
Starting at line 121 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 132 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

			graphPanel.add(pdfChartPanel, "PDF");
			
			graphPanel.add(cdfChartPanel, "CDF");
			

			//	 Create the results panel
			resultsPanel.removeAll(); // clear if previously used
			resultsPanel.setLayout(new BorderLayout());
			resultsPanel.add(graphPanel, BorderLayout.CENTER);
			
			
			
			// Create button panel then add
			JPanel buttons = new JPanel();
=====================================================================
Found a 17 line (40 tokens) duplication in the following files: 
Starting at line 239 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 283 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java

	    }
			
	}
	
	 /**
	   * This ActionListener responds to the buttons within the
	   * state group selection panel    
	   * i.e. the Add, Remove, Edit buttons
	   */
	  ActionListener stateButtonClick = new ActionListener()
	  {		  
		  public void actionPerformed(ActionEvent event)
		  {
			  if (event.getSource() == addBtn)
			  {
				  StateEditor addState = new StateEditor();
				  addState.setParent(Passage.this);
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 1507 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1535 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

			enm = ((Edge)elem).getHead().inEdgeElements();
			while(enm.hasMoreElements()) {
			    edge = (Edge)(enm.nextElement());
			    if (edge.goesReverse()) {
				if (edge.visastamp != stamp) {
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 1497 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1525 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

			enm = ((Edge)elem).getHead().outEdgeElements();
			while(enm.hasMoreElements()) {
			    edge = (Edge)(enm.nextElement());
			    if (edge.goesForward()) {
				if (edge.visastamp != stamp) {
=====================================================================
Found a 7 line (39 tokens) duplication in the following files: 
Starting at line 1091 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1097 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	    enm = ((Subgraph)this).edgeElements();
	    elem = null;
	    while(enm.hasMoreElements()) {
		elem = (Element)enm.nextElement();
		elem.delete();
	    }
	    enm = ((Subgraph)this).subgraphElements();
=====================================================================
Found a 1 line (39 tokens) duplication in the following files: 
Starting at line 391 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 404 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	    } else if(value instanceof String && ((String)value).trim().length() == 0 && Attribute.attributeType(getType(),name) != STRING_TYPE) {
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 583 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 959 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

		enm = subg.nodeElements();
		Node node;
		while(enm.hasMoreElements()) {
		    node = (Node)enm.nextElement();
		    if((grappaNexus = node.grappaNexus) == null || !node.selectable) continue;
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 571 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 940 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

		enm = subg.edgeElements();
		Edge edge;
		while(enm.hasMoreElements()) {
		    edge = (Edge)enm.nextElement();
		    if((grappaNexus = edge.grappaNexus) == null || !edge.selectable) continue;
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 523 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 959 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

		enm = subg.nodeElements();
		Node node;
		while(enm.hasMoreElements()) {
		    node = (Node)enm.nextElement();
		    if((grappaNexus = node.grappaNexus) == null || !node.selectable) continue;
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 512 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 940 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

		enm = subg.edgeElements();
		Edge edge;
		while(enm.hasMoreElements()) {
		    edge = (Edge)enm.nextElement();
		    if((grappaNexus = edge.grappaNexus) == null || !edge.selectable) continue;
=====================================================================
Found a 19 line (39 tokens) duplication in the following files: 
Starting at line 1443 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1269 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	if((attr = getLocalAttribute(TAG_ATTR)) == null) return;
	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return;
	tags.remove(tag);
    }

    /**
     * Sets the conversion type of a user-defined attribute.
     * Unless provided for a specific attribute name, the attribute value
     * will only be treated as a string. When provided, the string value
     * of the attribute will be converted to the given type and vice
     * versa.
     *
     * @param attrname the attribute name
     * @param attrtype the attribute type
     *
     * @return the previous type associated with this attribute name
     */
    public static int setUserAttributeType(String attrname, int attrtype) {
=====================================================================
Found a 12 line (39 tokens) duplication in the following files: 
Starting at line 1417 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1255 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	if((attr = getLocalAttribute(TAG_ATTR)) == null) return;
	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return;
	tags.clear();
    }

    /**
     * Removes the specified tag locally from this element.
     *
     * @param tag the tag value to remove
     */
    public void removeTag(String tag) {
=====================================================================
Found a 1 line (39 tokens) duplication in the following files: 
Starting at line 607 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 627 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    } else if(value instanceof String && ((String)value).trim().length() == 0 && Attribute.attributeType(getType(),name) != STRING_TYPE) {
=====================================================================
Found a 19 line (39 tokens) duplication in the following files: 
Starting at line 500 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 408 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	    } else {
		crntAttr.setValue(value);
	    }
	}
	if(crntAttr.hasChanged()) {
	    crntAttr.notifyObservers(new Long(System.currentTimeMillis()));
	}
	return oldValue;
    }

  
    /*
     * Removes the named attribute from the (local) attribute table and
     * applies the default attribute (if any)
     *
     * @param name the name of the attribute to be removed.
     * @return the default attribute pair for this attribute.
     */
    private Attribute removeAttribute(String name) {
=====================================================================
Found a 8 line (39 tokens) duplication in the following files: 
Starting at line 465 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 588 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    attributes = new Hashtable();
	}
	if(name == null) {
	    throw new IllegalArgumentException("cannot set an attribute using a null name");
	}
	// check to see if this name value is the same as the parent default
	Subgraph sg = getSubgraph();
	Attribute prntAttr = (sg==null)?null:sg.getLocalAttribute(name);
=====================================================================
Found a 19 line (39 tokens) duplication in the following files: 
Starting at line 379 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 408 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	    } else {
		crntAttr.setValue(value);
	    }
	}
	if(crntAttr.hasChanged()) {
	    crntAttr.notifyObservers(new Long(System.currentTimeMillis()));
	}
	return oldValue;
    }

  
    /*
     * Removes the named attribute from the (local) attribute table and
     * applies the default attribute (if any)
     *
     * @param name the name of the attribute to be removed.
     * @return the default attribute pair for this attribute.
     */
    private Attribute removeAttribute(String name) {
=====================================================================
Found a 8 line (39 tokens) duplication in the following files: 
Starting at line 339 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 465 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    edgeAttributes = new Hashtable();
	}
	if(name == null) {
	    throw new IllegalArgumentException("cannot set an attribute using a null name");
	}
	// check to see if this name value is the same as the parent default
	Subgraph sg = getSubgraph();
	Attribute prntAttr = (sg==null)?null:sg.getEdgeAttribute(name);
=====================================================================
Found a 3 line (39 tokens) duplication in the following files: 
Starting at line 525 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 636 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                for(int i=0; i<n; i++){
                        for(int j=0; j<m; j++){
                                for(int k=0; k<l; k++){
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 449 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1072 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] floatTOdouble(float[] aa){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = (double)aa[i];
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 410 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1164 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static int[] shortTOint(short[] aa){
            int n = aa.length;
            int[] bb = new int[n];
            for(int i=0; i<n; i++){
               bb[i] = (int)aa[i];
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 400 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1102 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static long[] intTOlong(int[] aa){
            int n = aa.length;
            long[] bb = new long[n];
            for(int i=0; i<n; i++){
               bb[i] = (long)aa[i];
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 390 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1092 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static float[] intTOfloat(int[] aa){
            int n = aa.length;
            float[] bb = new float[n];
            for(int i=0; i<n; i++){
               bb[i] = (float)aa[i];
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 380 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1174 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] byteTOdouble(byte[] aa){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = (int)aa[i];
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 360 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1102 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static long[] intTOlong(int[] aa){
            int n = aa.length;
            long[] bb = new long[n];
            for(int i=0; i<n; i++){
               bb[i] = (long)aa[i];
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 350 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1164 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static int[] shortTOint(short[] aa){
            int n = aa.length;
            int[] bb = new int[n];
            for(int i=0; i<n; i++){
               bb[i] = (int)aa[i];
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 340 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1092 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static float[] intTOfloat(int[] aa){
            int n = aa.length;
            float[] bb = new float[n];
            for(int i=0; i<n; i++){
               bb[i] = (float)aa[i];
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 330 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1174 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] byteTOdouble(byte[] aa){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = (int)aa[i];
=====================================================================
Found a 7 line (39 tokens) duplication in the following files: 
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/common/queryresult/TextFileResultWrapper.java
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/common/queryresult/TextFileResultWrapper.java

									final String pattern,
									final String nodeID,
									final PTNode type) throws FileNotFoundException, IOException {
		super(nodeID, type);
		this.fileString = this.findandRemoveSentinel(this.getFileText(resultsDir, fileName));

		this.numResult = StringHelper.getNumResult(pattern, this.fileString.toString());
=====================================================================
Found a 6 line (39 tokens) duplication in the following files: 
Starting at line 562 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LTIMapRed.java
Starting at line 571 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LTIMapRed.java

				double Y = N*H;
				if(!toCalculate.containsKey(new Complex(X,Y))) {
					//writer.append(new ComplexWritable(X,Y), new DoubleTupleWritable(0));
					toCalculate.put(new Complex(X, Y), null);
				}
			}
=====================================================================
Found a 4 line (39 tokens) duplication in the following files: 
Starting at line 276 of /usr/local/git/PipeCoursework/src/pipe/gui/Animator.java
Starting at line 371 of /usr/local/git/PipeCoursework/src/pipe/gui/Animator.java

   		  firedTransitions.remove(count1);
  	  
  	  for(int i=0;i<firedTransitions.size();i++)
  		  System.out.println( ( (Transition) firedTransitions.get(i)).getId() );
=====================================================================
Found a 7 line (39 tokens) duplication in the following files: 
Starting at line 105 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		transitions = pnmldata.getTransitions();
		
		// Build interface
		guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
		
		Container contentPane=guiDialog.getContentPane();
		contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
=====================================================================
Found a 10 line (39 tokens) duplication in the following files: 
Starting at line 130 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 62 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/JFCGraphFrame.java

			int returnVal = fc.showSaveDialog(JFCGraphFrame.this);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			try {
				ImageIO.write(graphImage, "png", saveFile);
			}
			catch (IOException e) {
=====================================================================
Found a 15 line (39 tokens) duplication in the following files: 
Starting at line 393 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java
Starting at line 475 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java

																	"Invalid entry",
																	JOptionPane.ERROR_MESSAGE);
								}
							}
						}
						catch (Exception exc)
						{
							if (input != null)
								JOptionPane.showMessageDialog(	this.contentPane,
																"Please enter a valid string.",
																"Invalid entry",
																JOptionPane.ERROR_MESSAGE);
						}
					}
				}
=====================================================================
Found a 18 line (39 tokens) duplication in the following files: 
Starting at line 49 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeArcPathPointHandler.java
Starting at line 41 of /usr/local/git/PipeCoursework/src/pipe/gui/ArcPathPointHandler.java

			menuItem = new JMenuItem(new SplitArcPointAction((ArcPathPoint)myObject));
			menuItem.setText("Split Point");
			popup.add(menuItem);
			
			// The following commented out code can be used for
			// debugging arc issues - Nadeem 18/07/2005
			/*menuItem = new JMenuItem(new GetIndexAction((ArcPathPoint)myObject, mouseposition));
			 menuItem.setText("Point Index");
			 popup.add(menuItem);*/
		}
		return popup;
	}

	public void mousePressed(MouseEvent e)
	{
		if (myObject.isEnabled())
		{
			((ArcPathPoint)e.getComponent()).setVisibilityLock(true);
=====================================================================
Found a 8 line (39 tokens) duplication in the following files: 
Starting at line 128 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java
Starting at line 60 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeArcHandler.java

	public void mouseDragged(MouseEvent e) {
		int switchCondition;
		if (MacroManager.getEditor() == null)
			switchCondition = QueryManager.getMode();
		else
			switchCondition = MacroManager.getMode();
		switch (switchCondition) {
		case SELECT:
=====================================================================
Found a 8 line (39 tokens) duplication in the following files: 
Starting at line 249 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 137 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

	public void paintComponent(Graphics g) {
		Graphics2D g2 = (Graphics2D)g;
		super.paintComponent(g2);

		if (Grid.enabled()) {
			Grid.updateSize(this);
			Grid.drawGrid(g);
		}
=====================================================================
Found a 15 line (39 tokens) duplication in the following files: 
Starting at line 182 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 221 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

	public Arc(	final double startPositionXInput,
				final double startPositionYInput,
				final double endPositionXInput,
				final double endPositionYInput,
				final String idInput) {
		this(startPositionXInput, startPositionYInput, endPositionXInput, endPositionYInput);
		this.id = idInput;

	}

	/**
	 * Create Petri-Net Arc object
	 * 
	 */
	public Arc(final PlaceTransitionObject newSource) {
=====================================================================
Found a 8 line (39 tokens) duplication in the following files: 
Starting at line 297 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 137 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

	public void paintComponent(Graphics g) {
		Graphics2D g2 = (Graphics2D)g;
		super.paintComponent(g2);

		if (Grid.enabled()) {
			Grid.updateSize(this);
			Grid.drawGrid(g);
		}
=====================================================================
Found a 12 line (39 tokens) duplication in the following files: 
Starting at line 176 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java
Starting at line 196 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

	 };
	
	private void closeWindow()
	{
		conditionEdit.setVisible(false);
		conditionEdit.dispose();		 
	}
	
	 public void mousePressed(MouseEvent e)
	 {
		 // left click will display the add condition dialog
		 if (e.getButton() == MouseEvent.BUTTON1)
=====================================================================
Found a 6 line (39 tokens) duplication in the following files: 
Starting at line 168 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java
Starting at line 1061 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java

		if (!inputString.equals(""))
		{
			for (int i = 0; i < inputString.length(); i++)
			{
				char chr = inputString.charAt(i);
				if (Character.isLetter(chr))
=====================================================================
Found a 9 line (39 tokens) duplication in the following files: 
Starting at line 438 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java
Starting at line 955 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java

		}
		//Now set first element of each MatrixQind row to = num of transitions
		for(int i = 0; i < numColumns; i++) {
			MatrixQTind[i][0] = colSize[i];
		}
		ipfc.close();
		//printMatrix(MatrixQTind, MatrixQTdata);
		}
		catch(Exception e) {
=====================================================================
Found a 16 line (39 tokens) duplication in the following files: 
Starting at line 309 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/SteadyState.java
Starting at line 533 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

	}
	
	  
}	  

  

// This class allows a JList to operate in a click toggle fashion - see JList java doc
class ToggleSelectionModel extends DefaultListSelectionModel
{
	private static final long serialVersionUID = 1L;
	boolean gestureStarted = false;
    
    public void setSelectionInterval(int index0, int index1)
    {
		if (isSelectedIndex(index0) && !gestureStarted) 
=====================================================================
Found a 7 line (39 tokens) duplication in the following files: 
Starting at line 79 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/SteadyState.java
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		transitions = pnmldata.getTransitions();
		
		// Build interface
		guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
		
		Container contentPane=guiDialog.getContentPane();
		contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
=====================================================================
Found a 9 line (39 tokens) duplication in the following files: 
Starting at line 159 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 176 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java

	}

	private void closeWindow() {
		conditionEdit.setVisible(false);
		conditionEdit.dispose();		 
	}

	public void mousePressed(MouseEvent e) {
		if (e.getButton() == MouseEvent.BUTTON1) {
=====================================================================
Found a 14 line (39 tokens) duplication in the following files: 
Starting at line 530 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 309 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/SteadyState.java

	  }	 
}
	  


// This class allows a JList to operate in a click toggle fashion - see JList java doc
class ToggleSelectionModel extends DefaultListSelectionModel
{
	private static final long serialVersionUID = 1L;
	boolean gestureStarted = false;
    
    public void setSelectionInterval(int index0, int index1)
    {
    	if (isSelectedIndex(index0) && !gestureStarted)
=====================================================================
Found a 7 line (39 tokens) duplication in the following files: 
Starting at line 93 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		transitions = pnmldata.getTransitions();
		
		// Build interface
		guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
		
		Container contentPane=guiDialog.getContentPane();
		contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
=====================================================================
Found a 4 line (38 tokens) duplication in the following files: 
Starting at line 623 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 654 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java

		    if((elem.highlight&DELETION_MASK) == DELETION_MASK) {
			Enumeration enm = ((Subgraph)elem).elements();
			while(enm.hasMoreElements()) {
			    ((Element)(enm.nextElement())).highlight |= DELETION_MASK;
=====================================================================
Found a 4 line (38 tokens) duplication in the following files: 
Starting at line 618 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 642 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java

		    if((elem.highlight&DELETION_MASK) == DELETION_MASK) {
			Enumeration enm = ((Node)elem).edgeElements();
			while(enm.hasMoreElements()) {
			    ((Element)(enm.nextElement())).highlight |= DELETION_MASK;
=====================================================================
Found a 9 line (38 tokens) duplication in the following files: 
Starting at line 636 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 408 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	    } else {
		crntAttr.setValue(value);
	    }
	}
	if(crntAttr.hasChanged()) {
	    crntAttr.notifyObservers(new Long(System.currentTimeMillis()));
	}
	return oldValue;
    }
=====================================================================
Found a 8 line (38 tokens) duplication in the following files: 
Starting at line 743 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 952 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                        diff0 = value - max;
                        test = false;
                    }
                }
            }
            for(int i=0; i<array.length; i++){
                diff1 = array[i]- value;
                if(diff1>=0 && diff1<diff0 ){
=====================================================================
Found a 8 line (38 tokens) duplication in the following files: 
Starting at line 709 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 842 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                        diff0 = min - value;
                        test = false;
                    }
                }
            }
            for(int i=0; i<array.length; i++){
                diff1 = value - array[i];
                if(diff1>=0 && diff1<diff0 ){
=====================================================================
Found a 5 line (38 tokens) duplication in the following files: 
Starting at line 330 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 420 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] arrayMultByConstant(double[] aa, double constant){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = aa[i]*constant;
=====================================================================
Found a 7 line (38 tokens) duplication in the following files: 
Starting at line 203 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 183 of /usr/local/git/PipeCoursework/src/jama/CholeskyDecomposition.java

         }
      }

      // Solve L'*X = Y;
      for (int k = n-1; k >= 0; k--) {
         for (int j = 0; j < nx; j++) {
            X[k][j] /= L[k][k];
=====================================================================
Found a 10 line (38 tokens) duplication in the following files: 
Starting at line 431 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 487 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java

      for (int probe = 0; probe < row.length; probe++)
	{
	  /* is this entry labeled with our Symbol or the default? */
	  tag = row[probe++];
	  if (tag == sym || tag == -1)
	    {
	      /* return the next entry */
	      return row[probe];
	    }
	}
=====================================================================
Found a 16 line (38 tokens) duplication in the following files: 
Starting at line 366 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 538 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 656 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

								if (id.equals(((Transition) this.transitionsArray.get(i)).getId()))
								{
									unique = false;
									no++;
								}
								else
								{
									unique = true;
								}
							}
						}
					} while (!unique);
				}
				else
				{
					id = "T0";
=====================================================================
Found a 14 line (38 tokens) duplication in the following files: 
Starting at line 44 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMLTransformer.java
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMLTransformer.java

	public Document getDOM(final String pnmlFileName)
	{

		Document document = null;

		try
		{

			final DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilderFactory.setIgnoringElementContentWhitespace(true);
			// POSSIBLY ADD VALIDATING
			// documentBuilderFactory.setValidating(true);
			final DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
			document = documentBuilder.parse(pnmlFileName);
=====================================================================
Found a 5 line (38 tokens) duplication in the following files: 
Starting at line 94 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java
Starting at line 161 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java

		this.componentWidth = Place.DIAMETER;
		this.componentHeight = Place.DIAMETER;
		this.setCentre((int) this.positionX, (int) this.positionY);
		this.updateBounds();
	}
=====================================================================
Found a 7 line (38 tokens) duplication in the following files: 
Starting at line 446 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 537 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

		if (!this.timed)
		{
			if (this.infiniteServer)
			{
				for (int i = 2; i >= 1; i--)
				{
					g2.translate(2 * i, -2 * i);
=====================================================================
Found a 4 line (38 tokens) duplication in the following files: 
Starting at line 58 of /usr/local/git/PipeCoursework/src/pipe/common/queryresult/XYCoordinates.java
Starting at line 72 of /usr/local/git/PipeCoursework/src/pipe/common/queryresult/XYCoordinates.java

	private List<XYCoordinate> doGetFromYToY(final double start, final double end)
	{
		final ArrayList<XYCoordinate> subList = new ArrayList<XYCoordinate>();
		final int startIndex = this.adjustIndex(Collections.binarySearch(	this.pointsOrderedByY,
=====================================================================
Found a 8 line (38 tokens) duplication in the following files: 
Starting at line 754 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 193 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

		NewTransitionRecord newTransition;
		Iterator iterator = arclist.iterator();
		ArcListElement current;
		while(iterator.hasNext()){
			current = (ArcListElement)iterator.next();
			
			if (writeTransitionsNo) {
				newTransition = new NewTransitionRecord(from.getIDNum(), current.getTo(), current.getRate(), current.transitionNo, from.getisTangible());
=====================================================================
Found a 19 line (38 tokens) duplication in the following files: 
Starting at line 319 of /usr/local/git/PipeCoursework/src/pipe/gui/Animator.java
Starting at line 342 of /usr/local/git/PipeCoursework/src/pipe/gui/Animator.java

  animator.unhighlightDisabledTransitions();
  
  
  if (count == firedTransitions.size()) {
      firedTransitions.add(transition);
      count++;
   } else { 
	   
	   
  	  firedTransitions.set(count, transition);
  	      count++;
     	  removeStoredTransitions();
   }  
  
   //count++;

   
   
   }		
=====================================================================
Found a 6 line (38 tokens) duplication in the following files: 
Starting at line 676 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java
Starting at line 777 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

		FileAction(String name, String tooltip, String keystroke) {
			super(name, tooltip, keystroke);
		}

		public void actionPerformed(ActionEvent e) {
			String actionName = (String)getValue(NAME);
=====================================================================
Found a 10 line (38 tokens) duplication in the following files: 
Starting at line 84 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 144 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		resultsButton.setEnabled(false);
		
		guiDialog.pack();
		guiDialog.setLocationRelativeTo(null);    
	  guiDialog.setVisible(true);
	}
	
	ActionListener runDnamacaAction=new ActionListener() {
		public void actionPerformed(ActionEvent arg0) {
			if (!getUrtaPath()) {
=====================================================================
Found a 8 line (38 tokens) duplication in the following files: 
Starting at line 105 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java
Starting at line 69 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

		  System.out.println("\n running dnamaca tagged");
		  
		  
		  //		 Build interface
			guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
			
			Container contentPane=guiDialog.getContentPane();
			contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
=====================================================================
Found a 2 line (38 tokens) duplication in the following files: 
Starting at line 111 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 97 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsReceiver.java

					values = lines[i].split("\\s+");
					CDFpoints.add(new Double(values[0]).doubleValue(), new Double(values[1]).doubleValue() );
=====================================================================
Found a 3 line (38 tokens) duplication in the following files: 
Starting at line 176 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 322 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

			for(int i=1; i<places.length; i++) {
				modString += ", "+places[i].getId();
				if(places[i].isTagged())
=====================================================================
Found a 16 line (38 tokens) duplication in the following files: 
Starting at line 110 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 99 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultBarChartPlotter.java

															JOptionPane.showMessageDialog(	ResultBarChartPlotter.this.resultsPanel,
																							msg,
																							"File Writing Error",
																							JOptionPane.WARNING_MESSAGE);
														}
													}
												};

	private final ActionListener	pngListener	= new ActionListener()
												{
													public void actionPerformed(ActionEvent eve)
													{

														RenderedImage graphImage;

														graphImage = ResultBarChartPlotter.this.chart.createBufferedImage(	800,
=====================================================================
Found a 14 line (38 tokens) duplication in the following files: 
Starting at line 407 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 440 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

				window.addTab(area, name);
			}
			else
			{
				throw new QueryAnalysisException("Argument Node isn't of type SSP");
			}
		}
		catch (final QueryAnalysisException e)
		{
			EvaluatorGuiLoggingHandler.logger.log(Level.WARNING, "Couldn't create Histogram", e);
		}
	}

	public static void setupTextTab(final QueryOperationNode node, final String name)
=====================================================================
Found a 5 line (38 tokens) duplication in the following files: 
Starting at line 816 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 571 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

			appTab.setTitleAt(appTab.getSelectedIndex(),outFile.getName());
			setTitle(outFile.getName());  // Change the window title
		} catch (Exception e) {
			System.err.println(e);
			JOptionPane.showMessageDialog(GuiFrame.this,
=====================================================================
Found a 6 line (38 tokens) duplication in the following files: 
Starting at line 308 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 697 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

		((ArcPathPoint) this.pathPoints.get(index)).setPointLocation((float) point.x, (float) point.y);
	}

	public void setPointType(int index, boolean type)
	{
		((ArcPathPoint) this.pathPoints.get(index)).setPointType(type);
=====================================================================
Found a 4 line (38 tokens) duplication in the following files: 
Starting at line 234 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateGroupEditor.java
Starting at line 538 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java

			}
		} catch (QueryException e) {
			String msg = e.getMessage();
			JOptionPane.showMessageDialog(QueryManager.getEditor().getContentPane(), msg, "Warning", JOptionPane.ERROR_MESSAGE);
=====================================================================
Found a 6 line (38 tokens) duplication in the following files: 
Starting at line 106 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroTransformer.java
Starting at line 135 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroTransformer.java

			document = documentBuilder.parse(ptmlFile);
		} catch (ParserConfigurationException e) {
			System.err.println("javax.xml.parsers.ParserConfigurationException thrown in getDom(String ptmlFileName) : modules.queryeditor.io.MacroTransformer");
		} catch (IOException e) {
			System.err.println("ERROR: File may not be present or have the correct attributes");
			System.err.println("java.io.IOException thrown in getDom(String ptmlFileName) : modules.queryeditor.io.MacroTransformer" + e);
=====================================================================
Found a 5 line (38 tokens) duplication in the following files: 
Starting at line 243 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java
Starting at line 254 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

			i = nodeOutgoingArcIDs.iterator();
			while (i.hasNext())
			{
				String outgoingArcID = (String) i.next();
				PerformanceTreeArc nodeArc = MacroWriter.macro.getMacroArc(outgoingArcID);
=====================================================================
Found a 10 line (38 tokens) duplication in the following files: 
Starting at line 1206 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 234 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateGroupEditor.java

													}
												}
												catch (QueryException e)
												{
													String msg = e.getMessage();
													JOptionPane.showMessageDialog(	QueryManager.getEditor()
																								.getContentPane(),
																					msg,
																					"Warning",
																					JOptionPane.ERROR_MESSAGE);
=====================================================================
Found a 6 line (38 tokens) duplication in the following files: 
Starting at line 106 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryTransformer.java
Starting at line 135 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryTransformer.java

			document = documentBuilder.parse(ptmlFile);
		} catch (ParserConfigurationException e) {
			System.err.println("javax.xml.parsers.ParserConfigurationException thrown in getDom(String ptmlFileName) : modules.queryeditor.io.QueryTransformer");
		} catch (IOException e) {
			System.err.println("ERROR: File may not be present or have the correct attributes");
			System.err.println("java.io.IOException thrown in getDom(String ptmlFileName) : modules.queryeditor.io.QueryTransformer" + e);
=====================================================================
Found a 13 line (38 tokens) duplication in the following files: 
Starting at line 70 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 82 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

		Document ptDOM = null;
		StreamSource xsltSource = null;
		Transformer transformer = null;

		try
		{
			// Build a PTML Document
			DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance();
			DocumentBuilder builder = builderFactory.newDocumentBuilder();
			ptDOM = builder.newDocument();

			// PTML Element
			Element ptmlElement = ptDOM.createElement("ptml");
=====================================================================
Found a 3 line (38 tokens) duplication in the following files: 
Starting at line 545 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java
Starting at line 550 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java

					MatrixQind[i][++MatrixQind[i][0]] = i;
					MatrixQind[i][++MatrixQind[i][0]] = dataIndex;
					MatrixQdata[dataIndex++] = rowSumData;
=====================================================================
Found a 12 line (38 tokens) duplication in the following files: 
Starting at line 310 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/SteadyState.java
Starting at line 557 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java

	}
	
	
	//This class allows a JList to operate in a click toggle fashion - see JList java doc
	class ToggleSelectionModel extends DefaultListSelectionModel
	{
		private static final long serialVersionUID = 1L;
		boolean gestureStarted = false;
	    
	    public void setSelectionInterval(int index0, int index1)
	    {
			if (isSelectedIndex(index0) && !gestureStarted) 
=====================================================================
Found a 9 line (38 tokens) duplication in the following files: 
Starting at line 153 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/SteadyState.java
Starting at line 188 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

	    	if(pnmlData==null) return;
		      
	    	else if(!pnmlData.getPetriNetObjects().hasNext())
	    		statusMesg+="No Petri net objects defined!";
	    	
	    	else if (selectedServer == -1)
		    	statusMesg+="No server selected!";
	    	
	    	else if (!clearCacheBox.isSelected() && analysisSetting == null) 
=====================================================================
Found a 8 line (38 tokens) duplication in the following files: 
Starting at line 79 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/SteadyState.java
Starting at line 69 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

		  System.out.println("\n running dnamaca tagged");
		  
		  
		  //		 Build interface
			guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
			
			Container contentPane=guiDialog.getContentPane();
			contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
=====================================================================
Found a 2 line (38 tokens) duplication in the following files: 
Starting at line 97 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 111 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

					values = lines_cdf[i].split("\\s+");
					CDFpoints.add(new Double(values[0]).doubleValue(), new Double(values[1]).doubleValue() );
=====================================================================
Found a 8 line (38 tokens) duplication in the following files: 
Starting at line 93 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 69 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

		  System.out.println("\n running dnamaca tagged");
		  
		  
		  //		 Build interface
			guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
			
			Container contentPane=guiDialog.getContentPane();
			contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
=====================================================================
Found a 10 line (38 tokens) duplication in the following files: 
Starting at line 219 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java
Starting at line 344 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

			if(tagged) modString += tagPlace + " = " + taggedPlaceIndex + ";";
			modString += "\n\t}\n";					
		}
		
		private void transitions()
		{
			
			for(int i=0; i<transitions.length; i++)
			{
			  	boolean taggedArc = false;
=====================================================================
Found a 12 line (38 tokens) duplication in the following files: 
Starting at line 75 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 168 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

			modFileWriter.write(perfString);
			modFileWriter.close();
			System.out.println("Done");			
		}
		
		catch (IOException e3)
		{
			System.out.println("Could not write to file! " + file);
			e3.printStackTrace();
		}	
				
	}
=====================================================================
Found a 7 line (38 tokens) duplication in the following files: 
Starting at line 239 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java
Starting at line 258 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java

	private void DoProbInStates(final OperationSubtree subtree) throws QueryServerException, IOException
	{
		// get start, target and excluded states
		final SimpleOperationNode opNode = (SimpleOperationNode) subtree.getNode();
		final HashMap<String, String> kids = opNode.getChildren();

		this.srcStateGrps = new ArrayList<StateGroup>();
=====================================================================
Found a 20 line (37 tokens) duplication in the following files: 
Starting at line 108 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSize.java
Starting at line 124 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaBox.java

	return(toFormattedString("%b"));
    }

    /**
     * Provides a formatted string representation of this object.
     * 
     * @param format the format used to build the string (<TT>%b</TT> is the base directive for a GrappaBox).
     * @return a string representation of this GrappaBox. 
     */
    public String toFormattedString(String format) {
	return(GrappaSupportPrintf.sprintf(new Object[] { format, this }));
    }

    /**
     * Provides a generic string representation of this object.
     * 
     * @return a generic string representation of this GrappaBox. 
     */
    public String toString() {
	return(x+","+y+","+width+","+height);
=====================================================================
Found a 4 line (37 tokens) duplication in the following files: 
Starting at line 654 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 659 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java

		    } else {
			Enumeration enm = ((Subgraph)elem).elements();
			while(enm.hasMoreElements()) {
			    ((Element)(enm.nextElement())).highlight &= ~DELETION_MASK;
=====================================================================
Found a 4 line (37 tokens) duplication in the following files: 
Starting at line 642 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 647 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java

		    } else {
			Enumeration enm = ((Node)elem).edgeElements();
			while(enm.hasMoreElements()) {
			    ((Element)(enm.nextElement())).highlight &= ~DELETION_MASK;
=====================================================================
Found a 4 line (37 tokens) duplication in the following files: 
Starting at line 623 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 659 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java

		    } else {
			Enumeration enm = ((Subgraph)elem).elements();
			while(enm.hasMoreElements()) {
			    ((Element)(enm.nextElement())).highlight &= ~DELETION_MASK;
=====================================================================
Found a 4 line (37 tokens) duplication in the following files: 
Starting at line 618 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 647 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java

		    } else {
			Enumeration enm = ((Node)elem).edgeElements();
			while(enm.hasMoreElements()) {
			    ((Element)(enm.nextElement())).highlight &= ~DELETION_MASK;
=====================================================================
Found a 12 line (37 tokens) duplication in the following files: 
Starting at line 746 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 771 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

	    strpad(scratch, str, '0', precision, false);
	}

	if (padding == '0' && precision >= 0)
	    padding = ' ';

	return(strpad(buf, scratch.toString(), padding, width, rightpad));
    }

    ///////////////////////////////////////////////////////////////////////////

    final StringBuffer
=====================================================================
Found a 23 line (37 tokens) duplication in the following files: 
Starting at line 515 of /usr/local/git/PipeCoursework/src/circularbuffers/CircularByteBuffer.java
Starting at line 578 of /usr/local/git/PipeCoursework/src/circularbuffers/CircularByteBuffer.java

					} else if (outputStreamClosed){
						return -1;
					}
				}
				try {
					Thread.sleep(100);
				} catch(Exception x){
					throw new IOException("Blocking read operation interrupted.");
				}
			}
		}

		/**
		 * Reset the stream.
		 * If the stream has been marked, then attempt to reposition i
		 * at the mark. If the stream has not been marked, or more bytes
		 * than the readAheadLimit have been read, this method has no effect.
		 *
		 * @throws IOException if the stream is closed.
		 *
		 * @since ostermillerutils 1.00.00
		 */
		public void reset() throws IOException {
=====================================================================
Found a 7 line (37 tokens) duplication in the following files: 
Starting at line 284 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 291 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

            for(int i=0; i<aa.length; i++){
                    System.out.println(aa[i].toString() + "  ");
            }
        }

        // Print an array to terminal window with text (message) but no line returns except at the end
        public static void print(String message, Complex[] aa){
=====================================================================
Found a 11 line (37 tokens) duplication in the following files: 
Starting at line 1245 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1330 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static void println(String[] aa){
            for(int i=0; i<aa.length; i++){
                System.out.println(aa[i]+"   ");
            }
        }

        // sort elements in an array of doubles into ascending order
        // using selection sort method
        // returns Vector containing the original array, the sorted array
        //  and an array of the indices of the sorted array
        public static Vector<Object> selectSortVector(double[] aa){
=====================================================================
Found a 7 line (37 tokens) duplication in the following files: 
Starting at line 896 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 930 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static int nearestHigherElementIndex(int[] array, int value){
            int diff0 = 0;
            int diff1 = 0;
            int nearest = 0;
            int ii = 0;
            boolean test = true;
            int max = array[0];
=====================================================================
Found a 9 line (37 tokens) duplication in the following files: 
Starting at line 734 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 833 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                if((value - array[ii])>=0){
                    diff0 = value - array[ii];
                    nearest = array[ii];
                    test = false;
                }
                else{
                    ii++;
                    if(ii>array.length-1){
                        nearest = min;
=====================================================================
Found a 4 line (37 tokens) duplication in the following files: 
Starting at line 731 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 902 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            int max = array[0];
            while(test){
                if(array[ii]>max)max = array[ii];
                if((array[ii] - value )>=0){
=====================================================================
Found a 9 line (37 tokens) duplication in the following files: 
Starting at line 700 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 772 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                if((array[ii] - value )>=0.0D){
                    diff0 = value - array[ii];
                    nearest = ii;
                    test = false;
                }
                else{
                    ii++;
                    if(ii>array.length-1){
                        nearest = maxI;
=====================================================================
Found a 4 line (37 tokens) duplication in the following files: 
Starting at line 659 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 830 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            int min = array[0];
            while(test){
                if(array[ii]<min)min = array[ii];
                if((value - array[ii])>=0){
=====================================================================
Found a 5 line (37 tokens) duplication in the following files: 
Starting at line 420 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 449 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] arrayMultByConstant(int[] aa, int constant){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = (double)(aa[i]*constant);
=====================================================================
Found a 3 line (37 tokens) duplication in the following files: 
Starting at line 318 of /usr/local/git/PipeCoursework/src/jama/SingularValueDecomposition.java
Starting at line 392 of /usr/local/git/PipeCoursework/src/jama/SingularValueDecomposition.java

                  if (wantv) {
                     for (int i = 0; i < n; i++) {
                        t = cs*V[i][j] + sn*V[i][j+1];
=====================================================================
Found a 5 line (37 tokens) duplication in the following files: 
Starting at line 309 of /usr/local/git/PipeCoursework/src/jama/SingularValueDecomposition.java
Starting at line 334 of /usr/local/git/PipeCoursework/src/jama/SingularValueDecomposition.java

               for (int j = k; j < p; j++) {
                  double t = Maths.hypot(s[j],f);
                  double cs = s[j]/t;
                  double sn = f/t;
                  s[j] = t;
=====================================================================
Found a 18 line (37 tokens) duplication in the following files: 
Starting at line 41 of /usr/local/git/PipeCoursework/src/pipe/common/queryresult/PointsResultWrapper.java
Starting at line 60 of /usr/local/git/PipeCoursework/src/pipe/common/queryresult/PointsResultWrapper.java

		super(outputFileName, resultsDir, nodeID, type);
		this.plotPoints = this.getValues(this.getFileText(resultsDir, pointsFileName));
	}

	/**
	 * Has output file and value
	 * 
	 * @param pointsResult
	 * @param resultsDir
	 * @param pattern
	 * @param outputFileName
	 * @param nodeID
	 * @param type
	 * @throws FileNotFoundException
	 */
	public PointsResultWrapper(	final String pointsFileName,
								final File resultsDir,
								final String pattern,
=====================================================================
Found a 13 line (37 tokens) duplication in the following files: 
Starting at line 232 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LaplaceTransformInverter.java
Starting at line 243 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LaplaceTransformInverter.java

			double Y = N*H;
			double term = fnRf(new Complex(X,Y)).getReal();
			
			//double DELTA = H;
			//Complex i  = new Complex(0, 1);
			
			//seemintly unused code commented out in Euler.cxx, not yet converted to Java:
			//double approxterm = (fnRf(X, Y-DELTA) + fnRfprime(X,Y-DELTA)*i*DELTA = 0.5*fnRfprimeprime(X,Y-DELTA)*DELTA*DELTA).real();
			
			//cout << "term = " << term << "approxterm = " << approxterm << " rel err = " << (approxterm-term)/term << " h = " << H < end;
			
			if((N%2) != 0)
				term = -term;
=====================================================================
Found a 11 line (37 tokens) duplication in the following files: 
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/gui/PlaceTransitionObjectHandler.java
Starting at line 18 of /usr/local/git/PipeCoursework/src/pipe/gui/ArcHandler.java

	public ArcHandler(Container contentpane, Arc obj) {
		super(contentpane, obj);
		enablePopup = true;
	}	
//######################################################################################	
	/** Creates the popup menu that the user will see when they right click on a component */
	public JPopupMenu getPopup(MouseEvent e) {
		
		JPopupMenu popup = super.getPopup(e);		

	    JMenuItem menuItem = new JMenuItem(new EditWeightAction(contentPane,(Arc)myObject));
=====================================================================
Found a 16 line (37 tokens) duplication in the following files: 
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/io/RGFileHeader.java
Starting at line 26 of /usr/local/git/PipeCoursework/src/pipe/io/NewRGFileHeader.java

	public NewRGFileHeader(int ns, int ss, int nt, int trs, long offset) {
		signature = 8271; // ASCII code for 'R' 'G'
		numstates = ns;
		statearraysize = ss;
		numtransitions = nt;
		transitionrecordsize = trs;
		offsettotransitions = offset;
	}
	
	/**
	 * Creates blank reachabiliyt graph file header, everything set to zero
	 * @param input
	 * @throws IncorrectFileFormatException
	 * @throws IOException
	 */
	public NewRGFileHeader(RandomAccessFile input) throws IncorrectFileFormatException, IOException{
=====================================================================
Found a 5 line (37 tokens) duplication in the following files: 
Starting at line 108 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java
Starting at line 34 of /usr/local/git/PipeCoursework/src/pipe/modules/matrices/Matrices.java

    JDialog guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
   
    // 1 Set layout
    Container contentPane=guiDialog.getContentPane();
    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
=====================================================================
Found a 8 line (37 tokens) duplication in the following files: 
Starting at line 332 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java
Starting at line 61 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeArcHandler.java

		int switchCondition;
		if (MacroManager.getEditor() == null)
			switchCondition = QueryManager.getMode();
		else
			switchCondition = MacroManager.getMode();
		switch (switchCondition) {
		case SELECT:
			if (!isDragging) 
=====================================================================
Found a 6 line (37 tokens) duplication in the following files: 
Starting at line 218 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 46 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/DeletePerformanceTreeObjectAction.java

			else if (selected instanceof MacroNode && MacroManager.getEditor() != null) {
				String msg = QueryManager.addColouring("Deletion of the topmost macro node in the tree is not permitted.");
				MacroManager.getEditor().writeToInfoBox(msg);
			}
			else {
				if(!sequentialNodeCase()) {
=====================================================================
Found a 3 line (37 tokens) duplication in the following files: 
Starting at line 101 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 121 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java

			if ((netObj[i] instanceof PerformanceTreeArcPathPoint) && ((PerformanceTreeObject)netObj[i]).isSelectable()) {
				if (selectionRectangle.intersects(netObj[i].getBounds(tempBounds))) {
					((PerformanceTreeArcPathPoint)netObj[i]).select();	
=====================================================================
Found a 6 line (37 tokens) duplication in the following files: 
Starting at line 1044 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java
Starting at line 46 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/DeletePerformanceTreeObjectAction.java

			else if (selected instanceof MacroNode && MacroManager.getEditor() != null) {
				String msg = QueryManager.addColouring("Deletion of the topmost macro node in the tree is not permitted.");
				MacroManager.getEditor().writeToInfoBox(msg);
			}
			else {
				if(!sequentialNodeCase()) {
=====================================================================
Found a 6 line (37 tokens) duplication in the following files: 
Starting at line 243 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 657 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

			myPoint.setControl2(this.getControlPoint(	myPoint.getPoint(),
														myPoint.getControl1(),
														myPoint.getPoint(),
														myPoint.getControl1()));
		}
		else if (target != null && source instanceof Place &&
=====================================================================
Found a 3 line (37 tokens) duplication in the following files: 
Starting at line 86 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPathPoint.java
Starting at line 253 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPathPoint.java

			point.setLocation(x,y);
			setBounds((int)x - SIZE, (int)y - SIZE, 2*SIZE + SIZE_OFFSET, 2*SIZE + SIZE_OFFSET);
		}
=====================================================================
Found a 8 line (37 tokens) duplication in the following files: 
Starting at line 1009 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 1174 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java

		}
		catch (QueryException e)
		{
			String msg = e.getMessage();
			JOptionPane.showMessageDialog(	MacroManager.getEditor().getContentPane(),
											msg,
											"Warning",
											JOptionPane.ERROR_MESSAGE);
=====================================================================
Found a 6 line (37 tokens) duplication in the following files: 
Starting at line 102 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 96 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java

	public void drawResultNode()
	{
		int canvasWidth = this.getWidth();
		int canvasHeight = this.getHeight();
		double xLoc = canvasWidth / 2 - QueryConstants.NODE_WIDTH / 2;
		double yLoc = canvasHeight * 0.05;
=====================================================================
Found a 7 line (37 tokens) duplication in the following files: 
Starting at line 139 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 157 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

			DOMSource source = new DOMSource(ptDOM);
			StreamResult result = new StreamResult(outputObjectArrayList);
			transformer.transform(source, result);
		}
		catch (DOMException e)
		{
			System.out.println("DOMException thrown in saveMacro()" +
=====================================================================
Found a 5 line (37 tokens) duplication in the following files: 
Starting at line 96 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 37 of /usr/local/git/PipeCoursework/src/pipe/modules/stateSpace/StateSpace.java

    JDialog guiDialog = new JDialog(CreateGui.getApp(),MODULE_NAME,true);
    
    // 1 Set layout
    Container contentPane=guiDialog.getContentPane();
    contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
=====================================================================
Found a 10 line (37 tokens) duplication in the following files: 
Starting at line 206 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java
Starting at line 224 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		modString += "}\n";
		modString += "\t}\n\n";
	}
	
	private void initial() {
		modString += "\t\\initial{\n";
		
		modString += "\t\t";
		for(int i=0; i<places.length; i++) {
			modString += places[i].getId()+" = " + places[i].getCurrentMarking()+"; ";
=====================================================================
Found a 20 line (36 tokens) duplication in the following files: 
Starting at line 362 of /usr/local/git/PipeCoursework/src/att/grappa/Graph.java
Starting at line 1332 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 368 of /usr/local/git/PipeCoursework/src/att/grappa/Edge.java

	return(direction != GrappaLine.TAIL_ARROW_EDGE);
    }


    /**
     * Returns the attribute conversion type for the supplied attribute name.
     * After edge specific attribute name/type mappings are checked, mappings
     * at the element level are checked.
     *
     * @param attrname the attribute name
     * @return the currently associated attribute type
     */
    public static int attributeType(String attrname) {
	int convtype = -1;
	int hashCode;

	if(attrname != null) {
	    hashCode = attrname.hashCode();

	    if(hashCode == POS_HASH && attrname.equals(POS_ATTR)) {
=====================================================================
Found a 4 line (36 tokens) duplication in the following files: 
Starting at line 460 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 516 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

		    } else if(text.startsWith("Preview")) {
		        if(subg.currentSelection == null) return;
			if(subg.currentSelection instanceof Element) {
			    GrappaSupport.setHighlight((Element)(subg.currentSelection), DELETION_MASK, HIGHLIGHT_ON); 
=====================================================================
Found a 9 line (36 tokens) duplication in the following files: 
Starting at line 295 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 349 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 407 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

	    case OVAL_SHAPE:
		if(
		   (Distortion == null || distortion == 0)
		   &&
		   (Skew == null || skew == 0)
		   &&
		   (Orientation == null || orientation == 0)
		   ) {
		    shapeType = OVAL_SHAPE;
=====================================================================
Found a 6 line (36 tokens) duplication in the following files: 
Starting at line 492 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 739 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

			grappaNexus.fill(g2d);
			if (grappaNexus.color != null)
			    g2d.setPaint(grappaNexus.color);
			else
			    g2d.setPaint(grappaNexus.style.line_color);
		    } else {
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 540 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java
Starting at line 548 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java

		    if(rects[i] != rectsMin.x || !(rects[i+1] == rectsMin.y && rects[i+3] == rectsMax.y)) {
			path.moveTo(rects[i],rects[i+3]);
=====================================================================
Found a 18 line (36 tokens) duplication in the following files: 
Starting at line 309 of /usr/local/git/PipeCoursework/src/att/grappa/Node.java
Starting at line 362 of /usr/local/git/PipeCoursework/src/att/grappa/Graph.java

	return oldValue.getValue();
    }

    /**
     * Returns the attribute conversion type for the supplied attribute name.
     * Only graph global specific attribute name/type mappings are checked.
     *
     * @param attrname the attribute name
     * @return the currently associated attribute type
     */
    public static int attributeType(String attrname) {
	int convtype = -1;
	int hashCode;

	if(attrname != null) {
	    hashCode = attrname.hashCode();

	    if(hashCode == GRAPPA_BACKGROUND_COLOR_HASH && attrname.equals(GRAPPA_BACKGROUND_COLOR_ATTR)) {
=====================================================================
Found a 4 line (36 tokens) duplication in the following files: 
Starting at line 734 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 580 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

		    sgbox.add(new java.awt.geom.Rectangle2D.Double(sgbox.getCenterX()-(minSize.getWidth()/2.0),sgbox.getCenterY()-(minSize.getHeight()/2.0),minSize.getWidth(),minSize.getHeight()));
		}
	    }
	    GrappaBox minBox = (GrappaBox)element.getAttributeValue(MINBOX_ATTR);
=====================================================================
Found a 4 line (36 tokens) duplication in the following files: 
Starting at line 2879 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 2909 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static boolean isOdd(float x){
            double y=Math.floor(x);
            if(((double)x - y)!= 0.0D)throw new IllegalArgumentException("the argument is not an integer");
            boolean test=true;
=====================================================================
Found a 5 line (36 tokens) duplication in the following files: 
Starting at line 439 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1072 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] floatTOdouble(float[] aa){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = (double)aa[i];
=====================================================================
Found a 9 line (36 tokens) duplication in the following files: 
Starting at line 392 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 402 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            long[] bb = new long[n];
            for(int i=0; i<n; i++){
               bb[i] = Math.abs(aa[i]);
            }
            return bb;
        }

        // return absolute values of an array of int
        public static int[] arrayAbs(int[] aa){
=====================================================================
Found a 5 line (36 tokens) duplication in the following files: 
Starting at line 380 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 420 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] arrayMultByConstant(double[] aa, double constant){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
               bb[i] = aa[i]*constant;
=====================================================================
Found a 4 line (36 tokens) duplication in the following files: 
Starting at line 123 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/AnnotationNote.java
Starting at line 403 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/AnnotationNote.java

		super.paintComponent(g);
		final Graphics2D g2 = (Graphics2D) g;
		g2.setStroke(new BasicStroke(1.0f));
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 758 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1257 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

			positionXInput = Double.valueOf(positionXTempStorage).doubleValue() *
								(false ? this.DISPLAY_SCALE_FACTORX : 1) +
								(false ? this.DISPLAY_SHIFT_FACTORX : 1);
		}
		if (positionYTempStorage.length() > 0)
		{
			positionYInput = Double.valueOf(positionYTempStorage).doubleValue() *
=====================================================================
Found a 5 line (36 tokens) duplication in the following files: 
Starting at line 1195 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1544 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		for (int i = 0; i < m; i++)
		{
			for (int j = 0; j < n; j++)
			{
				if (this.get(i, j) < 0)
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 967 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1000 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		final PNMatrix X = new PNMatrix(r.length, c.length);
		final int[][] B = X.getArray();
		try
		{
			for (int i = 0; i < r.length; i++)
			{
				for (int j = 0; j < c.length; j++)
=====================================================================
Found a 9 line (36 tokens) duplication in the following files: 
Starting at line 459 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 421 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java

		if (this.selected && !PetriNetObject.ignoreSelection)
		{
			g2.setPaint(Constants.SELECTION_LINE_COLOUR);
		}
		else
		{
			g2.setPaint(Constants.ELEMENT_LINE_COLOUR);
		}
		g2.draw(Place.place);
=====================================================================
Found a 4 line (36 tokens) duplication in the following files: 
Starting at line 47 of /usr/local/git/PipeCoursework/src/pipe/gui/Constants.java
Starting at line 128 of /usr/local/git/PipeCoursework/src/pipe/common/QueryConstants.java

	Color				ELEMENT_LINE_COLOUR					= Color.BLACK;
	Color				ELEMENT_FILL_COLOUR					= Color.WHITE;
	Color				SELECTION_LINE_COLOUR				= new Color(0, 0, 192);
	Color				SELECTION_FILL_COLOUR				= new Color(192, 192, 255);
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 753 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 755 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

		  				+ ") || ( tagged_location!="+getPlaceIndex(arc.getSource().getId())
		  				+ " && " + arc.getSource().getId()+" > "+ (arc.getWeight()-1)
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 633 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 680 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

				  				"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[index]].getId(), i ) 
				  				+ "/(double)" + places[tagInputPlaceIndex[index]].getId() +") * " + rate + "*" + tagged_place + " : ";
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 625 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 672 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

				  			"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[0]].getId(), i ) 
				  			+ "/(double)" + places[tagInputPlaceIndex[0]].getId() +") * " + rate + "*" + tagged_place + " : ";
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 611 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 680 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

				  				"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[index]].getId(), i ) 
				  				+ "/(double)" + places[tagInputPlaceIndex[index]].getId() +") * " + rate + "*" + tagged_place + " : ";
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 603 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 672 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

				  			"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[0]].getId(), i ) 
				  			+ "/(double)" + places[tagInputPlaceIndex[0]].getId() +") * " + rate + "*" + tagged_place + " : ";
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 590 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 592 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

		  				+ ") || ( tagged_location!="+getPlaceIndex(arc.getSource().getId())
		  				+ " && " + arc.getSource().getId()+" > "+ (arc.getWeight()-1)
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 532 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 625 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

				  			"? ( (double)" + rate + " -  ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[0]].getId(), i ) 
				  			+ "/(double)" + places[tagInputPlaceIndex[0]].getId() +") * " + rate + ") : ";
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 470 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 517 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

				  				"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[index]].getId(), i ) 
				  				+ "/(double)" + places[tagInputPlaceIndex[index]].getId() +") * " + rate + "*" + tagged_place + " : ";
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 462 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 509 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

				  			"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[0]].getId(), i ) 
				  			+ "/(double)" + places[tagInputPlaceIndex[0]].getId() +") * " + rate + "*" + tagged_place + " : ";
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 448 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 517 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

				  				"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[index]].getId(), i ) 
				  				+ "/(double)" + places[tagInputPlaceIndex[index]].getId() +") * " + rate + "*" + tagged_place + " : ";
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 440 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 509 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

				  			"? ((double)"+ getArcWeightFromPlace(places[tagInputPlaceIndex[0]].getId(), i ) 
				  			+ "/(double)" + places[tagInputPlaceIndex[0]].getId() +") * " + rate + "*" + tagged_place + " : ";
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 390 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java
Starting at line 401 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java

				textualRep = topNode.printTextualRepresentation();
				if (!textualRep.equals("''''")) {
					resetTextColour();
					String introText = addColouring("Natural language equivalent of the current tree: <br><br>");
					writeToInfoBox(introText + textualRep);
				}
			}
=====================================================================
Found a 8 line (36 tokens) duplication in the following files: 
Starting at line 55 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/QueryTreeNode.java
Starting at line 258 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

	}

	@Override
	public boolean contains(final int x, final int y)
	{

		final int zoomPercentage = this.getZoomController().getPercent();
		final double unZoomedX = (x - PetriNetObject.COMPONENT_DRAW_OFFSET) / (zoomPercentage / 100.0);
=====================================================================
Found a 12 line (36 tokens) duplication in the following files: 
Starting at line 136 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 128 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultBarChartPlotter.java

														try
														{
															ImageIO.write(graphImage, "png", saveFile);
														}
														catch (IOException e)
														{
															EvaluatorGuiLoggingHandler.logger.warning(LoggingHelper.getStackTrace(e));
														}
													}
												};

	public ResultBarChartPlotter(final Dimension prefferedSize) {
=====================================================================
Found a 9 line (36 tokens) duplication in the following files: 
Starting at line 130 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 264 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

				menu.add(popup2);

				menu.setVisible(true);

				menu.show(event.getComponent(), event.getX(), event.getY());
			}
			else
			{
				throw new QueryAnalysisException("Argument Node isn't of type Percentile");
=====================================================================
Found a 9 line (36 tokens) duplication in the following files: 
Starting at line 634 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java
Starting at line 653 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java

			PerformanceTreeArc arc = MacroManager.getView().getArcBeingModified();
			String arcID = arc.getId();

			// update arc's endpoint to being the middle of the top side of the
			// node and
			// update its information about its target node
			arc.setSelectable(true);
			arc = updateArcEndPoint(arc, nodeToLinkUpWith);
			arc.setTarget(nodeToLinkUpWith);
=====================================================================
Found a 8 line (36 tokens) duplication in the following files: 
Starting at line 99 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java
Starting at line 130 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java

		int switchCondition;
		if (MacroManager.getEditor() == null)
			switchCondition = QueryManager.getMode();
		else switchCondition = MacroManager.getMode();
		switch (switchCondition)
		{
			case SELECT :
			{
=====================================================================
Found a 6 line (36 tokens) duplication in the following files: 
Starting at line 244 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 188 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

	public void deleteSelection()
	{
		Component netObj[] = edit_window.getComponents();
		for (int i=0; i<netObj.length; i++)
		{
			if ((netObj[i] instanceof PetriNetObject)
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 108 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 248 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java

			if ((netObj[i] instanceof PerformanceTreeArc) && ((PerformanceTreeObject)netObj[i]).isSelectable()) {
				PerformanceTreeArc thisArc = (PerformanceTreeArc)netObj[i];
=====================================================================
Found a 4 line (36 tokens) duplication in the following files: 
Starting at line 509 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 573 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

		final Iterator arcIterator = this.arcAngleList.iterator();
		while (arcIterator.hasNext())
		{
			if (((ArcAngleCompare) arcIterator.next()).arc == a)
=====================================================================
Found a 4 line (36 tokens) duplication in the following files: 
Starting at line 620 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 322 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java

					int[] selectedIndices = macroList.getSelectedIndices();
					if (selectedIndices.length > 0) {			
						if (selectedIndices.length > 1) {
							JOptionPane.showMessageDialog(QueryManager.getEditor().getContentPane(),
=====================================================================
Found a 6 line (36 tokens) duplication in the following files: 
Starting at line 162 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 178 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

								macroFile.getCanonicalPath() + "\" xslt=\"" + xsltSource.getSystemId() +
								"\" transformer=\"" + transformer.getURIResolver() + "\"");
		}
		catch (TransformerException e)
		{
			System.out.println("TransformerException thrown in saveMacro()" +
=====================================================================
Found a 6 line (36 tokens) duplication in the following files: 
Starting at line 147 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 165 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

								macroFile.getCanonicalPath() + "\" xslt=\"" + xsltSource.getSystemId() +
								"\" transformer=\"" + transformer.getURIResolver() + "\"");
		}
		catch (ParserConfigurationException e)
		{
			System.out.println("ParserConfigurationException thrown in saveMacro()" +
=====================================================================
Found a 5 line (36 tokens) duplication in the following files: 
Starting at line 40 of /usr/local/git/PipeCoursework/src/pipe/modules/stateSpace/StateSpace.java
Starting at line 72 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/RTA.java

		Container contentPane=guiDialog.getContentPane();
		contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.PAGE_AXIS));
		
		// 2 Add file browser
		contentPane.add(sourceFilePanel=new PetriNetChooserPanel("Source net",pnmlData));
=====================================================================
Found a 12 line (36 tokens) duplication in the following files: 
Starting at line 77 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/Analyse.java
Starting at line 87 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Analyse.java

			  serverSock.send(clearCache);
			  
			  //System.out.println("We will be telling the server that clearCache = " + clearCache);
			  
			  updateUI("Server Scheduling Process");
			  StatusListener serverListener = new StatusListener(serverSock, progressPane, status);
			  status = serverListener.listen();
			  
			
			  
			  updateUI("Receiving Results");
			  ResultsReceiver resultsReceiver = new ResultsReceiver(serverSock, resultsPanel, status);
=====================================================================
Found a 6 line (36 tokens) duplication in the following files: 
Starting at line 25 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/StatusListener.java
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/StatusListener.java

		status = this.server.receiveStatus();

		// Continue reading status until the socket returns null, or we have
		// completed analysis (finished or failed)
		while (!(status == null) && !(status.equals("Finished") || status.equals("Failed")))
		{
=====================================================================
Found a 8 line (36 tokens) duplication in the following files: 
Starting at line 82 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/Analyse.java
Starting at line 77 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/Analyse.java

			  serverSock.send(performanceMeasure);
			    
			  updateUI("Server Scheduling Process");
			  StatusListener serverListener = new StatusListener(serverSock, progressPane, status);
			  status = serverListener.listen();
			  
			  updateUI("Receiving Results");
			  ResultsReceiver resultsReceiver = new ResultsReceiver(serverSock, resultsPane, status);
=====================================================================
Found a 6 line (36 tokens) duplication in the following files: 
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StatusListener.java
Starting at line 25 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/StatusListener.java

		status = this.server.receiveStatus();

		// Continue reading status until the socket returns null, or we have
		// completed analysis (finished or failed)
		while (!(status == null) && !(status.equals("Finished") || status.equals("Failed")))
		{
=====================================================================
Found a 6 line (36 tokens) duplication in the following files: 
Starting at line 18 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/RangeSubtree.java
Starting at line 13 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/OperationSubtree.java

	public OperationSubtree(final SimpleNode thisNode,
							final StatusIndicatorUpdater updater,
							final ParentSubtree parent,
							final ResultSubtree root,
							final String roleForParent) throws QueryServerException {
		super(thisNode, updater, parent, root, roleForParent);
=====================================================================
Found a 5 line (36 tokens) duplication in the following files: 
Starting at line 188 of /usr/local/git/PipeCoursework/src/pipe/server/serverCommon/ServerAction.java
Starting at line 233 of /usr/local/git/PipeCoursework/src/pipe/server/serverCommon/ServerAction.java

					this.writeToLog("Performing passage time analysis");
					this.writeToLog("Recieving Data");
					this.places = (SimplePlaces) this.in.readObject();
					this.transitions = (SimpleTransitions) this.in.readObject();
					final ArrayList<StateGroup> sourceStateGrps = (ArrayList<StateGroup>) this.in.readObject();
=====================================================================
Found a 7 line (35 tokens) duplication in the following files: 
Starting at line 444 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 677 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java

		copy_value = Attribute.specialHandler.copyValue(type, name, value, attrtype);
	    } else {
		throw new RuntimeException(Element.typeString(type,true) + " attribute (" + name + ") needs a special handler");
	    }
	}

	if(copy_value == null && value != null) {
=====================================================================
Found a 7 line (35 tokens) duplication in the following files: 
Starting at line 1105 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 801 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	Subgraph prnt = getSubgraph();
	while(prnt != null) {
	    if(prnt.grappaNexus != null) {
		prnt.grappaNexus.bbox = null;
	    }
	    prnt = prnt.getSubgraph();
	}
=====================================================================
Found a 3 line (35 tokens) duplication in the following files: 
Starting at line 318 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 386 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

					  pos.y + (double)(i * PERIPHERY_GAP),
					  width - (double)(2 * i * PERIPHERY_GAP),
					  height - (double)(2 * i * PERIPHERY_GAP),
=====================================================================
Found a 2 line (35 tokens) duplication in the following files: 
Starting at line 567 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java
Starting at line 576 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java

    public String toString() {
	return(generateStyleString(line_color,line_style,line_width,cap,join,miter_limit,dash,dash_phase,rounded,diagonals,filled,invis,fixed_size,font_style,true,elementType));
=====================================================================
Found a 5 line (35 tokens) duplication in the following files: 
Starting at line 1349 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1358 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          case 15: // optStmtList ::= stmtList 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(12/*optStmtList*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
=====================================================================
Found a 5 line (35 tokens) duplication in the following files: 
Starting at line 1037 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1046 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          case 41: // optAttr ::= attrList 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(20/*optAttr*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
=====================================================================
Found a 5 line (35 tokens) duplication in the following files: 
Starting at line 849 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 858 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          case 58: // optSemi ::= SEMI 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(16/*optSemi*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
=====================================================================
Found a 5 line (35 tokens) duplication in the following files: 
Starting at line 822 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 831 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          case 61: // optSeparator ::= COMMA 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(17/*optSeparator*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
=====================================================================
Found a 4 line (35 tokens) duplication in the following files: 
Starting at line 1393 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1181 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	if((attr = getLocalAttribute(TAG_ATTR)) == null) return false;
	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return false;
	return(tags.containsKey(tag));
=====================================================================
Found a 18 line (35 tokens) duplication in the following files: 
Starting at line 906 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 310 of /usr/local/git/PipeCoursework/src/att/grappa/Node.java

    }

    /**
     * Returns the attribute conversion type for the supplied attribute name.
     * After node specific attribute name/type mappings are checked, mappings
     * at the element level are checked.
     *
     * @param attrname the attribute name
     * @return the currently associated attribute type
     */
    public static int attributeType(String attrname) {
	int convtype = -1;
	int hashCode;

	if(attrname != null) {
	    hashCode = attrname.hashCode();

	    if(hashCode == DISTORTION_HASH && attrname.equals(DISTORTION_ATTR)) {
=====================================================================
Found a 4 line (35 tokens) duplication in the following files: 
Starting at line 750 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 588 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

		    sgbox.add(new java.awt.geom.Rectangle2D.Double(minBox.x,minBox.y,minBox.width,minBox.height));
		}
	    }
	    if(sgbox == null) {
=====================================================================
Found a 7 line (35 tokens) duplication in the following files: 
Starting at line 984 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1120 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                        c.imag=(this.imag-this.real*ratio)/denom;
                    }
                    else
                    {
                        ratio=b.real/b.imag;
                        denom=b.real*ratio+b.imag;
                        c.real=(this.real*ratio+this.imag)/denom;
=====================================================================
Found a 7 line (35 tokens) duplication in the following files: 
Starting at line 931 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 949 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                    if((this.isInfinite() && a!=0.0D) || (Fmath.isInfinity(a) && !this.isZero())){
                        this.real = Double.POSITIVE_INFINITY;
                        this.imag = Double.POSITIVE_INFINITY;
                        test = false;
                    }
                }
                if(test){
=====================================================================
Found a 7 line (35 tokens) duplication in the following files: 
Starting at line 895 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 915 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                    if(Fmath.isInfinity(a) && !this.isZero()){
                        b.reset(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
                        return b;
                    }
                }

                b.real=this.real*a;
=====================================================================
Found a 6 line (35 tokens) duplication in the following files: 
Starting at line 830 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 849 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                    if(Fmath.isInfinity(b) && !a.isZero()){
                        c.reset(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
                        return c;
                    }
                }
                c.real=a.real*b;
=====================================================================
Found a 3 line (35 tokens) duplication in the following files: 
Starting at line 487 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 499 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                Complex[][] c =new Complex[n][m];
                for(int i=0; i<n; i++){
                        for(int j=0; j<m; j++){
=====================================================================
Found a 7 line (35 tokens) duplication in the following files: 
Starting at line 1384 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1537 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                dd[i]=bb[i];
            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(cc[i]<cc[index]){
=====================================================================
Found a 4 line (35 tokens) duplication in the following files: 
Starting at line 390 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 467 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static float[] invertElements(float[] aa){
            int n = aa.length;
            float[] bb = new float[n];
            for(int i=0; i<n; i++)bb[i] = 1.0F/aa[i];
=====================================================================
Found a 4 line (35 tokens) duplication in the following files: 
Starting at line 380 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 459 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] invertElements(double[] aa){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++)bb[i] = 1.0D/aa[i];
=====================================================================
Found a 9 line (35 tokens) duplication in the following files: 
Starting at line 342 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 352 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 362 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 372 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            char[] bb = new char[n];
            for(int i=0; i<n; i++){
               bb[i] = aa[n-1-i];
            }
            return bb;
        }

        // return absolute values of an array of doubles
        public static double[] arrayAbs(double[] aa){
=====================================================================
Found a 4 line (35 tokens) duplication in the following files: 
Starting at line 340 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 467 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static float[] invertElements(float[] aa){
            int n = aa.length;
            float[] bb = new float[n];
            for(int i=0; i<n; i++)bb[i] = 1.0F/aa[i];
=====================================================================
Found a 9 line (35 tokens) duplication in the following files: 
Starting at line 332 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 342 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            float[] bb = new float[n];
            for(int i=0; i<n; i++){
               bb[i] = aa[n-1-i];
            }
            return bb;
        }

        // Reverse the order of the elements of a 1D array of ints, aa
        public static int[] reverseArray(int[] aa){
=====================================================================
Found a 4 line (35 tokens) duplication in the following files: 
Starting at line 330 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 459 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] invertElements(double[] aa){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++)bb[i] = 1.0D/aa[i];
=====================================================================
Found a 3 line (35 tokens) duplication in the following files: 
Starting at line 176 of /usr/local/git/PipeCoursework/src/jama/CholeskyDecomposition.java
Starting at line 191 of /usr/local/git/PipeCoursework/src/jama/CholeskyDecomposition.java

         for (int i = 0; i < k; i++) {
            for (int j = 0; j < nx; j++) {
               X[i][j] -= X[k][j]*L[k][i];
=====================================================================
Found a 5 line (35 tokens) duplication in the following files: 
Starting at line 315 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 361 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      Matrix X = new Matrix(r.length,j1-j0+1);
      double[][] B = X.getArray();
      try {
         for (int i = 0; i < r.length; i++) {
            for (int j = j0; j <= j1; j++) {
=====================================================================
Found a 3 line (35 tokens) duplication in the following files: 
Starting at line 171 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 189 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      Matrix X = new Matrix(m,n);
      double[][] C = X.getArray();
      for (int i = 0; i < m; i++) {
=====================================================================
Found a 3 line (35 tokens) duplication in the following files: 
Starting at line 99 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 732 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            A[i][j] = s*A[i][j];
=====================================================================
Found a 4 line (35 tokens) duplication in the following files: 
Starting at line 130 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 217 of /usr/local/git/PipeCoursework/src/jama/LUDecomposition.java

      double[][] U = X.getArray();
      for (int i = 0; i < n; i++) {
         for (int j = 0; j < n; j++) {
            if (i <= j) {
=====================================================================
Found a 4 line (35 tokens) duplication in the following files: 
Starting at line 111 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 196 of /usr/local/git/PipeCoursework/src/jama/LUDecomposition.java

      double[][] L = X.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            if (i > j) {
=====================================================================
Found a 7 line (35 tokens) duplication in the following files: 
Starting at line 550 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 478 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

	act = get_action(((Symbol)stack.peek()).parse_state, cur_token.sym);

	/* decode the action -- > 0 encodes shift */
	if (act > 0)
	  {
	    /* shift to the encoded state by pushing it on the stack */
	    cur_token.parse_state = act-1;
=====================================================================
Found a 2 line (35 tokens) duplication in the following files: 
Starting at line 94 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPathPoint.java
Starting at line 98 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPathPoint.java

		{
			angle = Math.atan((this.point.x - p2.point.x) / (p2.point.y - this.point.y)) + Math.PI;
=====================================================================
Found a 4 line (35 tokens) duplication in the following files: 
Starting at line 1688 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 414 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

   public void setMatrix (int[] r, int[] c, Matrix X) {
      try {
         for (int i = 0; i < r.length; i++) {
            for (int j = 0; j < c.length; j++) {
=====================================================================
Found a 4 line (35 tokens) duplication in the following files: 
Starting at line 535 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java
Starting at line 548 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java

			arc.setTargetLocation(this.positionX + this.getDiameter() * 0.5, this.positionY +
																				this.getDiameter() * 0.5);

			final double angle = arc.getArcPath().getEndAngle();
=====================================================================
Found a 12 line (35 tokens) duplication in the following files: 
Starting at line 419 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java
Starting at line 577 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

						PetriNetObject.COMPONENT_DRAW_OFFSET - this.myPath.getBounds().getY());

		if (this.selected && !PetriNetObject.ignoreSelection)
		{
			g2.setPaint(Constants.SELECTION_LINE_COLOUR);
		}
		else
		{
			g2.setPaint(Constants.ELEMENT_LINE_COLOUR);
		}

		g2.fill(this.arrow);
=====================================================================
Found a 8 line (35 tokens) duplication in the following files: 
Starting at line 726 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 521 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

		}
		else{
			// This must be a new arc
			current = new ArcListElement(sprime.getIDNum(), r, (Integer)transitions.pop());
			arclist.add(current);
			return 1;
		}
	}
=====================================================================
Found a 2 line (35 tokens) duplication in the following files: 
Starting at line 251 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java
Starting at line 272 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

			if (createArc != null) {
				createArc.setEndPoint(Grid.getModifiedX(e.getX()), Grid.getModifiedY(e.getY()), shiftDown);
=====================================================================
Found a 6 line (35 tokens) duplication in the following files: 
Starting at line 231 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java
Starting at line 237 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

					pnObject = new Transition(Grid.getModifiedX(start.x),Grid.getModifiedY(start.y));
					CreateGui.getModel().addPetriNetObject(pnObject);
					addNewPetriNetObject(pnObject);
					break;

				case TIMEDTRANS:
=====================================================================
Found a 3 line (35 tokens) duplication in the following files: 
Starting at line 101 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java
Starting at line 106 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java
Starting at line 111 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

			if ((netObj[i] instanceof AnnotationNote) && ((PetriNetObject)netObj[i]).isSelectable())
				if (selectionRectangle.intersects(netObj[i].getBounds(tempBounds)))
				((AnnotationNote)netObj[i]).select();
=====================================================================
Found a 6 line (35 tokens) duplication in the following files: 
Starting at line 794 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 309 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

	}
	
	private String getTransitionConditions(int transitionNum) {
		String condition = new String();
	  	Iterator arcsTo = transitions[transitionNum]. getConnectToIterator();
	  	if (arcsTo.hasNext())
=====================================================================
Found a 4 line (35 tokens) duplication in the following files: 
Starting at line 505 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 553 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

						while(arcToTransitions.hasNext()) 
					  	{
					  		final Arc arc = ((Arc)arcToTransitions.next());
					  		String currentId = arc.getSource().getId();
=====================================================================
Found a 6 line (35 tokens) duplication in the following files: 
Starting at line 631 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 309 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

	}
	
	private String getTransitionConditions(int transitionNum) {
		String condition = new String();
	  	Iterator arcsTo = transitions[transitionNum]. getConnectToIterator();
	  	if (arcsTo.hasNext())
=====================================================================
Found a 4 line (35 tokens) duplication in the following files: 
Starting at line 342 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 390 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

						while(arcToTransitions.hasNext()) 
					  	{
					  		final Arc arc = ((Arc)arcToTransitions.next());
					  		String currentId = arc.getSource().getId();
=====================================================================
Found a 8 line (35 tokens) duplication in the following files: 
Starting at line 130 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java
Starting at line 332 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java

		int switchCondition;
		if (MacroManager.getEditor() == null)
			switchCondition = QueryManager.getMode();
		else switchCondition = MacroManager.getMode();

		switch (switchCondition)
		{
			case SELECT :
=====================================================================
Found a 6 line (35 tokens) duplication in the following files: 
Starting at line 200 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 73 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlace.java

	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		
		Graphics2D g2 = (Graphics2D)g;	
		AffineTransform saveXform = g2.getTransform();
		AffineTransform scaledXform = getZoomController().getTransform();
=====================================================================
Found a 6 line (35 tokens) duplication in the following files: 
Starting at line 268 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 426 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

		addMenuItem(analysisMenu, ((Action) this.actions.get("Evaluate Query")));

		// Help
		JMenu helpMenu = new JMenu("Help");
		helpMenu.setMnemonic('H');
		addMenuItem(helpMenu, ((Action) this.actions.get("Help")));
=====================================================================
Found a 4 line (35 tokens) duplication in the following files: 
Starting at line 273 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 306 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

	public void validate() {
		Component[] children = getComponents();
		for (int i = 0; i < children.length; i++)
			if (children[i] instanceof Arc){
=====================================================================
Found a 5 line (35 tokens) duplication in the following files: 
Starting at line 140 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 187 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java

				if (this.requiredChildNodes.containsKey(role))
				{
					// role is supported
					ArrayList allowedNodeReturnTypes = (ArrayList) this.requiredChildNodes.get(role);
					if (allowedNodeReturnTypes.contains(possibleChildReturnType))
=====================================================================
Found a 7 line (35 tokens) duplication in the following files: 
Starting at line 61 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlace.java
Starting at line 200 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java

	public void paintComponent(final Graphics g)
	{
		super.paintComponent(g);

		Graphics2D g2 = (Graphics2D) g;
		AffineTransform saveXform = g2.getTransform();
		AffineTransform scaledXform = getZoomController().getTransform();
=====================================================================
Found a 7 line (35 tokens) duplication in the following files: 
Starting at line 441 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 520 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java

						!QueryManager	.getData()
										.stateLabelExistsAlready(StateLabelManager.stateLabelTextField.getText()))
					{
						// we're trying to rename the state label to something
						// that doesn't exist yet
						String newStateLabelName = StateLabelManager.stateLabelTextField.getText();
						QueryManager.getData().renameStateLabel(StateLabelManager.currentStateLabel,
=====================================================================
Found a 5 line (35 tokens) duplication in the following files: 
Starting at line 722 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 884 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java

		ArrayList<String> labelAssignmentsToModify = new ArrayList<String>();
		Iterator<String> i = this.stateLabels.keySet().iterator();
		while (i.hasNext())
		{
			String label = i.next();
=====================================================================
Found a 9 line (35 tokens) duplication in the following files: 
Starting at line 459 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 514 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

					updateMacroNode(source);
				}

				// remove incomingArc from arc's target, if any
				if (arcToDelete.getTarget() != null)
				{
					PerformanceTreeNode arcTarget = arcToDelete.getTarget();
					arcTarget.removeArcCompareObject(arcToDelete);
					arcTarget.setIncomingArcID(null);
=====================================================================
Found a 17 line (35 tokens) duplication in the following files: 
Starting at line 112 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/SteadyState.java
Starting at line 75 of /usr/local/git/PipeCoursework/src/pipe/modules/invariantAnalysis/InvariantAnalysis.java

    contentPane.add(new ButtonBar("Analyse",analyseButtonClick));

    // 5 Make window fit contents' preferred size
    guiDialog.pack();
    
    // 6 Move window to the middle of the screen
    guiDialog.setLocationRelativeTo(null);
    
    guiDialog.setVisible(true);

  }
  
  /**
   * Classify button click handler
   */
  ActionListener analyseButtonClick=new ActionListener() {
    public void actionPerformed(ActionEvent arg0) {
=====================================================================
Found a 11 line (35 tokens) duplication in the following files: 
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/Analyse.java
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Analyse.java

public class Analyse implements Runnable
{
	private String serverAddr = "";
	private int serverPort = 0;
	private ArrayList sourceStateGroups, destStateGroups;
	private AnalysisSettings analysisSetting;
	
	private DataLayer pnmlData;
	JTabbedPane tabbedPane;
	private ProgressBarHTMLPane progressPane;
	private JPanel resultsPanel;
=====================================================================
Found a 7 line (35 tokens) duplication in the following files: 
Starting at line 66 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlace.java
Starting at line 200 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java

	public void paintComponent(final Graphics g)
	{
		super.paintComponent(g);

		Graphics2D g2 = (Graphics2D) g;
		AffineTransform saveXform = g2.getTransform();
		AffineTransform scaledXform = getZoomController().getTransform();
=====================================================================
Found a 16 line (35 tokens) duplication in the following files: 
Starting at line 117 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 107 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/SteadyState.java

    setupPanel.add(new ButtonBar("Analyse",analyseButtonClick));
    
    
    // 7 Add setup panel to tabbed pane, add tabbed pane to guiDialog
    tabbedPane.addTab("Setup", setupPanel);    
    contentPane.add(tabbedPane);
    
    
    // 8 Make window fit contents' preferred size, centre on screen, display
    guiDialog.pack();
    guiDialog.setLocationRelativeTo(null);    
    guiDialog.setVisible(true);

  }

  ActionListener analyseButtonClick = new ActionListener()
=====================================================================
Found a 9 line (35 tokens) duplication in the following files: 
Starting at line 47 of /usr/local/git/PipeCoursework/test/pipe/gui/FunctionalScriptsTest.java
Starting at line 45 of /usr/local/git/PipeCoursework/test/pipe/common/dataLayer/GuiViewTest.java

		CreateGui.getApp().dispose();
		int lastIndex = CreateGui.getFreeSpace();
		while(lastIndex >= 0){
			CreateGui.removeTab(0); //deletes static ref to net objects
			lastIndex--;			//kept by CreateGui
		}
	}

	public void testOperationOfClickAndDragSelection() throws Exception {
=====================================================================
Found a 4 line (34 tokens) duplication in the following files: 
Starting at line 460 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 471 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

		    } else if(text.startsWith("Clear")) {
		        if(subg.currentSelection == null) return;
			if(subg.currentSelection instanceof Element) {
			    GrappaSupport.setHighlight((Element)(subg.currentSelection), 0, HIGHLIGHT_OFF); 
=====================================================================
Found a 9 line (34 tokens) duplication in the following files: 
Starting at line 186 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java
Starting at line 225 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

	    buf.append(gpts[pe--].y);
	}
	while(ps <= pe) {
	    if(spacer) {
		buf.append(" ");
	    } else {
		spacer = true;
	    }
	    buf.append(gpts[ps].x);
=====================================================================
Found a 4 line (34 tokens) duplication in the following files: 
Starting at line 1367 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1228 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	if((attr = getLocalAttribute(TAG_ATTR)) == null) return false;
	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return false;
	return true;
=====================================================================
Found a 7 line (34 tokens) duplication in the following files: 
Starting at line 609 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 627 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static Complex[][][] copy(Complex[][][] a){
            if(a==null){
                return null;
            }
            else{
                int n = a.length;
                int m = a[0].length;
=====================================================================
Found a 14 line (34 tokens) duplication in the following files: 
Starting at line 147 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 184 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                        }
                        catch(java.io.IOException e){
                                done = true;
                        }
                }
                return Complex.parseComplex(cstring);
        }

        // Read a complex number from the keyboard console after a prompt message (with Complex default option)
        // in a String format compatible with Complex.parse,
        // e.g 2+j3, 2 + j3, 2+i3, 2 + i3
        // prompt = Prompt message to vdu
        // dflt = default value
        public static final synchronized Complex readComplex(String prompt, Complex dflt)
=====================================================================
Found a 9 line (34 tokens) duplication in the following files: 
Starting at line 700 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 943 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                if((array[ii] - value )>=0){
                    diff0 = value - array[ii];
                    nearest = ii;
                    test = false;
                }
                else{
                    ii++;
                    if(ii>array.length-1){
                        nearest = maxI;
=====================================================================
Found a 3 line (34 tokens) duplication in the following files: 
Starting at line 364 of /usr/local/git/PipeCoursework/src/jama/EigenvalueDecomposition.java
Starting at line 877 of /usr/local/git/PipeCoursework/src/jama/EigenvalueDecomposition.java

         for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
               V[i][j] = A[i][j];
=====================================================================
Found a 3 line (34 tokens) duplication in the following files: 
Starting at line 574 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 732 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            A[i][j] = s*A[i][j];
=====================================================================
Found a 13 line (34 tokens) duplication in the following files: 
Starting at line 489 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 513 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

         for (int j = 0; j < n; j++) {
            s += Math.abs(A[i][j]);
         }
         f = Math.max(f,s);
      }
      return f;
   }

   /** Frobenius norm
   @return    sqrt of sum of squares of all elements.
   */

   public double normF () {
=====================================================================
Found a 3 line (34 tokens) duplication in the following files: 
Starting at line 220 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 542 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            C[i][j] = -A[i][j];
=====================================================================
Found a 11 line (34 tokens) duplication in the following files: 
Starting at line 178 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 192 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

         for (int j = 0; j < n; j++) {
            C[i][j] = A[i][j];
         }
      }
      return X;
   }

   /** Clone the Matrix object.
   */

   public Object clone () {
=====================================================================
Found a 3 line (34 tokens) duplication in the following files: 
Starting at line 99 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 574 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            A[i][j] = A[i][j] + B.A[i][j];
=====================================================================
Found a 3 line (34 tokens) duplication in the following files: 
Starting at line 341 of /usr/local/git/PipeCoursework/src/jama/SingularValueDecomposition.java
Starting at line 407 of /usr/local/git/PipeCoursework/src/jama/SingularValueDecomposition.java

                  if (wantu && (j < m-1)) {
                     for (int i = 0; i < m; i++) {
                        t = cs*U[i][j] + sn*U[i][j+1];
=====================================================================
Found a 16 line (34 tokens) duplication in the following files: 
Starting at line 509 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 695 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java

  public Symbol debug_parse()
    throws java.lang.Exception
    {
      /* the current action code */
      int act;

      /* the Symbol/stack element returned by a reduce */
      Symbol lhs_sym = null;

      /* information about production being reduced with */
      short handle_size, lhs_sym_num;

      /* set up direct reference to tables to drive the parser */
      production_tab = production_table();
      action_tab     = action_table();
      reduce_tab     = reduce_table();
=====================================================================
Found a 5 line (34 tokens) duplication in the following files: 
Starting at line 1131 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1305 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		final int[][] C = new int[this.m][this.n]; // = X.getArray();
		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
=====================================================================
Found a 7 line (34 tokens) duplication in the following files: 
Starting at line 896 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 931 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		final PNMatrix X = new PNMatrix(i1 - i0 + 1, c.length);
		final int[][] B = X.getArray();
		try
		{
			for (int i = i0; i <= i1; i++)
			{
				for (int j = 0; j < c.length; j++)
=====================================================================
Found a 5 line (34 tokens) duplication in the following files: 
Starting at line 837 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 867 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		final int[] vals = new int[this.m * this.n];
		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
=====================================================================
Found a 11 line (34 tokens) duplication in the following files: 
Starting at line 61 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 192 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

         for (int j = 0; j < n; j++) {
            C[i][j] = A[i][j];
         }
      }
      return X;
   }

   /** Clone the Matrix object.
   */

   public Object clone () {
=====================================================================
Found a 10 line (34 tokens) duplication in the following files: 
Starting at line 459 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 579 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

		if (this.selected && !PetriNetObject.ignoreSelection)
		{
			g2.setPaint(Constants.SELECTION_LINE_COLOUR);
		}
		else
		{
			g2.setPaint(Constants.ELEMENT_LINE_COLOUR);
		}

		g2.fill(this.arrow);
=====================================================================
Found a 9 line (34 tokens) duplication in the following files: 
Starting at line 22 of /usr/local/git/PipeCoursework/src/pipe/gui/TransitionHandler.java
Starting at line 19 of /usr/local/git/PipeCoursework/src/pipe/gui/PlaceHandler.java

  public PlaceHandler(Container contentpane, Place obj) {
    super(contentpane, obj);
  }

  /** Creates the popup menu that the user will see when they right click on a component */
  public JPopupMenu getPopup(MouseEvent e) {
  	JPopupMenu popup = super.getPopup(e);

    JMenuItem menuItem = new JMenuItem(new EditTokenAction(contentPane,(Place)myObject));
=====================================================================
Found a 11 line (34 tokens) duplication in the following files: 
Starting at line 54 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 70 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

	public String getName() {
		return MODULE_NAME;
	}

	/* (non-Javadoc)
	 * @see pipe.modules.Module#run(pipe.dataLayer.DataLayer)
	 */
	public void run(DataLayer _pnmldata) {
		pnmldata = _pnmldata;
		places = pnmldata.getPlaces();
		transitions = pnmldata.getTransitions();
=====================================================================
Found a 14 line (34 tokens) duplication in the following files: 
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/modules/iai/SimulationPlaceWatcher.java
Starting at line 26 of /usr/local/git/PipeCoursework/src/pipe/modules/iai/SimulationFiringCounter.java
Starting at line 24 of /usr/local/git/PipeCoursework/src/pipe/modules/iai/SimulationClockWatcher.java

	public SimulationClockWatcher() 
	{
		// nothing here.
	} // end of constructor for this class

	public void run( DataLayer pnmlData )
	{
		CreateGui.getApp().getStatusBar().changeText( 
		"ERROR: This simulation module is not implemented yet." );
	}

	public String getName()
	{
		return "Clock Watcher Simulation (Not ready)";
=====================================================================
Found a 8 line (34 tokens) duplication in the following files: 
Starting at line 490 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java
Starting at line 430 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

		JPanel timeMethodPanel = new JPanel(new GridLayout(2,2));
		
		
		
		// Create time / method panel
		timeMethodPanel.add(new JLabel("Time Step:") );		
		timeStep = new JSpinner(new SpinnerNumberModel(0.10, 0.0, 100, 0.1) );		
		timeMethodPanel.add(timeStep);				
=====================================================================
Found a 11 line (34 tokens) duplication in the following files: 
Starting at line 184 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java
Starting at line 168 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

	    	AnalysisSettings analysisSetting = getTimeSettings();

	    	
    		// Create Progress Tab and set it as selected	
	    	if (progressPane == null)
	    	{
	    		progressPane = new ProgressBarHTMLPane("Analysis Progress");
	    		tabbedPane.addTab("Progress", progressPane);
	    	}
	    	
	    	if (resultsPanel == null)
=====================================================================
Found a 15 line (34 tokens) duplication in the following files: 
Starting at line 97 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 203 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

			performance();
			
		}
		
		private void model() {
			modString += "\\model{\n";
			stateVector();
			initial();
			transitions();
			
			modString += "}\n\n";		
		}
	  
		private void performance() {
			modString += "\\performance{\n";		
=====================================================================
Found a 4 line (34 tokens) duplication in the following files: 
Starting at line 391 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ProgressView.java
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java

			Rectangle r=components[i].getBounds();
			x=r.x+r.width+100;
			y=r.y+r.height+100;
			if (x>d.width)  d.width =x;
=====================================================================
Found a 28 line (34 tokens) duplication in the following files: 
Starting at line 23 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/QueryTreeNode.java
Starting at line 164 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java

		this.updateBounds();
	}

	/**
	 * Returns the height bounds we want to use when initially creating the
	 * place on the gui
	 * 
	 * @return Height bounds of Place
	 */
	@Override
	public int boundsHeight()
	{
		return ImageObserver.HEIGHT + 1;
	}

	/**
	 * Returns the width bounds we want to use when initially creating the place
	 * on the gui
	 * 
	 * @return Width bounds of Place
	 */
	@Override
	public int boundsWidth()
	{
		return ImageObserver.WIDTH + 1;
	}

	@Override
=====================================================================
Found a 7 line (34 tokens) duplication in the following files: 
Starting at line 170 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 432 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

					final ResultPlotter myPlotter = new ResultBarChartPlotter(window.getTabPanelPreferredSize());
					area = myPlotter.getChart(node.getResult());
					window.allComponents.put(hash, area);
				}
				else
				{
					area = QueryManager.getProgressWindow().allComponents.get(hash);
=====================================================================
Found a 7 line (34 tokens) duplication in the following files: 
Starting at line 1346 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 1359 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

		SettingsAction(final String name, final String tooltip, final String keystroke) {
			super(name, tooltip, keystroke);
		}

		public void actionPerformed(final ActionEvent e)
		{
			QueryManager.startPreferenceManager();
=====================================================================
Found a 6 line (34 tokens) duplication in the following files: 
Starting at line 536 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 720 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

	}

	public void setTargetLocation(final double x, final double y)
	{
		this.myPath.setPointLocation(this.myPath.getEndIndex(), x, y);
		this.updateArrow();
=====================================================================
Found a 6 line (34 tokens) duplication in the following files: 
Starting at line 315 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 808 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

			final AffineTransform zoomTransform = this.getZoomController().getTransform();
			transform.concatenate(zoomTransform);
		}

		arcIterator = top.iterator();
		transform.transform(new Point2D.Double(1, 0.5 * Transition.TRANSITION_HEIGHT), transformed); // +1
=====================================================================
Found a 6 line (34 tokens) duplication in the following files: 
Starting at line 1149 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 521 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java

							throw new QueryException(errormsg);
						}
					}
					else if (node instanceof NumNode) {
						if (((NumNode)node).getNodeLabelObject() == null) {
							errormsg = "Please ensure that your Num nodes \n"+
=====================================================================
Found a 5 line (34 tokens) duplication in the following files: 
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ResultNode.java
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

			description = QueryManager.addColouring("The macro representing the query that aims to find out ");
			if (children != null) {
				PerformanceTreeNode child = (PerformanceTreeNode)children.get(0);
				String childsReturnType = child.getReturnType();			
				if (childsReturnType.equals(BOOL_TYPE)) {
=====================================================================
Found a 9 line (34 tokens) duplication in the following files: 
Starting at line 183 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateGroupEditor.java
Starting at line 216 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateEditor.java

		CreateGui.getView().netChanged = true;
	}
	
	
	ActionListener saveState = new ActionListener()
	{
		 public void actionPerformed(ActionEvent event)
		 {
			 if (event.getSource() == saveStateGroupBtn)
=====================================================================
Found a 4 line (34 tokens) duplication in the following files: 
Starting at line 93 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java
Starting at line 391 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ProgressView.java

			final Rectangle r = element.getBounds();
			x = r.x + r.width + 100;
			y = r.y + r.height + 100;
			if (x > d.width)
=====================================================================
Found a 5 line (34 tokens) duplication in the following files: 
Starting at line 846 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 961 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java

		Iterator<PerformanceTreeNode> i = this.treeNodes.iterator();
		while (i.hasNext())
		{
			PerformanceTreeNode node = i.next();
			if (node instanceof ResultNode)
=====================================================================
Found a 9 line (34 tokens) duplication in the following files: 
Starting at line 311 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 369 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

						PerformanceTreeArc outgoingArc = getMacroArc(outgoingArcID);
						if (outgoingArc.getTarget() != null)
						{
							// arc has a target, meaning that a child node is
							// assigned to the node we're
							// deleting through the current arc
							PerformanceTreeNode targetNode = outgoingArc.getTarget();
							targetNode.removeArcCompareObject(outgoingArc);
							targetNode.setIncomingArcID(null);
=====================================================================
Found a 10 line (34 tokens) duplication in the following files: 
Starting at line 170 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 185 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

								macroFile.getCanonicalPath() + "\" xslt=\"" + xsltSource.getSystemId() +
								"\" transformer=\"" + transformer.getURIResolver() + "\"");
		}
	}

	/**
	 * This method serialises the information contained within a
	 * PerformanceTreeNode and recurses down to serialise info about its arcs
	 */
	private static void createNodeElement(	final PerformanceTreeNode inputNode,
=====================================================================
Found a 3 line (34 tokens) duplication in the following files: 
Starting at line 812 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java
Starting at line 836 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java

			XYSeries resSeries = new XYSeries("CDF of Response Time");
			for(int i = 0; i < Tpoints.size(); i++) {
				resSeries.add(Tpoints.get(i), results.get(i + offset));
=====================================================================
Found a 8 line (34 tokens) duplication in the following files: 
Starting at line 206 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateEditor.java
Starting at line 183 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateGroupEditor.java

		CreateGui.getView().netChanged = true;
	}

	ActionListener	saveState		= new ActionListener()
									{
										public void actionPerformed(ActionEvent event)
										{
											if (event.getSource() == StateGroupEditor.this.okButton)
=====================================================================
Found a 4 line (34 tokens) duplication in the following files: 
Starting at line 90 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java
Starting at line 391 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ProgressView.java

			final Rectangle r = element.getBounds();
			x = r.x + r.width + 100;
			y = r.y + r.height + 100;
			if (x > d.width)
=====================================================================
Found a 11 line (34 tokens) duplication in the following files: 
Starting at line 497 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 245 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java

	};

	/**
	 * 
	 * @return AnalysisSetting object representing the selected options; null if any setting is invalid
	 */
	private AnalysisSetting getTimeSettings()
	{
    	String startString = startTime.getText();
    	String endString = endTime.getText();
    	Double step = (Double)timeStep.getValue();
=====================================================================
Found a 6 line (34 tokens) duplication in the following files: 
Starting at line 446 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 490 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java

		System.out.println("here");
		
		// Create time / method panel
		timeMethodPanel.add(new JLabel("Time Step:") );		
		timeStep = new JSpinner(new SpinnerNumberModel(0.10, 0.0, 100, 0.1) );		
		timeMethodPanel.add(timeStep);				
=====================================================================
Found a 14 line (34 tokens) duplication in the following files: 
Starting at line 117 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 126 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

    setupPanel.add(new ButtonBar("Analyse",analyseButtonClick));
    
    
    // 6 Add setup panel to tabbed pane, add tabbed pane to guiDialog
    tabbedPane.addTab("Setup", setupPanel);    
    contentPane.add(tabbedPane);
    
    
    // 7 Make window fit contents' preferred size, centre on screen, display
    guiDialog.pack();
    guiDialog.setLocationRelativeTo(null);    
    guiDialog.setVisible(true);

  }
=====================================================================
Found a 6 line (34 tokens) duplication in the following files: 
Starting at line 68 of /usr/local/git/PipeCoursework/test/pipe/gui/FunctionalScriptsTest.java
Starting at line 90 of /usr/local/git/PipeCoursework/test/pipe/gui/FunctionalScriptsTest.java

		Color unwantedColor = parseColor(color);
		BufferedImage bi = createWhiteImage(component.getWidth(),
				component.getHeight());
		
		component.paintComponent(bi.createGraphics());
		assertTrue("Unwanted colour found within component: "
=====================================================================
Found a 8 line (34 tokens) duplication in the following files: 
Starting at line 16 of /usr/local/git/PipeCoursework/test/pipe/gui/GuiFrameTest.java
Starting at line 28 of /usr/local/git/PipeCoursework/test/pipe/common/dataLayer/GuiViewTest.java

	public GuiViewTest(String name) {
		super(name);
	}

	protected void setUp() throws Exception {
		super.setUp();
		tester = new ComponentTester();
		CreateGui.init();
=====================================================================
Found a 15 line (33 tokens) duplication in the following files: 
Starting at line 28 of /usr/local/git/PipeCoursework/RTAResources/DynamicCode/pipe/common/dataLayer/template.java
Starting at line 29 of /usr/local/git/PipeCoursework/RTAResources/DynamicCode/pipe/common/dataLayer/DynamicMarkingImpl.java

	if( p[1] > 0) 
			return true;
		else
			return false;
	}
	
	/**
	 * Identifies whether the marking is classified as a start state according to the 
	 * logical expression written at runtime.
	 * @param marking Marking to be tested
	 * @return true if matches expression
	 */
	public boolean isStartMarking(NewStateRecord marking) {
		int [] p = marking.getState();
		int id = marking.getID();
=====================================================================
Found a 5 line (33 tokens) duplication in the following files: 
Starting at line 1066 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1076 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

		prnt = elem.getSubgraph();
		while(prnt != null) {
		    if(prnt.grappaNexus != null) prnt.grappaNexus.bbox = null;
		    prnt = prnt.getSubgraph();
		}
=====================================================================
Found a 8 line (33 tokens) duplication in the following files: 
Starting at line 888 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 899 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	if(getGraph().filterMode && isEdge()) {
	    if(first) {
		first = false;
		out.println(prefix);
	    } else {
		out.println(",");
	    }
	    out.print(indent + "__nAmE__ = " + canonString(getName()));
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 305 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 417 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

			shape = new Ellipse2D.Double(pos.x - (width/2.0), pos.y - (height/2.0), width, height);
		    } else {
			shape = new Ellipse2D.Double(pos.x, pos.y, width, height);
=====================================================================
Found a 2 line (33 tokens) duplication in the following files: 
Starting at line 218 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 523 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

	    if(element.getSubgraph().isCluster() && element.getSubgraph().grappaNexus != null)
		element.getSubgraph().grappaNexus.dirty = true;
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 1068 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 1076 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

    public void mousePressed(MouseEvent mev) {
	if(inverseTransform == null || grappaListener == null || inMenu) return;

	Point2D pt = inverseTransform.transform(mev.getPoint(),null);
=====================================================================
Found a 2 line (33 tokens) duplication in the following files: 
Starting at line 619 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java
Starting at line 861 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaColor.java

      if(name == null) {
	  float[] hsb = Color.RGBtoHSB(color.getRed(),color.getGreen(),color.getBlue(),null);
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 516 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 527 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java

		if((grappaNexus = node.grappaNexus) == null) continue;
		if(grappaNexus.rawBounds2D().contains(pt)) {
		    if(grappaNexus.contains(pt)) {
			elem = node;
=====================================================================
Found a 5 line (33 tokens) duplication in the following files: 
Starting at line 281 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 301 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java

	arrayForTuple(String tuple) throws IllegalArgumentException, NumberFormatException {

	if(tuple == null) throw new IllegalArgumentException("supplied tuple string is null");

	StringTokenizer st = new StringTokenizer(tuple,", \t",false);
=====================================================================
Found a 2 line (33 tokens) duplication in the following files: 
Starting at line 487 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 619 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

	    arg[0] = parg.getX();
	    arg[1] = (Grappa.negateStringYCoord?-parg.getY():parg.getY());
=====================================================================
Found a 5 line (33 tokens) duplication in the following files: 
Starting at line 161 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 188 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

			    cvt.buildFlex(prtbuf, ((Number)args[argn++]).doubleValue(), true);
			else throw new RuntimeException("argument " + argn + " should be a Character or Number");
			break;

		    case 's':
=====================================================================
Found a 5 line (33 tokens) duplication in the following files: 
Starting at line 152 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 179 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

			    cvt.buildFlex(prtbuf, ((Number)args[argn++]).doubleValue(), false);
			else throw new RuntimeException("argument " + argn + " should be a Character or Number");
			break;

		    case 'G':
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 470 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportRects.java
Starting at line 606 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportRects.java

	for(int i = 0; i < array.length; i++) {
	    if(array[i] == GrappaSupportRects.NBSP) {
		array[i] = ' ';
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 1417 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1269 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	if((attr = getLocalAttribute(TAG_ATTR)) == null) return;
	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return;
	tags.remove(tag);
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 742 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 588 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

		    sgbox.add(new java.awt.geom.Rectangle2D.Double(minBox.x,minBox.y,minBox.width,minBox.height));
		}
	    }
=====================================================================
Found a 5 line (33 tokens) duplication in the following files: 
Starting at line 1671 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1683 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static Complex acoth(Complex a ){
                Complex c = new Complex();
                Complex d = new Complex();
                c=Complex.plusOne().plus(a);
                d=a.plus(1.0D);
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 2890 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 2920 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static boolean isOdd(double x){
            double y=Math.floor(x);
            if((x - y)!= 0.0D)throw new IllegalArgumentException("the argument is not an integer");
            boolean test=true;
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 467 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1092 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static float[] intTOfloat(int[] aa){
            int n = aa.length;
            float[] bb = new float[n];
            for(int i=0; i<n; i++){
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 459 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1072 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double[] floatTOdouble(float[] aa){
            int n = aa.length;
            double[] bb = new double[n];
            for(int i=0; i<n; i++){
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 198 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 238 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double logFactorial(double n){
            if(n<0 || (n-Math.floor(n))!=0)throw new IllegalArgumentException("\nn must be a positive integer\nIs a Gamma funtion [Fmath.gamma(x)] more appropriate?");
            double f = 0.0D;
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 744 of /usr/local/git/PipeCoursework/src/jama/EigenvalueDecomposition.java
Starting at line 817 of /usr/local/git/PipeCoursework/src/jama/EigenvalueDecomposition.java

                  t = Math.max(Math.abs(H[i][n-1]),Math.abs(H[i][n]));
                  if ((eps * t) * t > 1) {
                     for (int j = i; j <= n; j++) {
                        H[j][n-1] = H[j][n-1] / t;
=====================================================================
Found a 5 line (33 tokens) duplication in the following files: 
Starting at line 293 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 338 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      Matrix X = new Matrix(i1-i0+1,c.length);
      double[][] B = X.getArray();
      try {
         for (int i = i0; i <= i1; i++) {
            for (int j = 0; j < c.length; j++) {
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 210 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 292 of /usr/local/git/PipeCoursework/src/jama/LUDecomposition.java

         for (int i = k+1; i < n; i++) {
            for (int j = 0; j < nx; j++) {
               X[i][j] -= X[k][j]*LU[i][k];
=====================================================================
Found a 1 line (33 tokens) duplication in the following files: 
Starting at line 1217 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 1220 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java

        int size2 = (((int)sb.charAt(n))<<16) | ((int)sb.charAt(n+1)); n+=2;
=====================================================================
Found a 6 line (33 tokens) duplication in the following files: 
Starting at line 1840 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1928 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

				final int transitionNo = this.transitionsArray.indexOf(transition);
				
			
				for (int placeNo = 0; placeNo < this.placesArray.size(); placeNo++)
				{
					final Place current = ((Place) this.placesArray.get(placeNo));
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 1657 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 434 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

   public void setMatrix (int[] r, int j0, int j1, Matrix X) {
      try {
         for (int i = 0; i < r.length; i++) {
            for (int j = j0; j <= j1; j++) {
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 1624 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 454 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

   public void setMatrix (int i0, int i1, int[] c, Matrix X) {
      try {
         for (int i = i0; i <= i1; i++) {
            for (int j = 0; j < c.length; j++) {
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 968 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 316 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      double[][] B = X.getArray();
      try {
         for (int i = 0; i < r.length; i++) {
            for (int j = 0; j < c.length; j++) {
=====================================================================
Found a 24 line (33 tokens) duplication in the following files: 
Starting at line 939 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 975 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

					B[i][j - j0] = this.A[r[i]][j];
				}
			}
		}
		catch (final ArrayIndexOutOfBoundsException e)
		{
			throw new ArrayIndexOutOfBoundsException("Submatrix indices");
		}
		return X;
	}

// ######################################################################################
	/**
	 * Get a submatrix.
	 * 
	 * @param r
	 *            Array of row indices.
	 * @param c
	 *            Array of column indices.
	 * @return A(r(:),c(:))
	 * @exception ArrayIndexOutOfBoundsException
	 *                Submatrix indices
	 */
	public PNMatrix getMatrix(final int[] r, final int[] c)
=====================================================================
Found a 10 line (33 tokens) duplication in the following files: 
Starting at line 92 of /usr/local/git/PipeCoursework/src/pipe/common/queryresult/XYCoordinates.java
Starting at line 105 of /usr/local/git/PipeCoursework/src/pipe/common/queryresult/XYCoordinates.java

			return this.pointsOrderedByY.get(this.pointsOrderedByY.size() - 1);
		}
		catch (final IndexOutOfBoundsException e)
		{
			QueryResultLoggingHandler.logger.log(Level.WARNING, "XYCoordinates list is empty");
			throw e;
		}
	}

	private XYCoordinate doGetMinX()
=====================================================================
Found a 12 line (33 tokens) duplication in the following files: 
Starting at line 82 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/NewSteadyStateSolver.java
Starting at line 149 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/NewSteadyStateSolver.java

			if(maxNum / maxDen < 0.00000000000001) {
				/*System.out.print("Result = [");
				RTA.printArray(pi);*/
				
				return normalise(pi);
			}
			if(iterations++ > 2000000) {
				System.out.println("Error: Not converging");
				System.exit(1);
			}
		}
	}
=====================================================================
Found a 9 line (33 tokens) duplication in the following files: 
Starting at line 25 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/NewSteadyStateSolver.java
Starting at line 107 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/NewSteadyStateSolver.java

		double [] pit0 = new double[n];
		
		for(int i = 0; i < n; i++) {
			pi[i] = 1;
			pisub1[i] = 1;
		}
		
		
		double sum;
=====================================================================
Found a 8 line (33 tokens) duplication in the following files: 
Starting at line 146 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 393 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

			localarcs = new LinkedList();
		}
		try {
			outputFile.close();
		} catch (IOException e1) {
			System.err.println("\nCould not close intermediate file.");
		}
		System.out.println("\nGenerate Ends, " + numtangiblestates + " tangible states found with " + numtransitions + " arcs.");
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java
Starting at line 190 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

		Component netObj[] = edit_window.getComponents();
		for (int i=0; i<netObj.length; i++)
		{
			if ((netObj[i] instanceof PetriNetObject)
=====================================================================
Found a 7 line (33 tokens) duplication in the following files: 
Starting at line 158 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ProgressView.java
Starting at line 237 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ProgressView.java

		i = ptObjects.iterator();
		while (i.hasNext())
		{
			final PerformanceTreeObject ptObject = i.next();
			if (ptObject instanceof PerformanceTreeNode)
			{
				final double newStartXPosition = ptObject.getPositionX() + displacementX;
=====================================================================
Found a 5 line (33 tokens) duplication in the following files: 
Starting at line 245 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

		Component netObj[] = edit_window.getComponents();
		// Get all the objects in the current window
		for (int i=0; i<netObj.length; i++) {
			// Handle Arcs and Arc Points
			if ((netObj[i] instanceof Arc) && ((PetriNetObject)netObj[i]).isSelectable())	{
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 48 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 42 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

	private static final Color selectionColor = new Color(0,0,255,30);
	private static final Color selectionColorOutline = new Color(0,0,100);	
	private GuiView edit_window;
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 971 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 1003 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

		Set actionNames = actions.keySet();
		Iterator iter = actionNames.iterator();
		while(iter.hasNext()){
			String nextActionKey = (String)iter.next();
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 113 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 76 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

	private final String[] zoomExamples={"40%","60%","80%","100%","120%","140%","160%","180%","200%","300%","350%","400%"}; 
	
	private String frameTitle;  //Frame title
=====================================================================
Found a 5 line (33 tokens) duplication in the following files: 
Starting at line 377 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 383 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 388 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 393 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 399 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 404 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 409 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 414 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 419 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 425 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 431 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 436 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 441 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 446 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 451 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 456 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 461 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 466 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 471 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 476 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 481 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 486 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 491 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 496 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java

						ptObject = new MacroNode(Grid.getModifiedX(startX), Grid.getModifiedY(startY));
						ptObject = QueryManager.getData().addPerformanceTreeObject(ptObject);
						addNewPerformanceTreeObject(ptObject);
						break;
					case DRAG :
=====================================================================
Found a 7 line (33 tokens) duplication in the following files: 
Starting at line 1019 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java
Starting at line 189 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java

	public void deleteSelection() {
		if (MacroManager.getEditor() == null)
			QueryManager.clearInfoBox();
		else
			MacroManager.getEditor().writeToInfoBox("");

		Component[] netObj;
=====================================================================
Found a 1 line (33 tokens) duplication in the following files: 
Starting at line 369 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 371 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java

				return ((PerformanceTreeArcPathPoint)pathPoints.get(getEndIndex())).getAngle(((PerformanceTreeArcPathPoint)(pathPoints.get(getEndIndex()))).getControl1());
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 793 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 1003 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

		Set actionNames = actions.keySet();
		Iterator iter = actionNames.iterator();
		while(iter.hasNext()){
			String nextActionKey = (String)iter.next();
=====================================================================
Found a 13 line (33 tokens) duplication in the following files: 
Starting at line 130 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 113 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

	private final String[]			zoomExamples	= {"40%",
			"60%",
			"80%",
			"100%",
			"120%",
			"140%",
			"160%",
			"180%",
			"200%",
			"300%",
			"350%",
			"400%"									};
	private JComboBox				zoomComboBox;
=====================================================================
Found a 6 line (33 tokens) duplication in the following files: 
Starting at line 79 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/StatesNode.java
Starting at line 90 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/StatesNode.java

				if (getStateLabel() != null)
					description += QueryManager.addColouring("the set of states identified by label '"+getStateLabel()+"'");
				else 
					description += QueryManager.addColouring("the set of states that has not been specified yet");
			}
			else {		
=====================================================================
Found a 6 line (33 tokens) duplication in the following files: 
Starting at line 188 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java
Starting at line 41 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java

			{
				JPopupMenu popup = getPopup(e);
				popup.show(e.getComponent(), e.getX(), e.getY());
			}
		}
	}
=====================================================================
Found a 6 line (33 tokens) duplication in the following files: 
Starting at line 188 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java
Starting at line 210 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

		 else
		 {
			 JPopupMenu popup = getPopup(e);	
			 popup.show(e.getComponent(), e.getX(), e.getY());
		 }
	 }
=====================================================================
Found a 6 line (33 tokens) duplication in the following files: 
Starting at line 514 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 184 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java

			Iterator<PerformanceTreeArc> k = arcs.iterator();
			while (k.hasNext())
			{
				PerformanceTreeArc arc = k.next();
				String arcID = arc.getId();
				System.out.println(" Arc with ID " + arcID);
=====================================================================
Found a 7 line (33 tokens) duplication in the following files: 
Starting at line 173 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 188 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java

		else {
			// right-click will bring up a popup menu that allows the user to
			// clear the condition on the place
			JPopupMenu popup = getPopup(e);	
			popup.show(e.getComponent(), e.getX(), e.getY());
		}
	}	 
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 183 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/DrmaaExecutor.java
Starting at line 320 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/DrmaaExecutor.java

				final NodeAnalyserResultWrapper num = (NodeAnalyserResultWrapper) this.subtree	.getChildByRole(QueryConstants.percentileChildNum)
																								.getResult();
				final NumNode numNode = (NumNode) num.getResult();
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 147 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/DrmaaExecutor.java
Starting at line 311 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/DrmaaExecutor.java

				final NodeAnalyserResultWrapper range = (NodeAnalyserResultWrapper) this.subtree.getChildByRole(QueryConstants.probInIntervalChildRange)
																								.getResult();
				final RangeNode rangeNode = (RangeNode) range.getResult();
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 716 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java
Starting at line 727 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java

				this.modFiles.append("\t\t\tnext->").append(currArc.placeId);
				this.modFiles	.append(" = ")
								.append(currArc.placeId)
								.append(" + ")
=====================================================================
Found a 7 line (33 tokens) duplication in the following files: 
Starting at line 50 of /usr/local/git/PipeCoursework/src/pipe/server/serverCommon/ServerAction.java
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/common/LoggingHelper.java

	public static String getStackTrace(final Throwable e)
	{
		final OutputStream buf = new ByteArrayOutputStream();
		final PrintStream p = new PrintStream(buf);
		e.printStackTrace(p);
		return buf.toString();
	}
=====================================================================
Found a 14 line (32 tokens) duplication in the following files: 
Starting at line 15 of /usr/local/git/PipeCoursework/RTAResources/DynamicCode/pipe/common/dataLayer/template.java
Starting at line 15 of /usr/local/git/PipeCoursework/RTAResources/DynamicCode/pipe/common/dataLayer/DynamicMarkingImpl.java

public class DynamicMarkingImpl implements DynamicMarking {
	//IMPORTANT NOTE: Do not remove any comments starting //#$#
	//These are required by the DynamicMarkingCompiler class to identify where to insert
	//additional code at runtime
	
	/**
	 * Identifies whether the marking is classified as a target state according to 
	 * the logical expression written at runtime
	 * @param marking Marking to be tested
	 * @return true if matches expression	 
	 */
	public boolean isTargetMarking(NewStateRecord marking) {
		int [] p = marking.getState();
		int id = marking.getID();
=====================================================================
Found a 9 line (32 tokens) duplication in the following files: 
Starting at line 1215 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1244 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return false;
	return true;
    }

    /**
     * Removes all tags locally associated with this element.
     */
    public void removeTags() {
=====================================================================
Found a 5 line (32 tokens) duplication in the following files: 
Starting at line 1165 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1213 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	    return(hasDefaultTags());
	}
	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return false;
	return true;
=====================================================================
Found a 4 line (32 tokens) duplication in the following files: 
Starting at line 463 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 530 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

			    ((Element)(subg.currentSelection)).delete();
			} else {
			    Vector vec = (Vector)(subg.currentSelection);
			    for(int i = 0; i < vec.size(); i++) {
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 89 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 532 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

			    Vector vec = (Vector)(subg.currentSelection);
			    for(int i = 0; i < vec.size(); i++) {
				((Element)(vec.elementAt(i))).delete();
=====================================================================
Found a 10 line (32 tokens) duplication in the following files: 
Starting at line 680 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 723 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

		if(
		   element.isNode()
		   &&
		   (
		    shapeType == (RECORD_SHAPE|GRAPPA_SHAPE)
		    ||
		    shapeType == (MRECORD_SHAPE|GRAPPA_SHAPE)
		    )
		   &&
		   labelAttr.indexOf('|') >= 0
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 177 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 186 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

			    cvt.buildFlex(prtbuf, ((Character)args[argn++]).charValue(), true);
			else if (args[argn] instanceof Number)
			    cvt.buildFlex(prtbuf, ((Number)args[argn++]).doubleValue(), true);
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 159 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 186 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

			    cvt.buildFlex(prtbuf, ((Character)args[argn++]).charValue(), true);
			else if (args[argn] instanceof Number)
			    cvt.buildFlex(prtbuf, ((Number)args[argn++]).doubleValue(), true);
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 150 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 159 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

			    cvt.buildExp(prtbuf, ((Character)args[argn++]).charValue(), true);
			else if (args[argn] instanceof Number)
			    cvt.buildExp(prtbuf, ((Number)args[argn++]).doubleValue(), true);
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 150 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 177 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

			    cvt.buildFlex(prtbuf, ((Character)args[argn++]).charValue(), false);
			else if (args[argn] instanceof Number)
			    cvt.buildFlex(prtbuf, ((Number)args[argn++]).doubleValue(), false);
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 141 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 159 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

			    cvt.buildExp(prtbuf, ((Character)args[argn++]).charValue(), true);
			else if (args[argn] instanceof Number)
			    cvt.buildExp(prtbuf, ((Number)args[argn++]).doubleValue(), true);
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 132 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 141 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

			    cvt.buildHex(prtbuf, ((Character)args[argn++]).charValue(), true);
			else if (args[argn] instanceof Number)
			    cvt.buildHex(prtbuf, ((Number)args[argn++]).intValue(), true);
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 132 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 150 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

			    cvt.buildExp(prtbuf, ((Character)args[argn++]).charValue(), false);
			else if (args[argn] instanceof Number)
			    cvt.buildExp(prtbuf, ((Number)args[argn++]).doubleValue(), false);
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 1499 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1514 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

	    parser.report_error ("An error was encountered while graph parsing (" + val.toString() + ").", null);
          
              CUP$Parser$result = new java_cup.runtime.Symbol(9/*graph*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
=====================================================================
Found a 4 line (32 tokens) duplication in the following files: 
Starting at line 455 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 476 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static Complex[] oneDarray(int n, Complex constant){
                Complex[] c =new Complex[n];
                for(int i=0; i<n; i++){
                        c[i]=Complex.copy(constant);
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 1496 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1538 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            }

            while(lastIndex != n-1){
                index = lastIndex+1;
                for(int i=lastIndex+2; i<n; i++){
                    if(cc[i]<cc[index]){
=====================================================================
Found a 4 line (32 tokens) duplication in the following files: 
Starting at line 1487 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1896 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static void selectSort(double[] aa, double[] bb, int[] indices){
            int index = 0;
            int lastIndex = -1;
            int n = aa.length;
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 422 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1382 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            double[] bb = new double[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 223 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 238 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double logFactorial(double n){
            if(n<0 || (n-Math.floor(n))!=0)throw new IllegalArgumentException("\nn must be a positive integer\nIs a Gamma funtion [Fmath.gamma(x)] more appropriate?");
            double f = 0.0D;
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 217 of /usr/local/git/PipeCoursework/src/jama/LUDecomposition.java
Starting at line 941 of /usr/local/git/PipeCoursework/src/jama/EigenvalueDecomposition.java

      double[][] D = X.getArray();
      for (int i = 0; i < n; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 472 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 196 of /usr/local/git/PipeCoursework/src/jama/LUDecomposition.java

      double[][] L = X.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 317 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 415 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      try {
         for (int i = 0; i < r.length; i++) {
            for (int j = 0; j < c.length; j++) {
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 190 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 196 of /usr/local/git/PipeCoursework/src/jama/LUDecomposition.java

      double[][] L = X.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 14 line (32 tokens) duplication in the following files: 
Starting at line 171 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 268 of /usr/local/git/PipeCoursework/src/jama/LUDecomposition.java

   }

   /** Solve A*X = B
   @param  B   A Matrix with as many rows as A and any number of columns.
   @return     X so that L*U*X = B(piv,:)
   @exception  IllegalArgumentException Matrix row dimensions must agree.
   @exception  RuntimeException  Matrix is singular.
   */

   public Matrix solve (Matrix B) {
      if (B.getRowDimension() != m) {
         throw new IllegalArgumentException("Matrix row dimensions must agree.");
      }
      if (!this.isNonsingular()) {
=====================================================================
Found a 4 line (32 tokens) duplication in the following files: 
Starting at line 161 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 197 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java

               s += QR[i][k]*X[i][j];
            }
            s = -s/QR[k][k];
            for (int i = k; i < m; i++) {
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 130 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 941 of /usr/local/git/PipeCoursework/src/jama/EigenvalueDecomposition.java

      double[][] D = X.getArray();
      for (int i = 0; i < n; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 111 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 190 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      double[][] C = X.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 4 line (32 tokens) duplication in the following files: 
Starting at line 77 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 161 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java

                  s += QR[i][k]*Q[i][j];
               }
               s = -s/QR[k][k];
               for (int i = k; i < m; i++) {
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 498 of /usr/local/git/PipeCoursework/src/jama/SingularValueDecomposition.java
Starting at line 130 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java

      double[][] R = X.getArray();
      for (int i = 0; i < n; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 11 line (32 tokens) duplication in the following files: 
Starting at line 1697 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1779 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

		if(this.previoulyTaggedPlace == null) this.previoulyTaggedPlace = new ArrayList();
		
		
		if (transition != null)
		{
			

			this.setEnabledTransitions();
			
			//check if it can fire untagged token
			if( transition.hasTaggedPlaceUntaggedArc()==1 || transition.hasTaggedArcAndPlace()==1 ){
=====================================================================
Found a 5 line (32 tokens) duplication in the following files: 
Starting at line 1379 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1483 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		output.println(); // start on new line.
		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 1002 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1690 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		try
		{
			for (int i = 0; i < r.length; i++)
			{
				for (int j = 0; j < c.length; j++)
				{
=====================================================================
Found a 5 line (32 tokens) duplication in the following files: 
Starting at line 511 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1483 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		output.println(); // start on new line.
		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
=====================================================================
Found a 8 line (32 tokens) duplication in the following files: 
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PlaceTransitionObject.java
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/FiringTaggedButton.java

	public FiringTaggedButton(final double x, final double y){


		if (CreateGui.getApp() != null)
		{
			this.addZoomController(CreateGui.getView().getZoomController());
		}
		this.setPositionX(x);
=====================================================================
Found a 8 line (32 tokens) duplication in the following files: 
Starting at line 437 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 411 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java

		if (this.selected && !PetriNetObject.ignoreSelection)
		{
			g2.setColor(Constants.SELECTION_FILL_COLOUR);
		}
		else
		{
			g2.setColor(Constants.ELEMENT_FILL_COLOUR);
		}
=====================================================================
Found a 4 line (32 tokens) duplication in the following files: 
Starting at line 347 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LaplaceTransformInverter.java
Starting at line 237 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LTIMapRed.java

			for(int i = 0; i < n; i++) {
				MatrixX[i] = new Complex();
				MatrixXsub1[i] = new Complex();
			}
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 132 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/myNode.java
Starting at line 166 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/myNode.java

		for(count = 0; count < tree.number_places; count++)
		{
			CMinusValue = (tree.CMinus).get(count, (transIndex - 1));
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 115 of /usr/local/git/PipeCoursework/src/pipe/gui/CreateGui.java
Starting at line 125 of /usr/local/git/PipeCoursework/src/pipe/gui/CreateGui.java

	public static GuiView getView(final int index)
	{
		if (index < 0)
			return null;
		TabData tab = (TabData) CreateGui.tabs.get(index);
		if (tab.appView == null)
=====================================================================
Found a 5 line (32 tokens) duplication in the following files: 
Starting at line 266 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 293 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java

		boolean hasImmediate = false;
		int length = transitions.length;
		
		for (int i = 0; i< length; i++) {
			if (transitions[i].isTimed()==false)
=====================================================================
Found a 10 line (32 tokens) duplication in the following files: 
Starting at line 72 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java
Starting at line 63 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ConditionPlaceHandler.java

		operaterCombo = new JComboBox();
		
		// Add standard operators to combo-box
		operaterCombo.addItem("=");
		operaterCombo.addItem("<");
		operaterCombo.addItem("\u2264"); // <= character
		operaterCombo.addItem(">");
		operaterCombo.addItem("\u2265");		// >= character
		
		conditionValue  = new JTextField(5);
=====================================================================
Found a 7 line (32 tokens) duplication in the following files: 
Starting at line 122 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 391 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

				final FilePointsResultWrapper result = (FilePointsResultWrapper) node.getResult();

				final JMenuItem num = new JMenuItem(String.valueOf(result.getNumResult()));

				menu.add(num);

				final JMenuItem popup1 = new JMenuItem(new TabOpenFileText(node));
=====================================================================
Found a 5 line (32 tokens) duplication in the following files: 
Starting at line 41 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java
Starting at line 211 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

		 {
			 JPopupMenu popup = getPopup(e);	
			 popup.show(e.getComponent(), e.getX(), e.getY());
		 }
	 }
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 1048 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 1138 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 1249 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 1320 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 1333 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 1346 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

		EvaluateAction(final String name, final String tooltip, final String keystroke) {
			super(name, tooltip, keystroke);
		}

		public void actionPerformed(final ActionEvent e)
		{
=====================================================================
Found a 8 line (32 tokens) duplication in the following files: 
Starting at line 580 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 812 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

		for (int index = 0; index < this.pathPoints.size() - 1; index++)
		{
			if (distances[index] < shortest)
			{
				shortest = distances[index];
				wantedpoint = index;
			}
		}
=====================================================================
Found a 5 line (32 tokens) duplication in the following files: 
Starting at line 290 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 839 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

		final ArcPathPoint point = (ArcPathPoint) this.pathPoints.get(index);
		point.setPointLocation(point.getPoint().x + x, point.getPoint().y + y);
	}

	public void updateArc()
=====================================================================
Found a 9 line (32 tokens) duplication in the following files: 
Starting at line 217 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 759 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

						myCurrentPoint.setControl2(this.getControlPoint(myNextPoint.getPoint(),
																		myCurrentPoint.getPoint(),
																		myCurrentPoint.getPoint(),
																		myPreviousPoint.getPoint()));
					}
				}
			}
		}
	}
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 209 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 749 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

					myCurrentPoint.setControl1(this.getControlPoint(myPreviousButOnePoint.getPoint(),
																	myPreviousPoint.getPoint(),
																	myPreviousPoint.getPoint(),
																	myCurrentPoint.getPoint()));
				}
				if (c < this.getEndIndex())
=====================================================================
Found a 1 line (32 tokens) duplication in the following files: 
Starting at line 630 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

				this.angle = Math.atan((p1.x - p2.x) / (p2.y - p1.y)) + Math.PI;
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 558 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 469 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

	{
		if (MacroManager.getMode() == QueryConstants.LOADING &&
			QueryManager.getMode() != QueryConstants.LOADING)
		{
			// a macro is being loaded in from an XML file and visualised
			MacroDefinition macro = MacroLoader.getMacro();
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 1201 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 1281 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 1350 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 1362 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java

		GridAction(final String name, final String tooltip, final String keystroke) {
			super(name, tooltip, keystroke);
		}

		public void actionPerformed(final ActionEvent e)
		{
=====================================================================
Found a 5 line (32 tokens) duplication in the following files: 
Starting at line 110 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SequentialNode.java
Starting at line 126 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SequentialNode.java

			QueryManager.resetTextColour();
			description += QueryManager.addColouring(op);
			description += QueryManager.addColouring("2. ");
			QueryManager.colourUp();
			description += QueryManager.addColouring("another query that has also not been specified yet");
=====================================================================
Found a 5 line (32 tokens) duplication in the following files: 
Starting at line 88 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateStatesNode.java
Starting at line 90 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateProbNode.java

				else {
					if (children.size() == 1) {
						description += QueryManager.addColouring(op);
						QueryManager.colourUp();
						description += QueryManager.addColouring("the set of all states in the model ");
=====================================================================
Found a 11 line (32 tokens) duplication in the following files: 
Starting at line 122 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/ValueNode.java
Starting at line 290 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

		}

	}
	
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D)g;
		g2d = g2;
		
		// make sure node label follows node if node's being dragged around
		if (nodeLabel != null)
=====================================================================
Found a 13 line (32 tokens) duplication in the following files: 
Starting at line 150 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlace.java
Starting at line 174 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlace.java

		condOperator = operator;
		condOperand = operand;
		currentColor = validColor;
		repaint();
	}
	
	public void removeCondition()
	{
		condOperator = "";
		condOperand = "";
		currentColor = defaultColor;
		repaint();
	}
=====================================================================
Found a 12 line (32 tokens) duplication in the following files: 
Starting at line 113 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java
Starting at line 114 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java

			place.deselect();
					
			super.add(place);
			
			setLayer(place, DEFAULT_LAYER.intValue() + PLACE_TRANSITION_LAYER_OFFSET);
			place.addedToGui(); // this will add the place labels
			
			condPlaces.add(place);
		}

		// We ignore the Annotation nodes - these nodes will need further development
		else if (currentObj instanceof AnnotationNote);
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 62 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroTransformer.java
Starting at line 153 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMLTransformer.java

			final Transformer transformer = TransformerFactory.newInstance().newTransformer(xsltSource);

			// TRY TO DO ALL IN MEMORT TO REDUCE READ-WRITE DELAYS

			outputObjectArrayList = new File(System.getProperty("java.io.tmpdir") +
												System.getProperty("file.separator") + "ObjectList.xml"); // Output
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 163 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java
Starting at line 176 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

			System.out.println("TransformerConfigurationException thrown in saveMacro()" +
								" : MacroWriter Class : modules.queryeditor.io Package" + " : filename=\"" +
								macroFile.getCanonicalPath() + "\" xslt=\"" + xsltSource.getSystemId() +
								"\" transformer=\"" + transformer.getURIResolver() + "\"");
		}
		catch (TransformerException e)
=====================================================================
Found a 9 line (32 tokens) duplication in the following files: 
Starting at line 288 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 346 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

			PerformanceTreeNode nodeToDelete = getMacroNode(nodeID);
			if (nodeToDelete != null)
			{
				// Decouple from parent node
				if (nodeToDelete.getIncomingArcID() != null)
				{
					// update incoming arc's data
					String incomingArcID = nodeToDelete.getIncomingArcID();
					PerformanceTreeArc incomingArc = getMacroArc(incomingArcID);
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 62 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryTransformer.java
Starting at line 153 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMLTransformer.java

			final Transformer transformer = TransformerFactory.newInstance().newTransformer(xsltSource);

			// TRY TO DO ALL IN MEMORT TO REDUCE READ-WRITE DELAYS

			outputObjectArrayList = new File(System.getProperty("java.io.tmpdir") +
												System.getProperty("file.separator") + "ObjectList.xml"); // Output
=====================================================================
Found a 7 line (32 tokens) duplication in the following files: 
Starting at line 145 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 160 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java

			System.out.println("TransformerConfigurationException thrown in savePTML()" +
								" : QueryDataWriter Class : modules.queryeditor.io Package" +
								" : filename=\"" + file.getCanonicalPath() + "\" xslt=\"" +
								xsltSource.getSystemId() + "\" transformer=\"" +
								transformer.getURIResolver() + "\"");
		}
		catch (TransformerException e)
=====================================================================
Found a 20 line (32 tokens) duplication in the following files: 
Starting at line 441 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java
Starting at line 558 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java

				MatrixQind[i][0] = rowsize[i];
			}
			ipfc.close();
			//printMatrix(MatrixQind, MatrixQdata);
		}
		catch (Exception e) {
			System.out.println("Error filling matixes");
			e.printStackTrace();
		}
	}
	
	/**
	 * Utility function that sums the elements in one row of a sparse matrix and returns the negative
	 * of its sum.
	 * @param Mind Index data part of sparse matrix
	 * @param Mdata Value data part of sparse matrix
	 * @param row
	 * @return
	 */
	private double sumRow(int[][] Mind, double [] Mdata, int row) {
=====================================================================
Found a 13 line (32 tokens) duplication in the following files: 
Starting at line 92 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/Analyse.java
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/Analyse.java

			  resultsReceiver.receive(pnmlData);
			  			    
			  updateUI("Closing Connection");		  
			  serverSock.close();
			  
						  
			  // Slow the transition between progress tab and results tab
			  try {
				Thread.sleep(800);
			} catch (InterruptedException e) {} 

			  // Add results pane and set active
			tabbedPane.addTab("Results", resultsPane);
=====================================================================
Found a 5 line (32 tokens) duplication in the following files: 
Starting at line 174 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 41 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java

			{
				JPopupMenu popup = getPopup(e);
				popup.show(e.getComponent(), e.getX(), e.getY());
			}
		}
=====================================================================
Found a 9 line (32 tokens) duplication in the following files: 
Starting at line 63 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 72 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

		conditionValue  = new JTextField(5);
		
		operaterCombo.addItem("=");
		operaterCombo.addItem("<");
		operaterCombo.addItem("\u2264"); // <= character
		operaterCombo.addItem(">");
		operaterCombo.addItem("\u2265");		// >= character
		//if(!((StateEditor)parent).activeStateGroup.getTaggedPlaceExist())
		conditionValue.setEnabled(true);
=====================================================================
Found a 7 line (32 tokens) duplication in the following files: 
Starting at line 114 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java
Starting at line 113 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java

			place.addMouseListener(handler);			
			super.add(place);
			setLayer(place, DEFAULT_LAYER.intValue() + PLACE_TRANSITION_LAYER_OFFSET);
			place.addedToGui(); // this will add the place labels
			condPlaces.add(place);
		}
		else {
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 560 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java
Starting at line 617 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

		}
		
		private int getPlaceIndex(String placeName){		
			int index = -1;
			for(int i=0; i<places.length; i++) {		
				if(places[i].getId()==placeName)
=====================================================================
Found a 7 line (32 tokens) duplication in the following files: 
Starting at line 400 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java
Starting at line 425 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

	  			condition += currArc.placeId + " > " + (currArc.weight - 1);
	  	}
	  		
	  		
	  	while (arcsTo.hasNext())
	  	{
	  		currArc = arcsTo.next();
=====================================================================
Found a 5 line (32 tokens) duplication in the following files: 
Starting at line 240 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java
Starting at line 274 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

	  				break;
	  			}
	  		}
	  		for(int j=0; j<arcFromTransitions.size(); j++){
	  			if(arcFromTransitions.get(j).tagged) {
=====================================================================
Found a 7 line (32 tokens) duplication in the following files: 
Starting at line 259 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 425 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

	  			condition += currArc.placeId + " > " + (currArc.weight - 1);
	  	}
	  		
	  		
	  	while (arcsTo.hasNext())
	  	{
	  		currArc = arcsTo.next();
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 717 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java
Starting at line 223 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java

		  		modString.append(" = ").append(currArc.placeId).append(" - ").append(currArc.weight).append(";\n");
		  	}
		  	
		  	
		  	// Add a marking to all outputs of the transition
		  	for (SimpleArc currArc : transitions.arcsFrom.get(i))
=====================================================================
Found a 7 line (32 tokens) duplication in the following files: 
Starting at line 482 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java
Starting at line 425 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

	  			condition += currArc.placeId + " > " + (currArc.weight - 1);
	  	}
	  		
	  		
	  	while (arcsTo.hasNext())
	  	{
	  		currArc = arcsTo.next();
=====================================================================
Found a 2 line (32 tokens) duplication in the following files: 
Starting at line 32 of /usr/local/git/PipeCoursework/test/pipe/modules/reachabilityGraphGenerator/ReachabilityGraphTest.java
Starting at line 42 of /usr/local/git/PipeCoursework/test/pipe/dataLayer/calculations/StateSpaceGeneratorTest.java

			File [] nets = new File(new URI(this.getClass().getClassLoader().
					getResource("Example nets").toString())).listFiles();
=====================================================================
Found a 7 line (31 tokens) duplication in the following files: 
Starting at line 344 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 586 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java

		copy_value = ((GrappaBox)value).clone();
	    } else {
		throw new IllegalArgumentException("value of attribute \"" + name + "\" is not an instance of GrappaBox");
	    }
	    break;
	case COLOR_TYPE:
	    if(value instanceof java.awt.Color) {
=====================================================================
Found a 1 line (31 tokens) duplication in the following files: 
Starting at line 56 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaListener.java
Starting at line 250 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

    public void grappaReleased(Subgraph subg, Element elem, GrappaPoint pt, int modifiers, Element pressedElem, GrappaPoint pressedPt, int pressedModifiers, GrappaBox outline, GrappaPanel panel) {
=====================================================================
Found a 7 line (31 tokens) duplication in the following files: 
Starting at line 807 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 844 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

			for(i=0; i<array.length; i++) {
			    if(
			       array[i] == '\\'
			       &&
			       ++i < array.length
			       &&
			       ((ch = array[i]) == 'l' || array[i] == 'r' || array[i] == 'n')
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 63 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSize.java
Starting at line 53 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPoint.java

	    throw new IllegalArgumentException("coordinate string (" + coordString + ") has a bad number format (" + nfe.getMessage() + ")");
	}
	if(coords == null || coords.length != 2) {
	    throw new IllegalArgumentException("coordinate string (" + coordString + ") does not contain 2 valid coordinates");
=====================================================================
Found a 9 line (31 tokens) duplication in the following files: 
Starting at line 570 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportRects.java
Starting at line 636 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportRects.java

	int fc = fieldCount();

	if(fc == 0) {
	    return;
	}

	TableField tfield = null;
	for(int cnt = 0; cnt < fc; cnt++) {
	    tfield = fieldAt(cnt);
=====================================================================
Found a 6 line (31 tokens) duplication in the following files: 
Starting at line 996 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1005 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1032 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1075 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(7/*optMacroName*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // attrType ::= EDGE 
=====================================================================
Found a 5 line (31 tokens) duplication in the following files: 
Starting at line 992 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1001 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          case 46: // attrDefs ::= attrItem 
            {
              Object RESULT = null;

              CUP$Parser$result = new java_cup.runtime.Symbol(27/*attrDefs*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
=====================================================================
Found a 6 line (31 tokens) duplication in the following files: 
Starting at line 835 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 898 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 915 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(22/*subgraph*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // NT$2 ::= 
=====================================================================
Found a 5 line (31 tokens) duplication in the following files: 
Starting at line 953 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 961 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 969 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    while(subg != null && (attr = subg.getEdgeAttribute(key)) == null) {
		subg = subg.getSubgraph();
	    }
	    if(attr == null) {
		attr = getGraph().getGlobalAttribute(EDGE,key);
=====================================================================
Found a 2 line (31 tokens) duplication in the following files: 
Starting at line 740 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 586 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

		    sgbox = new java.awt.geom.Rectangle2D.Double(minBox.x,minBox.y,minBox.width,minBox.height);
		} else {
=====================================================================
Found a 2 line (31 tokens) duplication in the following files: 
Starting at line 732 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 578 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

		    sgbox = new java.awt.geom.Rectangle2D.Double(0,0,minSize.getWidth(),minSize.getHeight());
		} else {
=====================================================================
Found a 10 line (31 tokens) duplication in the following files: 
Starting at line 361 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 485 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    edgeAttributes.put(name,(crntAttr = new Attribute(EDGE,name,value)));
	    //System.err.println("adding new edge attr("+name+","+value+") to "+getName());
	    /*
	     * just concerned with subgraphs that share the same default (or null)
	     * and edges that do not have a local attribute
	     */
	} else {
	    oldValue = crntAttr.getValue();
	    if(value == null) {
		if(prntAttr == null) {
=====================================================================
Found a 9 line (31 tokens) duplication in the following files: 
Starting at line 1675 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1687 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                d=a.plus(1.0D);
                c=c.over(d);
                c=Complex.log(c);
                c=c.over(2.0D);
                return c;
        }

        // Inverse hyperbolic secant of a Complex number
        public static Complex asech(Complex a ){
=====================================================================
Found a 15 line (31 tokens) duplication in the following files: 
Starting at line 147 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 221 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                        }
                        catch(java.io.IOException e){
                                done = true;
                        }
                }
                return Complex.parseComplex(cstring);
        }



        // Read a complex number from the keyboard console without a prompt message
        // in a String format compatible with Complex.parse,
        // e.g 2+j3, 2 + j3, 2+i3, 2 + i3
        // prompt = Prompt message to vdu
        public static final synchronized Complex readComplex()
=====================================================================
Found a 7 line (31 tokens) duplication in the following files: 
Starting at line 824 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 896 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static int nearestHigherElementValue(int[] array, int value){
            int diff0 = 0;
            int diff1 = 0;
            int nearest = 0;
            int ii = 0;
            boolean test = true;
            int max = array[0];
=====================================================================
Found a 7 line (31 tokens) duplication in the following files: 
Starting at line 687 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 759 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static int nearestHigherElementIndex(double[] array, double value){
            double diff0 = 0.0D;
            double diff1 = 0.0D;
            int nearest = 0;
            int ii = 0;
            boolean test = true;
            double max = array[0];
=====================================================================
Found a 7 line (31 tokens) duplication in the following files: 
Starting at line 653 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 725 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double nearestHigherElementValue(double[] array, double value){
            double diff0 = 0.0D;
            double diff1 = 0.0D;
            double nearest = 0.0D;
            int ii = 0;
            boolean test = true;
            double max = array[0];
=====================================================================
Found a 14 line (31 tokens) duplication in the following files: 
Starting at line 481 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 614 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                if(array[counter].equals(value)){
                    index = counter;
                    test = false;
                }
                else{
                    counter++;
                    if(counter>=array.length)test = false;
                }
            }
            return index;
        }

        // finds the value of nearest element value in array to the argument value
        public static double nearestElementValue(double[] array, double value){
=====================================================================
Found a 3 line (31 tokens) duplication in the following files: 
Starting at line 198 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 223 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double logFactorial(long n){
            if(n<0 || (n-Math.floor(n))!=0)throw new IllegalArgumentException("\nn must be a positive integer\nIs a Gamma funtion [Fmath.gamma(x)] more appropriate?");
            double f = 0.0D;
=====================================================================
Found a 6 line (31 tokens) duplication in the following files: 
Starting at line 144 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 149 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static float log10(float a, int b){
            return (float) (Math.log((double)a)/Math.log((double)b));
        }

        // Square of a double number
        public static double square(double a){
=====================================================================
Found a 18 line (31 tokens) duplication in the following files: 
Starting at line 320 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 343 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

               B[i-i0][j] = A[i][c[j]];
            }
         }
      } catch(ArrayIndexOutOfBoundsException e) {
         throw new ArrayIndexOutOfBoundsException("Submatrix indices");
      }
      return X;
   }

   /** Get a submatrix.
   @param r    Array of row indices.
   @param i0   Initial column index
   @param i1   Final column index
   @return     A(r(:),j0:j1)
   @exception  ArrayIndexOutOfBoundsException Submatrix indices
   */

   public Matrix getMatrix (int[] r, int j0, int j1) {
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 74 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 194 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java

         for (int j = 0; j < nx; j++) {
            double s = 0.0; 
            for (int i = k; i < m; i++) {
               s += QR[i][k]*X[i][j];
=====================================================================
Found a 7 line (31 tokens) duplication in the following files: 
Starting at line 35 of /usr/local/git/PipeCoursework/src/pipe/common/AnalysisSettings.java
Starting at line 59 of /usr/local/git/PipeCoursework/src/pipe/common/AnalysisSettings.java

							final Level usingClientLogging) {
		this.startTime = start;
		this.endTime = end;
		this.timeStep = step;
		this.inversionMethod = method;
		this.numProcessors = processors;
		this.serverAddress = serverAddress;
=====================================================================
Found a 2 line (31 tokens) duplication in the following files: 
Starting at line 115 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPathPoint.java
Starting at line 119 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPathPoint.java

		{
			angle = Math.atan((this.point.x - p2.x) / (p2.y - this.point.y)) + Math.PI;
=====================================================================
Found a 9 line (31 tokens) duplication in the following files: 
Starting at line 2679 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 2817 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

						if (this.forwardsIncidenceMatrix.get(placeNo, transitionNo) <= this.currentMarkingVector[placeNo])
						{
							test--;
						}
					}
					if (test <= 0)
					{
						
						transition.setEnabled(true);
=====================================================================
Found a 5 line (31 tokens) duplication in the following files: 
Starting at line 1844 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1933 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

					final Place current = ((Place) this.placesArray.get(placeNo));
					
					
					System.out.print("\n***");
					if(this.previoulyTaggedPlace.get(firedTagged-1) instanceof Place)
=====================================================================
Found a 3 line (31 tokens) duplication in the following files: 
Starting at line 1818 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1840 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

				final int transitionNo = this.transitionsArray.indexOf(transition);
				for (int placeNo = 0; placeNo < this.placesArray.size(); placeNo++)
				{	
=====================================================================
Found a 24 line (31 tokens) duplication in the following files: 
Starting at line 1632 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1665 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

					this.A[r[i]][j] = X.get(i, j - j0);
				}
			}
		}
		catch (final ArrayIndexOutOfBoundsException e)
		{
			throw new ArrayIndexOutOfBoundsException("Submatrix indices");
		}
	}

// ######################################################################################
	/**
	 * Set a submatrix.
	 * 
	 * @param r
	 *            Array of row indices.
	 * @param c
	 *            Array of column indices.
	 * @param X
	 *            A(r(:),c(:))
	 * @exception ArrayIndexOutOfBoundsException
	 *                Submatrix indices
	 */
	public void setMatrix(final int[] r, final int[] c, final PNMatrix X)
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 1591 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 395 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

   public void setMatrix (int i0, int i1, int j0, int j1, Matrix X) {
      try {
         for (int i = i0; i <= i1; i++) {
            for (int j = j0; j <= j1; j++) {
=====================================================================
Found a 5 line (31 tokens) duplication in the following files: 
Starting at line 1327 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1347 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1379 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		final int[][] C = X.getArray();
		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 897 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 339 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      double[][] B = X.getArray();
      try {
         for (int i = i0; i <= i1; i++) {
            for (int j = 0; j < c.length; j++) {
=====================================================================
Found a 6 line (31 tokens) duplication in the following files: 
Starting at line 511 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1347 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		final PNMatrix X = new PNMatrix(this.m, this.n);

		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
=====================================================================
Found a 5 line (31 tokens) duplication in the following files: 
Starting at line 61 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 221 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

         for (int j = 0; j < n; j++) {
            C[i][j] = A[i][j];
         }
      }
      return C;
=====================================================================
Found a 15 line (31 tokens) duplication in the following files: 
Starting at line 189 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java
Starting at line 273 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

	}

	/**
	 * Method to clone an Arc object
	 */

	@Override
	public PetriNetObject clone()
	{
		return super.clone();
	}

	@Override
	public boolean contains(final int x, final int y)
	{
=====================================================================
Found a 3 line (31 tokens) duplication in the following files: 
Starting at line 24 of /usr/local/git/PipeCoursework/src/pipe/gui/ArcKeyboardEventHandler.java
Starting at line 41 of /usr/local/git/PipeCoursework/src/pipe/gui/ArcKeyboardEventHandler.java

	public void keyReleased(KeyEvent e) {
		if (e.getKeyCode() == KeyEvent.VK_SHIFT) {
			((GuiView)arcBeingDrawn.getParent()).setShiftDown(false);
=====================================================================
Found a 13 line (31 tokens) duplication in the following files: 
Starting at line 71 of /usr/local/git/PipeCoursework/src/pipe/io/StateRecord.java
Starting at line 64 of /usr/local/git/PipeCoursework/src/pipe/io/NewStateRecord.java

		isTangible=ipfile.getChar();
	}
	
	public int[] getState(){
		return state;
	}
	
	public int getID(){
		return stateid;
	}
	
	public boolean getTangible(){
		return isTangible == 'T';
=====================================================================
Found a 16 line (31 tokens) duplication in the following files: 
Starting at line 141 of /usr/local/git/PipeCoursework/src/pipe/io/TransitionRecord.java
Starting at line 165 of /usr/local/git/PipeCoursework/src/pipe/io/NewTransitionRecord.java

	}
	
	/**
	 * equals()
	 * Overrides the Object.equals method. Returns true if and
	 * only if both records have identical elements in their
	 * fromstatearrays and also in their twostatearrays.
	 * 
	 * @param test		The record to be compared with
	 * @return
	 */
	public boolean equals(TransitionRecord test){
		return (fromstate==test.getFromState())&&(tostate==test.getToState());
	}
	
}
=====================================================================
Found a 7 line (31 tokens) duplication in the following files: 
Starting at line 139 of /usr/local/git/PipeCoursework/src/pipe/modules/classification/Classification.java
Starting at line 265 of /usr/local/git/PipeCoursework/src/pipe/modules/classification/Classification.java

  protected boolean simpleNet(DataLayer pnmlData){	  
//    Place[] places=pnmlData.getPlaces();
//	  Place[] places=getPlaces(pnmlData);

	  int placeCount = pnmlData.getPlacesCount();	  
	  if (placeCount != 0)
      for (int placeNo=0; placeNo<placeCount; placeNo++)
=====================================================================
Found a 3 line (31 tokens) duplication in the following files: 
Starting at line 342 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java
Starting at line 441 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

							while (((ch = stdout.read()) != -1) && (ch != 10)) {
								currentLine += (char)ch;
							}
=====================================================================
Found a 7 line (31 tokens) duplication in the following files: 
Starting at line 749 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 762 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

		  	while (arcsTo.hasNext())
		  	{
		  		
		  		final Arc arc = (Arc)arcsTo.next();
		  		if(arc.isTagged())
		  		{
		  			condition += " && ((tagged_location== "+getPlaceIndex(arc.getSource().getId())
=====================================================================
Found a 6 line (31 tokens) duplication in the following files: 
Starting at line 388 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPNNew.java
Starting at line 519 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 542 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java

		result.add("Value");
		
		DecimalFormat f=new DecimalFormat();
		f.setMaximumFractionDigits(5);
		for (int i=0; i<rows; i++) {
			result.add("<A HREF='#" + list.getID(i) + "'>" + list.getID(i).toString().toUpperCase()+ "</A>");
=====================================================================
Found a 5 line (31 tokens) duplication in the following files: 
Starting at line 251 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java
Starting at line 500 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

	private AnalysisSettings getTimeSettings()
	{
    	String startString = startTime.getText();
    	String endString = endTime.getText();
    	Double step = (Double)timeStep.getValue();
=====================================================================
Found a 6 line (31 tokens) duplication in the following files: 
Starting at line 296 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 156 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

				      int exitVal = proc.waitFor();  
				     
				      System.out.println("Process exitValue: " + exitVal); 
				    } catch (Throwable t) { 
				      t.printStackTrace(); 
				    }    
=====================================================================
Found a 3 line (31 tokens) duplication in the following files: 
Starting at line 99 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 112 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

					CDFpoints.add(new Double(values[0]).doubleValue(), new Double(values[1]).doubleValue() );
				}
			}
=====================================================================
Found a 7 line (31 tokens) duplication in the following files: 
Starting at line 586 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 599 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

		  	while (arcsTo.hasNext())
		  	{
		  		
		  		final Arc arc = (Arc)arcsTo.next();
		  		if(arc.isTagged())
		  		{
		  			condition += " && ((tagged_location== "+getPlaceIndex(arc.getSource().getId())
=====================================================================
Found a 5 line (31 tokens) duplication in the following files: 
Starting at line 235 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java
Starting at line 248 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java

	public static QueryData getData(int index) {
	    if(index < 0) 
	    	return null;
	    TabData tab = (TabData)(tabs.get(index));
	    if(tab.queryData == null) 
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 350 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 370 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 377 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java

						ptObject = new PassageTimeDensityNode(	Grid.getModifiedX(startX),
																Grid.getModifiedY(startY));
						ptObject = QueryManager.getData().addPerformanceTreeObject(ptObject);
						addNewPerformanceTreeObject(ptObject);
=====================================================================
Found a 9 line (31 tokens) duplication in the following files: 
Starting at line 136 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 60 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

	public void addNewPetriNetObject(PetriNetObject newObject) {

		if (newObject != null) {

			int l =  newObject.getMouseListeners().length;

			if (l==0) {
				
				if (newObject instanceof Place) {
=====================================================================
Found a 5 line (31 tokens) duplication in the following files: 
Starting at line 197 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 733 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

				myCurrentPoint.setControl1(this.getControlPoint(myPreviousPoint.getPoint(),
																myCurrentPoint.getPoint(),
																myPreviousPoint.getPoint(),
																myCurrentPoint.getPoint()));
				myCurrentPoint.setControl2(this.getControlPoint(myCurrentPoint.getPoint(),
=====================================================================
Found a 3 line (31 tokens) duplication in the following files: 
Starting at line 616 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 105 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

			final double angle2 = ((ArcAngleCompare) arg0).angle;
			return this.angle < angle2 ? -1 : this.angle == angle2 ? 0 : 1;
		}
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 305 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 147 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java

			JScrollPane queryBuilderPane = new JScrollPane(queryButtonsPane);
			URL iconURL = Thread.currentThread().getContextClassLoader().getResource(QueryManager.imgPath + "Select.png");
			ImageIcon icon = new ImageIcon(iconURL);
			int queryPaneHeight = icon.getIconHeight() * 4; 
=====================================================================
Found a 8 line (31 tokens) duplication in the following files: 
Starting at line 280 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 213 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java

		}
		super.validate();
	}

	public void update(final Observable o, final Object diffObj)
	{
		if (diffObj instanceof PerformanceTreeObject && diffObj != null)
		{
=====================================================================
Found a 9 line (31 tokens) duplication in the following files: 
Starting at line 216 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 60 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

	public void addNewPetriNetObject(PetriNetObject newObject) {

		if (newObject != null) {

			int l =  newObject.getMouseListeners().length;

			if (l==0) {
				
				if (newObject instanceof Place) {
=====================================================================
Found a 23 line (31 tokens) duplication in the following files: 
Starting at line 38 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/InIntervalNode.java
Starting at line 37 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/DisconNode.java
Starting at line 36 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ArithCompNode.java

		setNodeType(PTNode.ARITHCOMP);
			
		// only one subnode
		setRequiredArguments(2);
		
		// and nothing else
		setMaxArguments(2);
		
		// set up required arguments of node
		initialiseRequiredChildNodes();
		
		// set return type
		setReturnType(BOOL_TYPE);
		
		// indicate that we want labels on the arcs
		showArcLabels = true;
		
		// set up outgoing arcs (implemented in OperationNode)
		setupOutgoingArcs();
	}
	
	private void initialiseRequiredChildNodes() {
		setRequiredChildNode(arithCompChildNum1, NUM_TYPE);
=====================================================================
Found a 23 line (31 tokens) duplication in the following files: 
Starting at line 37 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ProbInIntervalNode.java
Starting at line 37 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/MomentNode.java
Starting at line 37 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ArithOpNode.java

		setNodeType(PTNode.ARITHOP);
			
		// only one subnode
		setRequiredArguments(2);
		
		// and nothing else
		setMaxArguments(2);
		
		// set up required arguments of node
		initialiseRequiredChildNodes();
		
		// set return type
		setReturnType(NUM_TYPE);
		
		// indicate that we want labels on the arcs
		showArcLabels = true;
		
		// set up outgoing arcs (implemented in OperationNode)
		setupOutgoingArcs();
	}
	
	private void initialiseRequiredChildNodes() {
		setRequiredChildNode(arithOpChildNum1, NUM_TYPE);
=====================================================================
Found a 9 line (31 tokens) duplication in the following files: 
Starting at line 102 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ResultNode.java
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

					description += QueryManager.addColouring("what is ");
				}
				description += child.printTextualRepresentation();
				QueryManager.resetTextColour();
				description += QueryManager.addColouring(" ?");	
			}
			return "''"+ description + "''";
		}
	}
=====================================================================
Found a 11 line (31 tokens) duplication in the following files: 
Starting at line 128 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 486 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java

		String possibleChildReturnType = node.getReturnType();
		String role = arc.getArcLabel();
		String problem;

		// Can we assign the subnode? Have we not reached the limit of
		// assignable subnodes in total?
		if (numberOfChildren() < this.maxArguments)
		{
			// Does the node we're trying to assign as a subnode have a legal
			// return type?
			if (this.requiredChildNodes.containsKey(role))
=====================================================================
Found a 10 line (31 tokens) duplication in the following files: 
Starting at line 256 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateGroupEditor.java
Starting at line 249 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateEditor.java

			 stateDialog.dispose();		 
		 }
	};
	
	
	ActionListener autoSetState = new ActionListener()
	{
		 public void actionPerformed(ActionEvent event)
		 {
			 if (event.getSource() == initialStateBtn)
=====================================================================
Found a 8 line (31 tokens) duplication in the following files: 
Starting at line 46 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java
Starting at line 35 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java

	public StateViewer()
	{
			setLayout(null);
			setOpaque(true);
			setDoubleBuffered(true);
			setAutoscrolls(true);
			setBackground(ELEMENT_FILL_COLOUR);			
			setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));				
=====================================================================
Found a 7 line (31 tokens) duplication in the following files: 
Starting at line 50 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/PerformanceTreeExporter.java
Starting at line 101 of /usr/local/git/PipeCoursework/src/pipe/gui/Export.java

  public static void exportGuiView(GuiView g,int format) {
    boolean gridEnabled=Grid.enabled();
    String filename=null;

    if(g.getComponentCount()==0) return;
    
    if(CreateGui.getFile()!=null) {
=====================================================================
Found a 7 line (31 tokens) duplication in the following files: 
Starting at line 486 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 843 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java

			this.stateLabels.remove(labelToRemove);
			// search through all StatesNodes and see if any has the label
			// assigned to it
			Iterator<PerformanceTreeNode> i = this.treeNodes.iterator();
			while (i.hasNext())
			{
				PerformanceTreeNode node = i.next();
=====================================================================
Found a 9 line (31 tokens) duplication in the following files: 
Starting at line 237 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateEditor.java
Starting at line 256 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateGroupEditor.java

											StateGroupEditor.this.stateDialog.dispose();
										}
									};

	ActionListener	autoSetState	= new ActionListener()
									{
										public void actionPerformed(ActionEvent event)
										{
											if (event.getSource() == StateGroupEditor.this.initialStateButton)
=====================================================================
Found a 7 line (31 tokens) duplication in the following files: 
Starting at line 40 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java
Starting at line 46 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java

	public StateView() {
		setLayout(null);
		setOpaque(true);
		setDoubleBuffered(true);
		setAutoscrolls(true);
		setBackground(ELEMENT_FILL_COLOUR);			
		setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));				
=====================================================================
Found a 9 line (31 tokens) duplication in the following files: 
Starting at line 31 of /usr/local/git/PipeCoursework/test/pipe/gui/GuiFrameTest.java
Starting at line 45 of /usr/local/git/PipeCoursework/test/pipe/common/dataLayer/GuiViewTest.java

		CreateGui.getApp().dispose();
		int lastIndex = CreateGui.getFreeSpace();
		while(lastIndex >= 0){
			CreateGui.removeTab(0); //deletes static ref to net objects
			lastIndex--;			//kept by CreateGui
		}
	}

	public void testOperationOfClickAndDragSelection() throws Exception {
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 1091 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1103 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	    enm = ((Subgraph)this).subgraphElements();
	    elem = null;
	    while(enm.hasMoreElements()) {
		elem = (Element)enm.nextElement();
		elem.delete();
	    }
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 85 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 254 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

		if(subg.currentSelection != null) {
		    if(subg.currentSelection instanceof Element) {
			((Element)(subg.currentSelection)).highlight = 0;
=====================================================================
Found a 2 line (30 tokens) duplication in the following files: 
Starting at line 271 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java
Starting at line 276 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

		    x = (float) (tip.x - (length * Math.cos(theta) + half_width * Math.sin(theta))),
		    y = (float) (tip.y - (length * Math.sin(theta) - half_width * Math.cos(theta)))
=====================================================================
Found a 9 line (30 tokens) duplication in the following files: 
Starting at line 506 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 776 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

		    g2d.setStroke(selectionStyle.stroke);
		    grappaNexus.draw(g2d);
		    g2d.setStroke(GrappaStyle.defaultStroke);
		} else {
		    grappaNexus.draw(g2d);
		}
	    }

	    if(grappaNexus.lstr != null && subgLabels) {
=====================================================================
Found a 15 line (30 tokens) duplication in the following files: 
Starting at line 575 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java
Starting at line 479 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

	    return copy;
	} catch (CloneNotSupportedException e) {
	    // this shouldn't happen, since we are Cloneable
	    throw new InternalError();
	}
    }

    ////////////////////////////////////////////////////////////////////////
    //
    // Shape interface
    //
    ////////////////////////////////////////////////////////////////////////

    public final boolean contains(double x, double y) {
	return(testpath.contains(x, y));
=====================================================================
Found a 2 line (30 tokens) duplication in the following files: 
Starting at line 535 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java
Starting at line 543 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java

		    }
		    if(!(rects[i] == rectsMin.x && rects[i+2] == rectsMax.x) || rects[i+3] != rectsMax.y) {
=====================================================================
Found a 2 line (30 tokens) duplication in the following files: 
Starting at line 451 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java
Starting at line 453 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java

			    path.lineTo((float)(x + rawVertices[i].x), (float)(y - rawVertices[i].y));
			}
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 105 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 168 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

			    cvt.buildFloat(prtbuf, ((Character)args[argn++]).charValue());
			else if (args[argn] instanceof Number)
			    cvt.buildFloat(prtbuf, ((Number)args[argn++]).doubleValue());
=====================================================================
Found a 2 line (30 tokens) duplication in the following files: 
Starting at line 177 of /usr/local/git/PipeCoursework/src/att/grappa/Node.java
Starting at line 228 of /usr/local/git/PipeCoursework/src/att/grappa/Node.java

	for(int i = 0; i < outEdges.size(); i++) {
	    edge = (Edge)(outEdges.elementAt(i));
=====================================================================
Found a 2 line (30 tokens) duplication in the following files: 
Starting at line 171 of /usr/local/git/PipeCoursework/src/att/grappa/Node.java
Starting at line 250 of /usr/local/git/PipeCoursework/src/att/grappa/Node.java

	for(int i = 0; i < inEdges.size(); i++) {
	    edge = (Edge)(inEdges.elementAt(i));
=====================================================================
Found a 2 line (30 tokens) duplication in the following files: 
Starting at line 1850 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1944 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

			    el.setPatch(box.getX(), previous, box.getWidth(), (next = frac * box.getHeight()));
			} else {
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 1394 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1167 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return false;
	return(tags.containsKey(tag));
=====================================================================
Found a 10 line (30 tokens) duplication in the following files: 
Starting at line 618 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 627 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    } else if(value instanceof String && ((String)value).trim().length() == 0 && Attribute.attributeType(getType(),name) != STRING_TYPE) {
		if(prntAttr == null) {
		    //System.err.println("removing graph attr("+name+","+value+") in "+getName());
		    super.setAttribute(name,null);
		    return oldValue;
		} else {
		    //System.err.println("defaulting graph attr("+name+","+value+") in "+getName());
		    return setAttribute(prntAttr);
		}
	    } else {
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 1744 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1767 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static boolean isInfinite(Complex a){
        boolean test = false;
                if(a.real==Double.POSITIVE_INFINITY || a.imag==Double.POSITIVE_INFINITY)test = true;
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 1451 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1461 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static Complex cos(Complex aa ){
                Complex c = new Complex();
                double a = aa.real;
                double b = aa.imag;
                c.real= Math.cos(a)*Fmath.cosh(b);
=====================================================================
Found a 2 line (30 tokens) duplication in the following files: 
Starting at line 299 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 307 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

            for(int i=0; i<aa.length; i++){
                    System.out.print(aa[i].toString() + "  ");
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 2911 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 2922 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            if((x - y)!= 0.0D)throw new IllegalArgumentException("the argument is not an integer");
            boolean test=true;
            y=Math.floor(x/2.0F);
            if((x/2.0D-y) == 0.0D)test=false;
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 2881 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 2892 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            if((x - y)!= 0.0D)throw new IllegalArgumentException("the argument is not an integer");
            boolean test=false;
            y=Math.floor(x/2.0F);
            if((x/2.0D-y) == 0.0D)test=true;
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 1330 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 290 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static void println(Complex[] aa){
            for(int i=0; i<aa.length; i++){
                    System.out.println(aa[i].toString() + "  ");
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 1321 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 306 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static void print(Complex[] aa){
            for(int i=0; i<aa.length; i++){
                    System.out.print(aa[i].toString() + "  ");
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 1313 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 290 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static void println(Complex[] aa){
            for(int i=0; i<aa.length; i++){
                    System.out.println(aa[i].toString() + "  ");
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 1304 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 306 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static void print(Complex[] aa){
            for(int i=0; i<aa.length; i++){
                    System.out.print(aa[i].toString() + "  ");
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 1296 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 290 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static void println(Complex[] aa){
            for(int i=0; i<aa.length; i++){
                    System.out.println(aa[i].toString() + "  ");
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 1287 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 306 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static void print(Complex[] aa){
            for(int i=0; i<aa.length; i++){
                    System.out.print(aa[i].toString() + "  ");
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 1279 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 290 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static void println(Complex[] aa){
            for(int i=0; i<aa.length; i++){
                    System.out.println(aa[i].toString() + "  ");
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 1270 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 306 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static void print(Complex[] aa){
            for(int i=0; i<aa.length; i++){
                    System.out.print(aa[i].toString() + "  ");
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 1262 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 290 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static void println(Complex[] aa){
            for(int i=0; i<aa.length; i++){
                    System.out.println(aa[i].toString() + "  ");
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 1253 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 306 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static void print(Complex[] aa){
            for(int i=0; i<aa.length; i++){
                    System.out.print(aa[i].toString() + "  ");
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 1245 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 290 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static void println(Complex[] aa){
            for(int i=0; i<aa.length; i++){
                    System.out.println(aa[i].toString() + "  ");
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 1236 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 306 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static void print(Complex[] aa){
            for(int i=0; i<aa.length; i++){
                    System.out.print(aa[i].toString() + "  ");
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 798 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 811 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static int nearestElementIndex(int[] array, int value){
            int diff = (int) Math.abs(array[0] - value);
            int nearest = 0;
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 352 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1436 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            int[] bb = new int[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 342 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1409 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            float[] bb = new float[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 332 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1382 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            double[] bb = new double[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 472 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 885 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      double[][] X = A.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 363 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 435 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      try {
         for (int i = 0; i < r.length; i++) {
            for (int j = j0; j <= j1; j++) {
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 340 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 455 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      try {
         for (int i = i0; i <= i1; i++) {
            for (int j = 0; j < c.length; j++) {
=====================================================================
Found a 18 line (30 tokens) duplication in the following files: 
Starting at line 298 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 343 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

               B[i-i0][j] = A[i][c[j]];
            }
         }
      } catch(ArrayIndexOutOfBoundsException e) {
         throw new ArrayIndexOutOfBoundsException("Submatrix indices");
      }
      return X;
   }

   /** Get a submatrix.
   @param r    Array of row indices.
   @param i0   Initial column index
   @param i1   Final column index
   @return     A(r(:),j0:j1)
   @exception  ArrayIndexOutOfBoundsException Submatrix indices
   */

   public Matrix getMatrix (int[] r, int j0, int j1) {
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 111 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 885 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      double[][] X = A.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 107 of /usr/local/git/PipeCoursework/src/pipe/common/StringHelper.java
Starting at line 180 of /usr/local/git/PipeCoursework/src/pipe/common/StringHelper.java

	public static boolean hasSpecifiedLabelsAndReplace(	final String s,
														final StringBuilder replacement,
														final HashMap<String, String> nameToId)
	{
		return StringHelper.hasSpecifiedLabels(s, replacement, nameToId, true);
=====================================================================
Found a 14 line (30 tokens) duplication in the following files: 
Starting at line 639 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java
Starting at line 724 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

		this.myPath.setPointLocation(this.myPath.getEndIndex(), x, y);
		this.updateArrow();
		this.myPath.createPath();
		this.updateBounds();
		this.repaint();
	}

	/**
	 * Set weight
	 * 
	 * @param weightInput
	 *            String value for Arc weight;
	 */
	public void setWeight(final int weightInput)
=====================================================================
Found a 32 line (30 tokens) duplication in the following files: 
Starting at line 109 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java
Starting at line 156 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

		this.setTagged(taggedInput);
	}

	/**
	 * Create Petri-Net Arc object
	 * 
	 * @param startPositionXInput
	 *            Start X-axis Position
	 * @param startPositionYInput
	 *            Start Y-axis Position
	 * @param endPositionXInput
	 *            End X-axis Position
	 * @param endPositionYInput
	 *            End Y-axis Position
	 * @param sourceInput
	 *            Arc source
	 * @param targetInput
	 *            Arc target
	 * @param idInput
	 *            Arc id
	 * @param inputTagged
	 *            TODO
	 * @param colorInput
	 *            Color
	 */
	public Arc(	final double startPositionXInput,
				final double startPositionYInput,
				final double endPositionXInput,
				final double endPositionYInput,
				final PlaceTransitionObject sourceInput,
				final PlaceTransitionObject targetInput,
				final String idInput,
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 650 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java
Starting at line 667 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

			final ArcPathPoint myLastPoint = (ArcPathPoint) this.pathPoints.get(this.getEndIndex() - 1);
			final float distance = (float) this.getMod(myPoint.getPoint(), myLastPoint.getPoint()) /
									Constants.ARC_CONTROL_POINT_CONSTANT;
			myPoint.setControl2((float) (myPoint.getPoint().x + Math.cos(anAngle) * distance),
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 447 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java
Starting at line 775 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

	public void showPoints()
	{
		if (!this.pointLock)
		{
			for (int i = 0; i < this.pathPoints.size(); i++)
			{
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 1626 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 340 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      try {
         for (int i = i0; i <= i1; i++) {
            for (int j = 0; j < c.length; j++) {
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 1132 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1328 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 969 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1659 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		try
		{
			for (int i = 0; i < r.length; i++)
			{
				for (int j = j0; j <= j1; j++)
				{
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 933 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1626 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		try
		{
			for (int i = i0; i <= i1; i++)
			{
				for (int j = 0; j < c.length; j++)
				{
=====================================================================
Found a 24 line (30 tokens) duplication in the following files: 
Starting at line 904 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 975 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

					B[i][j - j0] = this.A[r[i]][j];
				}
			}
		}
		catch (final ArrayIndexOutOfBoundsException e)
		{
			throw new ArrayIndexOutOfBoundsException("Submatrix indices");
		}
		return X;
	}

// ######################################################################################
	/**
	 * Get a submatrix.
	 * 
	 * @param r
	 *            Array of row indices.
	 * @param c
	 *            Array of column indices.
	 * @return A(r(:),c(:))
	 * @exception ArrayIndexOutOfBoundsException
	 *                Submatrix indices
	 */
	public PNMatrix getMatrix(final int[] r, final int[] c)
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 838 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1328 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 644 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 670 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

	public int[] findRemainingNZIndices(final int h)
	{
		final int n = this.getColumnDimension();
		final int[] k = new int[n];
		int count = 0; // increases as we add new indices in the array of ints
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 512 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 532 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		for (int i = 0; i < this.m; i++)
		{
			for (int j = 0; j < this.n; j++)
			{
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 111 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java

      double[][] H = X.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 893 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 898 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

				thisArc.arc.setSourceLocation(	this.positionX + this.centreOffsetLeft() + transformed.x,
												this.positionY + this.centreOffsetTop() + transformed.y);
			}
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 858 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 887 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

		while (arcIterator.hasNext())
		{
			final ArcAngleCompare thisArc = (ArcAngleCompare) arcIterator.next();
			transform.transform(new Point2D.Double(+0.5 * Transition.TRANSITION_WIDTH, current), transformed);
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 826 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 831 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

				thisArc.arc.setSourceLocation(	this.positionX + this.centreOffsetLeft() + transformed.x,
												this.positionY + this.centreOffsetTop() + transformed.y);
			}
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 689 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 775 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

		arcIterator = this.arcAngleList.iterator();
		while (arcIterator.hasNext())
		{
			final ArcAngleCompare thisArc = (ArcAngleCompare) arcIterator.next();
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 74 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/NewSteadyStateSolver.java
Starting at line 144 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LaplaceTransformInverter.java

		double maxNum = 0.0, maxDen = 0.0, sub = 0.0;
		for(int i = 0; i < n; i++) {
			if((sub = Complex.abs(MatrixXsub1[i].minus(MatrixX[i]))) > maxNum) {
=====================================================================
Found a 8 line (30 tokens) duplication in the following files: 
Starting at line 97 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 75 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

		File intermediate = new File(sb.toString());

		if(intermediate.exists()){
			//System.out.println("About to delete " + intermediate);
			if(!intermediate.delete()){
				System.err.println("Could not delete intermediate file.");
			}
		}
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 58 of /usr/local/git/PipeCoursework/src/pipe/gui/AnnotationNoteHandler.java
Starting at line 64 of /usr/local/git/PipeCoursework/src/pipe/gui/AnnotationNoteHandler.java
Starting at line 70 of /usr/local/git/PipeCoursework/src/pipe/gui/AnnotationNoteHandler.java

	public void mouseReleased(MouseEvent e) {
		if ((e.getComponent() == myObject) || !e.getComponent().isEnabled())
			super.mouseReleased(e);
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 23 of /usr/local/git/PipeCoursework/src/pipe/gui/ModuleLoader.java
Starting at line 49 of /usr/local/git/PipeCoursework/src/pipe/gui/ModuleLoader.java

	public static Class importExternalModule(File modFile)
	{
		Class modClass = null;
		if (modFile.exists() && modFile.isFile() && modFile.canRead())
		{
=====================================================================
Found a 14 line (30 tokens) duplication in the following files: 
Starting at line 36 of /usr/local/git/PipeCoursework/src/pipe/io/TransitionRecord.java
Starting at line 46 of /usr/local/git/PipeCoursework/src/pipe/io/NewTransitionRecord.java

	public NewTransitionRecord(Marking from, Marking to, double r) {
		fromstate = from.getIDNum();		
		tostate = to.getIDNum();
		rate = r;
	
	}
	
	/**
	 * Sets up record ready for writing to a file
	 * @param from
	 * @param to
	 * @param r
	 */
	public NewTransitionRecord(int from, int to, double r) {
=====================================================================
Found a 1 line (30 tokens) duplication in the following files: 
Starting at line 328 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 359 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

      if(compareName)      s+="<br>Name= \"" + comparison[i].getSource().getName() + "\"->\""+comparison[i].getTarget().getName()+"\"";
=====================================================================
Found a 1 line (30 tokens) duplication in the following files: 
Starting at line 327 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 349 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

      if(compareName)      s+="<br>Name= \"" + source[i].getSource().getName() + "\"->\""+source[i].getTarget().getName()+"\"";
=====================================================================
Found a 1 line (30 tokens) duplication in the following files: 
Starting at line 320 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 358 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

      if(compareID)        s+="<br>Id= \"" + comparison[i].getSource().getId() + "\"->\""+comparison[i].getTarget().getId()+"\"";
=====================================================================
Found a 1 line (30 tokens) duplication in the following files: 
Starting at line 319 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 348 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

      if(compareID)        s+="<br>Id= \"" + source[i].getSource().getId() + "\"->\""+source[i].getTarget().getId()+"\"";
=====================================================================
Found a 20 line (30 tokens) duplication in the following files: 
Starting at line 47 of /usr/local/git/PipeCoursework/src/pipe/modules/matrices/Matrices.java
Starting at line 92 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 54 of /usr/local/git/PipeCoursework/src/pipe/modules/classification/Classification.java

    contentPane.add(new ButtonBar("Classify",classifyButtonClick));

    // 5 Make window fit contents' preferred size
    guiDialog.pack();
    
    // 6 Move window to the middle of the screen
    guiDialog.setLocationRelativeTo(null);
    
    guiDialog.setVisible(true);
  }

  public String getName() {
    return MODULE_NAME;
  }
  

  /**
	 * Classify button click handler
	 */
  ActionListener classifyButtonClick=new ActionListener() {
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlace.java
Starting at line 376 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java

		g2.translate(PetriNetObject.COMPONENT_DRAW_OFFSET, PetriNetObject.COMPONENT_DRAW_OFFSET);
		g2.transform(scaledXform);

		g2.setStroke(new BasicStroke(1.0f));
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 269 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java
Starting at line 519 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

    			numProcessors = serverPanel.getNumProcessors();

    			// Final check that the values are appropriate
    			if ((startT < endT && startT >= 0) || (startT==1 && endT==1 && stepT==1))
    				return new AnalysisSettings(startT, endT, stepT, method, numProcessors);
=====================================================================
Found a 2 line (30 tokens) duplication in the following files: 
Starting at line 112 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 89 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsReceiver.java

				points.add(new Double(values[0]).doubleValue(), new Double(values[1]).doubleValue() );
			}
=====================================================================
Found a 8 line (30 tokens) duplication in the following files: 
Starting at line 611 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 645 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

		  		condition += " && "+arc.getSource().getId()+" > "+ (arc.getWeight() - 1);
		  	}
		  	return condition;
			
		}
		
		
		private void passageTime()
=====================================================================
Found a 14 line (30 tokens) duplication in the following files: 
Starting at line 95 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 202 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		model();
//		performance();
		passageTime();
	}
	
	private void model() {
		modString += "\\model{\n";
		stateVector();
		initial();
		transitions();
		modString += "}\n\n";		
	}
	
	private void stateVector() {
=====================================================================
Found a 9 line (30 tokens) duplication in the following files: 
Starting at line 46 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/InterruptableSocketIO.java
Starting at line 67 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/AnalysisStatusUpdater.java

		}
		catch (final IOException e)
		{
			EvaluatorLoggingHandler.logger.log(Level.WARNING, "Couldn't cleanup all resources", e);
		}
	}

	public void finish()
	{
=====================================================================
Found a 9 line (30 tokens) duplication in the following files: 
Starting at line 81 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 376 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

			int returnVal = fc.showSaveDialog(resultsPanel);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			
			try {
				fw = new FileWriter(saveFile);
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 132 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 227 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

				menu.add(result);
				menu.show(event.getComponent(), event.getX(), event.getY());
			}
			else
			{
				throw new QueryAnalysisException("Argument node isn't implemented to use node Analyser");
=====================================================================
Found a 8 line (30 tokens) duplication in the following files: 
Starting at line 102 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/StatusIndicator.java
Starting at line 118 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/StatusIndicator.java
Starting at line 134 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/StatusIndicator.java
Starting at line 151 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/StatusIndicator.java

		else if (newStatus.equals(QueryConstants.EVALCOMPLETE))
		{
			// evaluation complete
			if (this.bigCircles)
			{
				this.iconURL = Thread	.currentThread()
										.getContextClassLoader()
										.getResource(QueryManager.imgPath + "Eval-compl.png");
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 61 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java
Starting at line 117 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java

			case ARITHCOMP :
			{
				JMenu menuItem = new JMenu("Set Operation");

				JMenuItem subMenuItem = new JMenuItem(new EditPerformanceTreeNodeAction(this.contentPane,
																						(PerformanceTreeNode) this.myObject,
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 24 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryAction.java
Starting at line 24 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiAction.java

	GuiAction (String name, String tooltip, String keystroke) {
		super(name);
		URL iconURL = Thread.currentThread().getContextClassLoader(
				).getResource(CreateGui.imgPath + name + ".png");
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 380 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 252 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

		addMenuItem(fileMenu,((Action)actions.get("Save as")));

		// File->Export menu
		JMenu exportMenu=new JMenu("Export");
		exportMenu.setIcon(new ImageIcon(
				Thread.currentThread().getContextClassLoader().getResource(
=====================================================================
Found a 34 line (30 tokens) duplication in the following files: 
Starting at line 396 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 485 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

	}

// public double getEndAngle() {
// if (getEndIndex()>0)
// return
// ((ArcPathPoint)pathPoints.get(getEndIndex())).getAngle((ArcPathPoint)(pathPoints.get(getEndIndex()-1)));
// return 0;
// }
//	
// public double getStartAngle() {
// if (getEndIndex()>0)
// return
// ((ArcPathPoint)pathPoints.get(0)).getAngle((ArcPathPoint)(pathPoints.get(1)));
// return 0;
// }

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.awt.Shape#intersects(double, double, double, double)
	 */
	public boolean intersects(double arg0, double arg1, double arg2, double arg3)
	{
		return false;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.awt.Shape#intersects(java.awt.geom.Rectangle2D)
	 */
	public boolean intersects(Rectangle2D r)
	{
		return this.shape.intersects(r);
=====================================================================
Found a 20 line (30 tokens) duplication in the following files: 
Starting at line 380 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 190 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.awt.Shape#contains(double, double, double, double)
	 */
	public boolean contains(double arg0, double arg1, double arg2, double arg3)
	{
		return false;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.awt.Shape#contains(java.awt.geom.Point2D)
	 */
	public boolean contains(Point2D p)
	{
		return this.shape.contains(p);
=====================================================================
Found a 1 line (30 tokens) duplication in the following files: 
Starting at line 119 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPathPoint.java
Starting at line 121 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPathPoint.java

			angle = Math.atan((point.x - p2.point.x) / (p2.point.y - point.y))+Math.PI;
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 75 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPathPoint.java
Starting at line 81 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPathPoint.java

		else {
			realX = getZoomController().getUnzoomedValue(x);
			realY = getZoomController().getUnzoomedValue(y);
			realPoint.setLocation(realX,realY);
		}
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 171 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java
Starting at line 180 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

						acceptableChildNodeTypes.add(acceptableNodeType);
						OutgoingArcInfo arcInfo = new OutgoingArcInfo(	acceptableChildNodeTypes,
																		argumentRequired);
						outgoingArcsInfo.put(argumentNodeName, arcInfo);
					}
					else if (retrievedNodesParentsOptionalChildNodes.get(retrievedNodesIncomingArcRole) instanceof ArrayList)
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 139 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java
Starting at line 237 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

		Iterator<PerformanceTreeNode> i = this.macroNodes.iterator();
		while (i.hasNext())
		{
			PerformanceTreeNode retrievedNode = i.next();
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 135 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java
Starting at line 141 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java

			mapIterator = this.optionalChildNodes.keySet().iterator();
			while (mapIterator.hasNext())
			{
				role = (String) mapIterator.next();
				arcsToDraw++;
			}
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 71 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlace.java
Starting at line 376 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java

		g2.translate(PetriNetObject.COMPONENT_DRAW_OFFSET, PetriNetObject.COMPONENT_DRAW_OFFSET);
		g2.transform(scaledXform);

		g2.setStroke(new BasicStroke(1.0f));
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 163 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java
Starting at line 183 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

			System.out.println("TransformerException thrown in saveMacro()" +
								" : MacroWriter Class : modules.queryeditor.io Package" + " : filename=\"" +
								macroFile.getCanonicalPath() + "\" xslt=\"" + xsltSource.getSystemId() +
								"\" transformer=\"" + transformer.getURIResolver() + "\"");
		}
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 1030 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 591 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

								PerformanceTreeNode childNode = getMacroNode(getMacroArc(outgoingArcID)	.getTargetID());
								String childNodeID = childNode.getId();
								PTNode childNodeType = childNode.getNodeType();
								System.out.println("    linking to a child node with ID " + childNodeID +
													" and type " + childNodeType);
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 1013 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 574 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

					PerformanceTreeNode parentNode = getMacroNode(getMacroArc(macroNode.getIncomingArcID())	.getSourceID());
					String parentNodeID = parentNode.getId();
					PTNode parentNodeType = parentNode.getNodeType();
					System.out.println("  a parent node with ID " + parentNodeID + " and type " +
										parentNodeType);
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 487 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 961 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java

		Iterator<PerformanceTreeNode> i = this.treeNodes.iterator();
		while (i.hasNext())
		{
			PerformanceTreeNode node = i.next();
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 145 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 168 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java

			System.out.println("TransformerException thrown in savePTML()" +
								" : QueryDataWriter Class : modules.queryeditor.io Package" +
								" : filename=\"" + file.getCanonicalPath() + "\" xslt=\"" +
								xsltSource.getSystemId() + "\" transformer=\"" +
								transformer.getURIResolver() + "\"");
		}
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 100 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 478 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java

						String nodeToSerialiseID = nodeToSerialise.getId();
						boolean nodeProcessedAlready = false;
						if ((QueryWriter.nodesProcessed.get(nodeToSerialiseID)).equals("true"))
=====================================================================
Found a 19 line (30 tokens) duplication in the following files: 
Starting at line 50 of /usr/local/git/PipeCoursework/src/pipe/modules/stateSpace/StateSpace.java
Starting at line 92 of /usr/local/git/PipeCoursework/src/pipe/modules/simulation/Simulation.java
Starting at line 47 of /usr/local/git/PipeCoursework/src/pipe/modules/matrices/Matrices.java

    contentPane.add(new ButtonBar("Calculate",calculateButtonClick));   

    // 5 Make window fit contents' preferred size
    guiDialog.pack();
    
    // 6 Move window to the middle of the screen
    guiDialog.setLocationRelativeTo(null);
    
    guiDialog.setVisible(true);
  }

  public String getName() {
    return MODULE_NAME;
  }

  /**
   * Calculate button click handler
   */
  ActionListener calculateButtonClick=new ActionListener() {
=====================================================================
Found a 16 line (30 tokens) duplication in the following files: 
Starting at line 170 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/SteadyState.java
Starting at line 211 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

	    		analyse.setPassageParameters(sourceStateGroups, destinationStateGroups, analysisSetting, new Boolean(clearCacheBox.isSelected()));
	    		analyse.setTabbedPane(tabbedPane);	
	    		
	    		// Start Analyse thread
	    		Thread analyseTrd = new Thread(analyse);    		
	    		analyseTrd.start();
	    		return;
	    		
	    	}
	    	
	    	
	    	progressPane.setText(statusMesg);
	    }

	
	  };
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 76 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlace.java
Starting at line 376 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java

		g2.translate(PetriNetObject.COMPONENT_DRAW_OFFSET, PetriNetObject.COMPONENT_DRAW_OFFSET);
		g2.transform(scaledXform);

		g2.setStroke(new BasicStroke(1.0f));
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
=====================================================================
Found a 10 line (30 tokens) duplication in the following files: 
Starting at line 239 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 81 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java

														int returnVal = fc.showSaveDialog(ResultGraphPlotter.this.resultsPanel);
														if (returnVal == JFileChooser.APPROVE_OPTION)
														{
															saveFile = fc.getSelectedFile();
														}
														else return;

														try
														{
															fw = new FileWriter(saveFile);
=====================================================================
Found a 2 line (30 tokens) duplication in the following files: 
Starting at line 89 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 112 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

					CDFpoints.add(new Double(values[0]).doubleValue(), new Double(values[1]).doubleValue() );
				}
=====================================================================
Found a 10 line (30 tokens) duplication in the following files: 
Starting at line 147 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 184 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java

	    	AnalysisSetting analysisSetting = getTimeSettings();
	    	
	    	// Create Progress Tab and set it as selected	
	    	if (progressPane == null)
	    	{
	    		progressPane = new ProgressBarHTMLPane("Analysis Progress");
	    		tabbedPane.addTab("Progress", progressPane);
	    	}
	    	
	    	if (resultsPanel == null)
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 48 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 56 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

	public TransMod(SimplePlaces splaces, SimpleTransitions stransitions, PerformanceMeasure performanceMeasures, String path, int clientNo)
	{
		places = splaces;
		transitions = stransitions;
		this.performanceMeasures = performanceMeasures;
=====================================================================
Found a 10 line (30 tokens) duplication in the following files: 
Starting at line 23 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/ArithOp.java
Starting at line 22 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/ArithComp.java

		super(PTNode.ARITHCOMP, lhs, rhs);
		this.operation = operation;
	}

	// TODO implement calc
	@Override
	public ValueNodeAnalyser calculate() throws InvalidNodeAnalyserException
	{
		if (this.canEvaluate())
		{
=====================================================================
Found a 2 line (30 tokens) duplication in the following files: 
Starting at line 728 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java
Starting at line 231 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java

		  		modString.append(" = ").append(currArc.placeId).append(" + ").append(currArc.weight).append(";\n");
		  	}
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 476 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java
Starting at line 416 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

		Iterator<SimpleArc> arcsTo = transitions.arcsTo.get(transitionNum).iterator();
		SimpleArc currArc;
		
	  	if (arcsTo.hasNext())
	  	{
	  		currArc = arcsTo.next();
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 264 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java
Starting at line 433 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java

		this.srcStateGrps = new ArrayList<StateGroup>();
		this.targetStateGrps = new ArrayList<StateGroup>();

		this.getChildStates(kids, QueryConstants.pTDChildStartStates, this.srcStateGrps);
=====================================================================
Found a 18 line (30 tokens) duplication in the following files: 
Starting at line 31 of /usr/local/git/PipeCoursework/test/pipe/gui/GuiFrameTest.java
Starting at line 47 of /usr/local/git/PipeCoursework/test/pipe/gui/FunctionalScriptsTest.java

		CreateGui.getApp().dispose();
		int lastIndex = CreateGui.getFreeSpace();
		while(lastIndex >= 0){
			CreateGui.removeTab(0); //deletes static ref to net objects
			lastIndex--;			//kept by CreateGui
		}
	}
	
	/**
	 * Checks whether the PetriNetObject component contains the 
	 * specified colour. This assertion fails if the colour is not found.
	 * @param stepDescription a String describing where in the script this step
	 * occurs. This is output in the test failure message.
	 * @param component The PetriNetObject being tested
	 * @param color The color to search for
	 * @throws Exception
	 */
	public static void assertComponentIsPaintedCorrectColor(
=====================================================================
Found a 8 line (29 tokens) duplication in the following files: 
Starting at line 26 of /usr/local/git/PipeCoursework/RTAResources/DynamicCode/pipe/common/dataLayer/template.java
Starting at line 41 of /usr/local/git/PipeCoursework/RTAResources/DynamicCode/pipe/common/dataLayer/template.java

	public boolean isStartMarking(NewStateRecord marking) {
		int [] p = marking.getState();
		int id = marking.getID();
//#$#ADDSTARTEXPRESSIONHERE
			return true;
		else
			return false;
	}
=====================================================================
Found a 7 line (29 tokens) duplication in the following files: 
Starting at line 444 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 553 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java

		    value = Attribute.specialHandler.convertStringValue(type, name, stringValue, attrtype);
		} else {
		    throw new RuntimeException(Element.typeString(type,true) + " attribute (" + name + ") needs a special handler");
		}
	    }

	    if(value == null && stringValue != null) {
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 1167 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1229 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return false;
	return true;
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 311 of /usr/local/git/PipeCoursework/src/att/grappa/Graph.java
Starting at line 326 of /usr/local/git/PipeCoursework/src/att/grappa/Graph.java

    public Object getGrappaAttributeValue(String key) throws IllegalArgumentException {
	if(key == null) {
	    throw new IllegalArgumentException("key value cannot be null");
	}
	if(grattributes == null) return null;
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 211 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java
Starting at line 233 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

	    buf.append(gpts[ps].x);
	    buf.append(",");
	    buf.append(gpts[ps++].y);
=====================================================================
Found a 7 line (29 tokens) duplication in the following files: 
Starting at line 767 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 880 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

			    g2d.setStroke(selectionStyle.stroke);
			    grappaNexus.draw(g2d);
			    g2d.setStroke(GrappaStyle.defaultStroke);
			} else {
			    grappaNexus.draw(g2d);
			}
		    } else {
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 589 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java
Starting at line 493 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

	return(testpath.contains(x, y));
    }

    public final boolean contains(double x, double y, double width, double height) {
	return(testpath.contains(x, y, width, height));
=====================================================================
Found a 7 line (29 tokens) duplication in the following files: 
Starting at line 612 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java
Starting at line 679 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java
Starting at line 746 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java
Starting at line 763 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java

	   ) {
	    if(styleStringBuffer == null) {
		styleStringBuffer = new StringBuffer();
	    } else {
		styleStringBuffer.append(',');
	    }
	    styleStringBuffer.append("dashPhase(");
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 619 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 624 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java

		    Enumeration enm = ((Subgraph)elem).elements();
		    while(enm.hasMoreElements()) {
			((Element)(enm.nextElement())).highlight = 0;
		    }
		}
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 400 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 437 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

	val = (val < 0) ? -val : val;


	if (val >= 1) {
	    exp = Math.log(val)/LOG10;
=====================================================================
Found a 1 line (29 tokens) duplication in the following files: 
Starting at line 1382 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1396 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(6/*optGraphName*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
=====================================================================
Found a 1 line (29 tokens) duplication in the following files: 
Starting at line 1965 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 2013 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

		    ((Subgraph)el).compStdPatchWork(new GrappaBox(previous, box.getY(), (next = frac * box.getWidth()), box.getHeight()), false);
=====================================================================
Found a 1 line (29 tokens) duplication in the following files: 
Starting at line 1963 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 2011 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

		    ((Subgraph)el).compStdPatchWork(new GrappaBox(box.getX(), previous, box.getWidth(), (next = frac * box.getHeight())), false);
=====================================================================
Found a 1 line (29 tokens) duplication in the following files: 
Starting at line 1852 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 2013 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

		    ((Subgraph)el).compStdPatchWork(new GrappaBox(previous, box.getY(), (next = frac * box.getWidth()), box.getHeight()), false);
=====================================================================
Found a 1 line (29 tokens) duplication in the following files: 
Starting at line 1850 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 2011 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

		    ((Subgraph)el).compStdPatchWork(new GrappaBox(box.getX(), previous, box.getWidth(), (next = frac * box.getHeight())), false);
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 1368 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1215 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return false;
	return true;
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 813 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 2301 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    elems = graphdict.elements();
	    while(elems.hasMoreElements()) {
		((Subgraph)(elems.nextElement())).recurseVectorOfElements(types,retVec,count);
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 703 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 910 of /usr/local/git/PipeCoursework/src/att/grappa/Graph.java

	Element elem = null;
	GraphEnumeration enm = elements();
	while(enm.hasMoreElements()) {
	    elem = enm.nextGraphElement();
	    if(elem.grappaNexus == null) elem.buildShape();
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 984 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1028 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                                c.imag=-a*ratio/denom;
                        }
                        else{
                                ratio=b.real/b.imag;
                                denom=b.real*ratio+b.imag;
                                c.real=a*ratio/denom;
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 140 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 170 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                while (!done){
                        try{
                                ch = System.in.read();
                                if (ch < 0 || (char)ch == '\n' || (char)ch =='\r'){
=====================================================================
Found a 2 line (29 tokens) duplication in the following files: 
Starting at line 2883 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 2913 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            y=Math.floor(x/2.0F);
            if(((double)(x/2.0F)-y) == 0.0D)test=false;
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 181 of /usr/local/git/PipeCoursework/src/jama/CholeskyDecomposition.java
Starting at line 188 of /usr/local/git/PipeCoursework/src/jama/CholeskyDecomposition.java

         for (int j = 0; j < nx; j++) {
            X[k][j] /= L[k][k];
         }
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 74 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 158 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java

            if (QR[k][k] != 0) {
               double s = 0.0;
               for (int i = k; i < m; i++) {
                  s += QR[i][k]*Q[i][j];
=====================================================================
Found a 14 line (29 tokens) duplication in the following files: 
Starting at line 597 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 797 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java

	      if (!error_recovery(true))
		{
		  /* if that fails give up with a fatal syntax error */
		  unrecovered_syntax_error(cur_token);

		  /* just in case that wasn't fatal enough, end parse */
		  done_parsing();
		} else {
		  lhs_sym = (Symbol)stack.peek();
		}
	    }
	}
      return lhs_sym;
    }
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 216 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/AnnotationNote.java
Starting at line 268 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/AnnotationNote.java

		this.note.setText(text);
		this.note.setSize(this.note.getPreferredSize().width, this.note.getPreferredSize().height);
		this.updateBounds();
=====================================================================
Found a 10 line (29 tokens) duplication in the following files: 
Starting at line 517 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 636 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

					if (transitionInput.getId().equals(((Transition) this.transitionsArray.get(i)).getId()))
					{
						unique = false;
					}
				}
			}
			else
			{
				String id = null;
				if (this.transitionsArray != null && this.transitionsArray.size() > 0)
=====================================================================
Found a 10 line (29 tokens) duplication in the following files: 
Starting at line 490 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 2641 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

				this.setChanged();
				this.setMatrixChanged();
				// notifyObservers(pnObject.getBounds());
				this.notifyObservers(pnObject);
			}
		}
		// we reset to null so that the wrong ArrayList can't get added to
		this.changeArrayList = null;
		this.validated = false;
	}
=====================================================================
Found a 10 line (29 tokens) duplication in the following files: 
Starting at line 347 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 517 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

					if (placeInput.getId().equals(((Place) this.placesArray.get(i)).getId()))
					{
						unique = false;
					}
				}
			}
			else
			{
				String id = null;
				if (this.placesArray != null && this.placesArray.size() > 0)
=====================================================================
Found a 9 line (29 tokens) duplication in the following files: 
Starting at line 448 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayerWriter.java
Starting at line 459 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayerWriter.java

			System.out.println("TransformerConfigurationException thrown in savePNML() : dataLayerWriter Class : dataLayer Package: filename=\"" +
								file.getCanonicalPath() +
								"\" xslt=\"" +
								xsltSource.getSystemId() +
								"\" transformer=\"" + transformer.getURIResolver() + "\"");
// System.out.println("==========================================================================================");
// e.printStackTrace(System.err);
		}
		catch (final TransformerException e)
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 201 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayerWriter.java
Starting at line 249 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayerWriter.java
Starting at line 292 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayerWriter.java

			transitionElement.setAttribute("name", (nameInput != null	? nameInput
																		: idInput != null &&
																			idInput.length() > 0 ? idInput
																								: ""));
=====================================================================
Found a 2 line (29 tokens) duplication in the following files: 
Starting at line 1490 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 972 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

            int padding = Math.max(1,width-s.length()); // At _least_ 1 space
            for (int k = 0; k < padding; k++)
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 1047 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1093 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

				positivesArray[i] = 0;
			}

			for (int i = 0; i < n; i++)
			{
				if (A.get(0, i) > 0)
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 121 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 169 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

	public PNMatrix(final int m, final int n, final int s) {
		this.m = m;
		this.n = n;
		this.A = new int[m][n];
		this.matrixChanged = true;
=====================================================================
Found a 2 line (29 tokens) duplication in the following files: 
Starting at line 75 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 79 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

			{
				this.angle = Math.atan((p1.x - p2.x) / (p2.y - p1.y)) + Math.PI;
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 335 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 361 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

									tangible = new Marking(vprime, numtangiblestates-1);
									tangibleStates.enqueue(tangible);
									addExplored(tangible, exploredStates, esoFile,false);
								}
								else{
									int id = identifyState(vprime, exploredStates);
=====================================================================
Found a 9 line (29 tokens) duplication in the following files: 
Starting at line 40 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/myTree.java
Starting at line 74 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/myTree.java

		number_transitions = CMinus.getColumnDimension();
		//Find number of places in net from incidence matrix dimensions
		number_places = CMinus.getRowDimension();
		//Create root of tree by calling Node constructor
		root = new myNode(tree_root, this, 1);
		
		//Call expansion function on root of tree
	
			root.RecursiveExpansion(statespace, timedTrans);
=====================================================================
Found a 14 line (29 tokens) duplication in the following files: 
Starting at line 19 of /usr/local/git/PipeCoursework/src/pipe/gui/ArcHandler.java
Starting at line 21 of /usr/local/git/PipeCoursework/src/pipe/gui/AnnotationNoteHandler.java

		super(contentpane, note);
		enablePopup = true;
	}

	/**
	 *  Creates the popup menu that the user will see when they right
	 *  click on a component
	 */
	public JPopupMenu getPopup(MouseEvent e)
	{
		JPopupMenu popup = super.getPopup(e);	

		JMenuItem menuItem =
			new JMenuItem(new EditAnnotationAction((AnnotationNote)myObject));
=====================================================================
Found a 11 line (29 tokens) duplication in the following files: 
Starting at line 22 of /usr/local/git/PipeCoursework/src/pipe/gui/EditTaggedRateAction.java
Starting at line 26 of /usr/local/git/PipeCoursework/src/pipe/gui/EditRateAction.java

	public EditRateAction(Container contentPane, Component component) 
	{
		this.contentPane = contentPane;		
		selected = (Transition)component;
		//checkbox = new Checkbox("Infinite Server", selected.isInfiniteServer());
	}

	/** Action changing an attribute of the transition */
	public void actionPerformed(ActionEvent e) 
	{
		double currentRate = selected.getRate();
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 125 of /usr/local/git/PipeCoursework/src/pipe/gui/PetriNetObjectHandler.java
Starting at line 59 of /usr/local/git/PipeCoursework/src/pipe/gui/ArcHandler.java

	}
//######################################################################################
	public void mouseDragged(MouseEvent e) {
		switch (CreateGui.getApp().getMode()) {
		case SELECT:
			if (!isDragging) break;
=====================================================================
Found a 8 line (29 tokens) duplication in the following files: 
Starting at line 71 of /usr/local/git/PipeCoursework/src/pipe/gui/PetriNetObjectHandler.java
Starting at line 95 of /usr/local/git/PipeCoursework/src/pipe/gui/PetriNetObjectHandler.java

  public void mouseReleased(MouseEvent e) {
//  	if(GuiFrame.animationMode() == true)
//  		return;
  	// Have to check for popup here as well as on pressed for crossplatform!!
  	if (enablePopup)
  		checkForPopup(e);
  	switch(CreateGui.getApp().getMode()){
  		case SELECT:
=====================================================================
Found a 2 line (29 tokens) duplication in the following files: 
Starting at line 33 of /usr/local/git/PipeCoursework/src/pipe/gui/PlaceHandler.java
Starting at line 38 of /usr/local/git/PipeCoursework/src/pipe/gui/PlaceHandler.java

    else if(!((Place)myObject).isTagged() && ((Place)myObject).getCurrentMarking()>0){
    	menuItem.setText("Make a token tagged");   	
=====================================================================
Found a 14 line (29 tokens) duplication in the following files: 
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/gui/PlaceTransitionObjectHandler.java
Starting at line 21 of /usr/local/git/PipeCoursework/src/pipe/gui/AnnotationNoteHandler.java

		super(contentpane, note);
		enablePopup = true;
	}

	/**
	 *  Creates the popup menu that the user will see when they right
	 *  click on a component
	 */
	public JPopupMenu getPopup(MouseEvent e)
	{
		JPopupMenu popup = super.getPopup(e);	

		JMenuItem menuItem =
			new JMenuItem(new EditAnnotationAction((AnnotationNote)myObject));
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 76 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/ServerList.java
Starting at line 93 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/ServerList.java

		Iterator<ServerInfo> i = serverInfos.iterator();
		while(i.hasNext()) {
			ServerInfo server = i.next();
			String serverAddress = server.getAddress();
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 774 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 808 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

		  		condition += " && "+arc.getSource().getId()+" > "+ (arc.getWeight() - 1);
		  	}
		  	return condition;
			
		}
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 385 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPNNew.java
Starting at line 516 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java

		ArrayList result=new ArrayList();
		// add headers to table
		result.add("");
		for (int i=0;i<cols;i++) result.add("<A HREF='#M" + i + "'>" + list2.getID(i)+ "</A>");
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 241 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPNNew.java
Starting at line 290 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPNNew.java

	protected double[][] tokenDistribution(double[] pi, StateList states){
		int numstates = states.size();
		int numplaces = states.get(0).length;
=====================================================================
Found a 1 line (29 tokens) duplication in the following files: 
Starting at line 89 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsReceiver.java
Starting at line 98 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsReceiver.java

					CDFpoints.add(new Double(values[0]).doubleValue(), new Double(values[1]).doubleValue() );
=====================================================================
Found a 11 line (29 tokens) duplication in the following files: 
Starting at line 217 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java
Starting at line 196 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

	    	else if (!clearCacheBox.isSelected() && analysisSetting == null) 
	    		statusMesg+= "Please check the analysis settings are valid.";
	    	
	    	else if (sourceStateGroups == null)
	    		statusMesg+= "No source states selected!";
	    	
	    	else if (destinationStateGroups == null)
	    		statusMesg+= "No destination states selected!";
	    	
	    	else
	    	{
=====================================================================
Found a 1 line (29 tokens) duplication in the following files: 
Starting at line 99 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 98 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsReceiver.java

					CDFpoints.add(new Double(values[0]).doubleValue(), new Double(values[1]).doubleValue() );
=====================================================================
Found a 12 line (29 tokens) duplication in the following files: 
Starting at line 55 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 104 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

					try{
					  	//modFile = File.createTempFile("dnamaca", ".mod");
					   
						//FileWriter out1 = new FileWriter(modFile);
					  
					    //FileWriter out1 = new FileWriter("/homes/wl107/Desktop/dnamaca/dnamaca/bin/current.mod");
						FileWriter out1 = new FileWriter("current.mod");
					    //FileWriter fstream = new FileWriter("/homes/wl107/Desktop/current.txt");
						FileWriter fstream = new FileWriter("current.txt");
						//FileWriter fstream = new FileWriter("C:/current.txt");
					    BufferedWriter out = new BufferedWriter(fstream);
					    generateMod();
=====================================================================
Found a 7 line (29 tokens) duplication in the following files: 
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 37 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

	  private String modString = "";
	  private String tagPlace = "tagged_location";
	  private int taggedPlaceIndex = -1;
	  final int UNTAGGED = 0;
	  final int ORIGINAL = 1;
	  final int CLONED = 2;
	  private boolean tagged = false;
=====================================================================
Found a 9 line (29 tokens) duplication in the following files: 
Starting at line 81 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/JFCGraphFrame.java

			int returnVal = fc.showSaveDialog(JFCGraphFrame.this);
			if(returnVal == JFileChooser.APPROVE_OPTION) {
				saveFile = fc.getSelectedFile();
			}
			else
				return;
			
			try {
				fw = new FileWriter(saveFile);
=====================================================================
Found a 10 line (29 tokens) duplication in the following files: 
Starting at line 209 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 272 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 308 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

				throw new QueryAnalysisException("Argument Node isn't of type ProbInInterval");
			}
		}
		catch (final QueryAnalysisException e)
		{
			EvaluatorGuiLoggingHandler.logger.log(Level.WARNING, "Couldn't show file text", e);
		}
	}

	public static void setupResult(final QueryOperationNode node, final MouseEvent event)
=====================================================================
Found a 10 line (29 tokens) duplication in the following files: 
Starting at line 138 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 411 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

				throw new QueryAnalysisException("Argument Node isn't of type SSP");
			}
		}
		catch (final QueryAnalysisException e)
		{
			EvaluatorGuiLoggingHandler.logger.log(Level.WARNING, "Couldn't create Histogram", e);
		}
	}

	public static void setupSSPBarChartTab(final QueryOperationNode node)
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 159 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ServerSettingsBasicPanel.java
Starting at line 129 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/ServerPanel.java

		 JPanel panel =  new JPanel(new GridLayout(3, 1));
		 JPanel componentPanel;
		  
		 // Add 'Server Address' panel
		 componentPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 212 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 230 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java

						String msg = QueryManager.addColouring("Deletion in the text query editing mode is not permitted.");
						if (MacroManager.getEditor() == null)
							QueryManager.writeToInfoBox(msg);
						else
							MacroManager.getEditor().writeToInfoBox(msg);
					}
=====================================================================
Found a 9 line (29 tokens) duplication in the following files: 
Starting at line 1215 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 746 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

			int newViewY = (int)(newZoomedY -(thisView.getHeight() * 0.5));
			if (newViewY < 0){
				newViewY = 0;
			}

			thisView.setViewPosition(new Point(newViewX, newViewY));
		}

		private String validatePercent(String selection) {
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 1038 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java
Starting at line 230 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java

						String msg = QueryManager.addColouring("Deletion in the text query editing mode is not permitted.");
						if (MacroManager.getEditor() == null)
							QueryManager.writeToInfoBox(msg);
						else
							MacroManager.getEditor().writeToInfoBox(msg);
					}
=====================================================================
Found a 9 line (29 tokens) duplication in the following files: 
Starting at line 57 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 108 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

	}

	public PerformanceTreeArc(	final double startPositionXInput,
								final double startPositionYInput,
								final double endPositionXInput,
								final double endPositionYInput,
								final PerformanceTreeNode sourceInput,
								final String labelInput,
								final boolean labelsRequired) {
=====================================================================
Found a 7 line (29 tokens) duplication in the following files: 
Starting at line 41 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

	public PerformanceTreeArc(	final double startPositionXInput,
								final double startPositionYInput,
								final double endPositionXInput,
								final double endPositionYInput,
								final PerformanceTreeNode sourceInput,
								final PerformanceTreeNode targetInput,
								final String idInput) {
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 353 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 370 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java

		while (arcIterator.hasNext())
		{
			ArcAngleCompare thisArc = (ArcAngleCompare) arcIterator.next();
			transform.transform(new Point2D.Double(+0.5 * QueryConstants.NODE_WIDTH, current), transformed);
=====================================================================
Found a 9 line (29 tokens) duplication in the following files: 
Starting at line 1439 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 746 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

			int newViewY = (int)(newZoomedY -(thisView.getHeight() * 0.5));
			if (newViewY < 0){
				newViewY = 0;
			}

			thisView.setViewPosition(new Point(newViewX, newViewY));
		}

		private String validatePercent(String selection) {
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 112 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java
Starting at line 401 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java

			ActionListener deleteMacroDefinitionButtonListener = new ActionListener() {		 
				public void actionPerformed(ActionEvent arg0) {
					int[] macroListSelectedIndices = macroList.getSelectedIndices();
					if (macroListSelectedIndices.length > 0) {
=====================================================================
Found a 11 line (29 tokens) duplication in the following files: 
Starting at line 148 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java
Starting at line 361 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

			QueryView queryView = QueryManager.getView();
			if (queryView != null)
			{
				// If this is the first time the arc label is being added then
				// the remove operation will have no affect. However, for
				// subsequent
				// updates to the weight label, the remove will prevent it from
				// being added more than once.
				if (!QueryManager.isEvaluatingQuery())
				{
					queryView.remove(this.arcLabel);
=====================================================================
Found a 2 line (29 tokens) duplication in the following files: 
Starting at line 522 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 511 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java

				QueryView.this.arcBeingModified.setEndPoint(Grid.getModifiedX(e.getX()),
															Grid.getModifiedY(e.getY()),
=====================================================================
Found a 18 line (29 tokens) duplication in the following files: 
Starting at line 199 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 119 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java

	}

	public PerformanceTreeArc getArcBeingModified()
	{
		return this.arcBeingModified;
	}

	public void setArcBeingModified(final PerformanceTreeArc arc)
	{
		this.arcBeingModified = arc;
	}

	/**
	 * This method is responsible for drawing the objects on the canvas
	 * 
	 * @param newObject
	 */
	public void addNewPerformanceTreeObject(final PerformanceTreeObject newObject)
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 838 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 530 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java

	    contentPane.add(getMacroAssignmentManagerPanel(true));
	    JPanel okButtonPanel = new JPanel();
	    okButtonPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
	    JButton okButton = new JButton("OK");
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 127 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 141 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java

		    	popupDialog.dispose();
		    }
	    };    
	    ActionListener[] buttonListeners = {okButtonListener, cancelButtonListener};
	    contentPane.add(new ButtonBar(buttonNames, buttonListeners));
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 487 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 160 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java

			Iterator<PerformanceTreeNode> i = nodes.iterator();
			while (i.hasNext())
			{
				PerformanceTreeNode node = i.next();
				String nodeID = node.getId();
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 230 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 313 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

					it = ((OperationNode) node).getOptionalArcs().iterator();
					while (it.hasNext())
					{
						arc = it.next();
						arc.setSource(node);
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 216 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 300 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

					Iterator<PerformanceTreeArc> it = ((OperationNode) node).getRequiredArcs().iterator();
					while (it.hasNext())
					{
						arc = it.next();
						arc.setSource(node);
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 641 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 135 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

										Node treeNode = treeElements.item(k);
										if (treeNode instanceof Element)
										{
											Element treeElement = (Element) treeNode;
											if ("node".equals(treeElement.getNodeName()))
											{
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 125 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 167 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

										Node actionLabelsNode = actionLabelsElements.item(m);
										if (actionLabelsNode instanceof Element)
										{
											Element actionLabelElement = (Element) actionLabelsNode;
											if ("actionlabel".equals(actionLabelElement.getNodeName()))
											{
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 109 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 151 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

										Node stateLabelsNode = stateLabelsElements.item(l);
										if (stateLabelsNode instanceof Element)
										{
											Element stateLabelElement = (Element) stateLabelsNode;
											if ("statelabel".equals(stateLabelElement.getNodeName()))
											{
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 93 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 135 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroLoader.java

										Node treeNode = treeElements.item(k);
										if (treeNode instanceof Element)
										{
											Element treeElement = (Element) treeNode;
											if ("node".equals(treeElement.getNodeName()))
											{
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 235 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 254 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

			i = nodeOutgoingArcIDs.iterator();
			while (i.hasNext())
			{
				String outgoingArcID = (String) i.next();
				PerformanceTreeArc nodeArc = MacroWriter.macro.getMacroArc(outgoingArcID);
=====================================================================
Found a 9 line (29 tokens) duplication in the following files: 
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 361 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java

		ArrayList<String> actionLabels = new ArrayList<String>();

		// only add the state and action labels to the respective array lists
		// that are actually
		// occurring in the query
		PerformanceTreeNode[] nodesArray = QueryWriter.queryData.getNodes();
		for (int i = 0; i < nodesArray.length; i++)
		{
			PerformanceTreeNode node = nodesArray[i];
=====================================================================
Found a 1 line (29 tokens) duplication in the following files: 
Starting at line 89 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 98 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java

					CDFpoints.add(new Double(values[0]).doubleValue(), new Double(values[1]).doubleValue() );
=====================================================================
Found a 9 line (29 tokens) duplication in the following files: 
Starting at line 134 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 176 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/Passage.java

	ActionListener analyseButtonClick = new ActionListener() 
	{
	    public void actionPerformed(ActionEvent arg0)
	    {
	    	// Returns currently selected source and destination states
	    	ArrayList sourceStateGroups = getSelectedStateGroups(startStatesList);
	    	ArrayList destinationStateGroups = getSelectedStateGroups(endStatesList);
	    	
	    	AnalysisSetting analysisSetting = getTimeSettings();
=====================================================================
Found a 2 line (29 tokens) duplication in the following files: 
Starting at line 237 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java
Starting at line 271 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

	  		for(int j=0; j<arcToTransitions.size(); j++){
	  			if(arcToTransitions.get(j).tagged) {
=====================================================================
Found a 2 line (29 tokens) duplication in the following files: 
Starting at line 222 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 230 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java

		  		modString.append("\t\t\tnext->").append(currArc.placeId);
		  		modString.append(" = ").append(currArc.placeId).append(" + ").append(currArc.weight).append(";\n");
=====================================================================
Found a 7 line (29 tokens) duplication in the following files: 
Starting at line 164 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/DrmaaExecutor.java
Starting at line 189 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/DrmaaExecutor.java

							String.valueOf(numNode.getValue()),
							this.workPath};

					exitInfo = drmSession.submitJob(this.toolPath, null, extraArgs, this.resultsDirPath);
					break;
				}
				case CONVOLUTION :
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 429 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java
Starting at line 435 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java

		catch (final QueryServerException e)
		{
			ServerLoggingHandler.logger.log(Level.WARNING, "Couldn't create mod file for subtree " +
															toBeExecuted.getID(), e);
			toBeExecuted.failed();
		}
=====================================================================
Found a 7 line (29 tokens) duplication in the following files: 
Starting at line 351 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java
Starting at line 387 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java
Starting at line 401 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java

				case STEADYSTATEPROB :
					if (!toBeExecuted.hasModFile())
					{
						this.genModFile(toBeExecuted);
					}
					ex = new DrmaaExecutor(	toBeExecuted,
											this.paths.getDnamacaPath(),
=====================================================================
Found a 7 line (29 tokens) duplication in the following files: 
Starting at line 227 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java
Starting at line 245 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java

		this.getPassageKids(kids);

		final ModFile m = this.addModFile(subtree);

		if (this.places.length > 0)
		{
			this.passageTime();
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 189 of /usr/local/git/PipeCoursework/src/pipe/server/serverCommon/ServerAction.java
Starting at line 477 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java

			this.settings = (AnalysisSettings) this.in.readObject();
			this.places = (SimplePlaces) this.in.readObject();
			this.transitions = (SimpleTransitions) this.in.readObject();
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 358 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 372 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java

		stringValue = GrappaSupport.xlateFontStyle(((Integer)value).intValue());
	    } else {
		throw new IllegalArgumentException("value of attribute \"" + name + "\" is not an instance of Integer");
	    }
	    break;
	case HASHLIST_TYPE:
=====================================================================
Found a 2 line (28 tokens) duplication in the following files: 
Starting at line 410 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java
Starting at line 415 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

	    grpath.lineTo(x = (float)grpts[pts].x, y = (float)grpts[pts++].y);
	    grtestpath.lineTo(x-z, y-z);
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 272 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java
Starting at line 277 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

		    y = (float) (tip.y - (length * Math.sin(theta) - half_width * Math.cos(theta)))
		    );
	testpath.lineTo(x,y);
	path.lineTo(
		    x = (float) tip.x,
=====================================================================
Found a 1 line (28 tokens) duplication in the following files: 
Starting at line 70 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaListener.java
Starting at line 347 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

    public void grappaDragged(Subgraph subg, GrappaPoint currentPt, int currentModifiers, Element pressedElem, GrappaPoint pressedPt, int pressedModifiers, GrappaBox outline, GrappaPanel panel) {
=====================================================================
Found a 18 line (28 tokens) duplication in the following files: 
Starting at line 1223 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 1336 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

	return(intersects(r.getX(), r.getY(), r.getWidth(), r.getHeight()));
    }
   
    ////////////////////////////////////////////////////////////////////////
    //
    // Observer interface
    //
    ////////////////////////////////////////////////////////////////////////

    /**
     * This method is called whenever the observed object is changed.
     * When certain observed attributes (attributes of interest)
     * are changed, this method will update the GrappaNexus as needed.
     *
     * @param obs the Observable must be an Attribute
     * @param arg either a Long giving the update time of the Attribute as returned by System.getTimeInMillis() or it is a two element Object array, where the first element is a new Attribute to be observed in place of that passed via <I>obs</I> and the second element is the update time of this new Attribute.
     */
    public void update(java.util.Observable obs, Object arg) {
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 506 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 767 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

		    g2d.setStroke(deletionStyle.stroke);
		    grappaNexus.draw(g2d);
		    g2d.setStroke(GrappaStyle.defaultStroke);
		} else {
		    grappaNexus.draw(g2d);
		}
	    } else if((subg.highlight&SELECTION_MASK) == SELECTION_MASK) {
=====================================================================
Found a 2 line (28 tokens) duplication in the following files: 
Starting at line 58 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPoint.java
Starting at line 79 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaBox.java

	    this.x = coords[0];
	    this.y = (Grappa.negateStringYCoord?-coords[1]:coords[1]);
=====================================================================
Found a 2 line (28 tokens) duplication in the following files: 
Starting at line 460 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java
Starting at line 473 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java

			    path.curveTo(
					 (float)(x + tmpVertices[i].x), (float)(y - tmpVertices[i].y),
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 787 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java
Starting at line 812 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java
Starting at line 837 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java
Starting at line 862 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java

	    )
	   ) {
	    if(styleStringBuffer == null) {
		styleStringBuffer = new StringBuffer();
	    } else {
		styleStringBuffer.append(',');
	    }
	    if(invisFlag) {
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 227 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 263 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

			if ((n+1) < flen) {
			    if (
				GrappaSupport.isdigit(format[n])
				&&
				GrappaSupport.isdigit(format[n+1])
=====================================================================
Found a 2 line (28 tokens) duplication in the following files: 
Starting at line 1488 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1553 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
=====================================================================
Found a 2 line (28 tokens) duplication in the following files: 
Starting at line 1946 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1965 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

			    p = new GrappaBox(previous, box.getY(), (next = frac * box.getWidth()), box.getHeight());
			}
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 310 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 437 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 558 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    attributes.put(attr.getName(),crntAttr = attr);
	    //System.err.println("Adding passthru1 graph attr("+attr.getName()+","+attr.getValue()+") to "+getName());
	    // it's a pass down, so no need to set observers
	} else {
	    oldValue = crntAttr.getValue();
	    crntAttr.setChanged(); // so notifyObservers is sure to be called
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 1738 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1774 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public boolean isInfinite(){
                boolean test = false;
                if(this.real==Double.POSITIVE_INFINITY || this.imag==Double.POSITIVE_INFINITY)test = true;
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 1584 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1593 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                c=a.plus(c);
                c=Complex.minusJay().times(Complex.log(c));
                return c;
        }

        // Inverse tangent of a Complex number
        public static Complex atan(Complex a ){
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 2491 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 2507 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double acoth(double a){
            double sgn = 1.0D;
            if(a<0.0D){
                sgn = -1.0D;
                a = -a;
            }
            if(a<1.0D) throw new IllegalArgumentException("acoth real number argument (" + sgn*a + ") must be <= -1 or >= 1");
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 1347 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1436 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            int[] bb = new int[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 1206 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1436 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            int[] bb = new int[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 1176 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1382 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            double[] bb = new double[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 1166 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1436 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            int[] bb = new int[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 1074 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1382 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            double[] bb = new double[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
=====================================================================
Found a 10 line (28 tokens) duplication in the following files: 
Starting at line 849 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 921 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                if(diff1>=0 && diff1<diff0 ){
                    diff0 = diff1;
                    nearest = array[i];
                }
            }
            return nearest;
        }

        // finds the index of nearest higher element value in array to the argument value
        public static int nearestHigherElementIndex(int[] array, int value){
=====================================================================
Found a 10 line (28 tokens) duplication in the following files: 
Starting at line 678 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 750 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                if(diff1>=0.0D && diff1<diff0 ){
                    diff0 = diff1;
                    nearest = array[i];
                }
            }
            return nearest;
        }

        // finds the index of nearest higher element value in array to the argument value
        public static int nearestHigherElementIndex(double[] array, double value){
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 432 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1382 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            double[] bb = new double[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 412 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1436 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            int[] bb = new int[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 382 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1382 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            double[] bb = new double[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
=====================================================================
Found a 1 line (28 tokens) duplication in the following files: 
Starting at line 732 of /usr/local/git/PipeCoursework/src/jama/EigenvalueDecomposition.java
Starting at line 796 of /usr/local/git/PipeCoursework/src/jama/EigenvalueDecomposition.java

                     vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 472 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 968 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      output.println();  // start on new line.
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 17 line (28 tokens) duplication in the following files: 
Starting at line 399 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 418 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

               A[r[i]][c[j]] = X.get(i,j);
            }
         }
      } catch(ArrayIndexOutOfBoundsException e) {
         throw new ArrayIndexOutOfBoundsException("Submatrix indices");
      }
   }

   /** Set a submatrix.
   @param r    Array of row indices.
   @param j0   Initial column index
   @param j1   Final column index
   @param X    A(r(:),j0:j1)
   @exception  ArrayIndexOutOfBoundsException Submatrix indices
   */

   public void setMatrix (int[] r, int j0, int j1, Matrix X) {
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 295 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 396 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      try {
         for (int i = i0; i <= i1; i++) {
            for (int j = j0; j <= j1; j++) {
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 219 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 233 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      double[] vals = new double[m*n];
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 190 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 968 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      output.println();  // start on new line.
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 98 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 233 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      double[] vals = new double[m*n];
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 111 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 968 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      output.println();  // start on new line.
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 654 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java
Starting at line 671 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

								(float) (myPoint.getPoint().y + Math.sin(anAngle) * distance));

			myPoint = (ArcPathPoint) this.pathPoints.get(1);
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 189 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPathPoint.java
Starting at line 568 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

	public void paintComponent(final Graphics g)
	{
		super.paintComponent(g);
		final Graphics2D g2 = (Graphics2D) g;
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 2616 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 2630 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

					attached.removeToArc((Arc) pnObject);
					if (attached instanceof Transition)
					{
						((Transition) attached).removeArcCompareObject((Arc) pnObject);
					}
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 2190 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 2303 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

		final Place[] returnArray = new Place[this.placesArray.size()];

		for (int i = 0; i < this.placesArray.size(); i++)
		{
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 1304 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1487 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

			angle = Integer.valueOf(nameAngle).intValue();
		}
		// Pete: Removed colour properties
		positionXInput += Constants.PLACE_TRANSITION_HEIGHT / 2 - 1;
		positionYInput += Constants.PLACE_TRANSITION_HEIGHT / 2 - 1;
		this.setMatrixChanged();

		return new Transition(	positionXInput,
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 770 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 775 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

			heightInput = Integer.valueOf(heightTemp).intValue() * (false ? this.DISPLAY_SCALE_FACTORY : 1) +
							(false ? this.DISPLAY_SHIFT_FACTORY : 1);
		}
		if (borderTemp.length() > 0)
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 758 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 764 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

			positionYInput = Integer.valueOf(positionYTempStorage).intValue() *
								(false ? this.DISPLAY_SCALE_FACTORX : 1) +
								(false ? this.DISPLAY_SHIFT_FACTORX : 1);
		}
		if (widthTemp.length() > 0)
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 424 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 442 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

				((ArrayList) this.arcsMap.get(target)).add(arcInput);
			}
			else
			{
// System.out.println("creating new arc list2");
				newList = new ArrayList();
				newList.add(arcInput);
				this.arcsMap.put(target, newList);
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 30 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/FiringTaggedButton.java
Starting at line 58 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPathPoint.java

		if (CreateGui.getApp() != null)
		{
			this.addZoomController(CreateGui.getView().getZoomController());
		}
		this.setPointLocation(0, 0);
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/FiringTaggedButton.java
Starting at line 198 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/AnnotationNote.java

	public AnnotationNote(final int x, final int y) {
		if (CreateGui.getApp() != null)
		{
			this.addZoomController(CreateGui.getView().getZoomController());
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 1195 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 112 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java

      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            if (i >= j) {
=====================================================================
Found a 24 line (28 tokens) duplication in the following files: 
Starting at line 939 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1008 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

					B[i][j] = this.A[r[i]][c[j]];
				}
			}
		}
		catch (final ArrayIndexOutOfBoundsException e)
		{
			throw new ArrayIndexOutOfBoundsException("Submatrix indices");
		}
		return X;
	}

// ######################################################################################
	/**
	 * For row rowNo of the matrix received return the column indices of all the
	 * negative elements
	 * 
	 * @param rowNo
	 *            row iside the Matrix to check for -ve elements
	 * @return Integer array of indices of negative elements.
	 * @exception ArrayIndexOutOfBoundsException
	 *                Submatrix indices
	 */

	public int[] getNegativeIndices(final int rowNo)
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 898 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1593 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		try
		{
			for (int i = i0; i <= i1; i++)
			{
				for (int j = j0; j <= j1; j++)
				{
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 722 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 112 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java

      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
            if (i >= j) {
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 173 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1193 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		final boolean isZero = true;

		for (int i = 0; i < m; i++)
		{
			for (int j = 0; j < n; j++)
			{
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 968 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      output.println();  // start on new line.
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 474 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PlaceTransitionObject.java
Starting at line 127 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/FiringTaggedButton.java

								(int) (DIAMETER * scaleFactor / 100.0));
		this.bounds.grow(PetriNetObject.COMPONENT_DRAW_OFFSET, PetriNetObject.COMPONENT_DRAW_OFFSET);
		this.setBounds(this.bounds);
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 84 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PlaceTransitionObject.java
Starting at line 58 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPathPoint.java

		if (CreateGui.getApp() != null)
		{
			this.addZoomController(CreateGui.getView().getZoomController());
		}
		this.setPointLocation(0, 0);
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 252 of /usr/local/git/PipeCoursework/src/pipe/common/queryresult/TextFileResultWrapper.java
Starting at line 294 of /usr/local/git/PipeCoursework/src/pipe/common/queryresult/TextFileResultWrapper.java

				final Scanner s2 = new Scanner(temp);

				final double x = s2.hasNextDouble() ? s2.nextDouble() : StringHelper.SENTINEL;
=====================================================================
Found a 34 line (28 tokens) duplication in the following files: 
Starting at line 773 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 202 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

					newTransition.write(dataBuf);
					//System.out.println("From: " + from.getIDNum() + ":(" + from + ")" + " To: " + current.getTo() + " via " + current.transitionNo+ " Rate: " + current.getRate() + " Tan: " + from.getisTangible());
				} catch (IOException e){
					System.err.println("IO error when writing transitions to file.");
					throw new ImmediateAbortException();
				}	
				
			}
			//Don't need this next bit as always want to write transition number
			/* else {
				newTransition = new NewTransitionRecord(from.getIDNum(), current.getTo(), current.getRate());
				try{
					newTransition.write(dataBuf);
					//System.out.println("From: " + from.getIDNum() + ":(" + from + ")" + " To: " + current.getTo() + " Rate: " + current.getRate());
				} catch (IOException e){
					System.err.println("IO error when writing transitions to file.");
					throw new ImmediateAbortException();
				}			

			}*/
		}
	}
	
	/**
	 * addExplored()
	 * Adds a compressed version of a tangible state to the
	 * explored states hashtable and also writes the full
	 * state to a file for later use.
	 * 
	 * @param newstate		The explored state to be added
	 * @param es			A reference to the hashtable
	 * @param opfile		The file to write the state to
	 */
	private static void addExplored(Marking newstate, LinkedList[] es, MappedByteBuffer opfile, boolean vanishingStates){
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 132 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 137 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

					addExplored(mkprime, exploredStates, esoBuf, true);//do the other necessaries
				}
				else {//We've already explored this state
					int id = identifyState(sprime, exploredStates);//Check thats definite
					if(id==-1)
						throw new ImmediateAbortException("Could not identify previously explored tangible state.");
=====================================================================
Found a 2 line (28 tokens) duplication in the following files: 
Starting at line 58 of /usr/local/git/PipeCoursework/src/pipe/gui/AnnotationNoteHandler.java
Starting at line 75 of /usr/local/git/PipeCoursework/src/pipe/gui/AnnotationNoteHandler.java

	public void mouseClicked(MouseEvent e) {
		if ((e.getComponent() == myObject) || !e.getComponent().isEnabled()){
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 665 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java
Starting at line 676 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java
Starting at line 826 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java
Starting at line 884 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

		ValidateAction(String name, String tooltip, String keystroke) {
			super(name, tooltip, keystroke);
		}
		
		public void actionPerformed(ActionEvent e){
=====================================================================
Found a 10 line (28 tokens) duplication in the following files: 
Starting at line 36 of /usr/local/git/PipeCoursework/src/pipe/gui/PlaceTransitionObjectHandler.java
Starting at line 44 of /usr/local/git/PipeCoursework/src/pipe/gui/ArcHandler.java

	    menuItem.setText("Split Arc Segment");
	    popup.add(menuItem);
		
		return popup;
	}
//###################################################################################### 
	public void mousePressed(MouseEvent e)
	{
		super.mousePressed(e);
		if (e.getClickCount() == 2)
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/io/TransitionRecord.java
Starting at line 98 of /usr/local/git/PipeCoursework/src/pipe/io/TransitionRecord.java

	public boolean read1(RandomAccessFile inputfile) throws IOException{
		fromstate = inputfile.readInt();
		tostate = inputfile.readInt();
		rate = inputfile.readDouble();
=====================================================================
Found a 14 line (28 tokens) duplication in the following files: 
Starting at line 50 of /usr/local/git/PipeCoursework/src/pipe/io/TransitionRecord.java
Starting at line 70 of /usr/local/git/PipeCoursework/src/pipe/io/NewTransitionRecord.java

	public NewTransitionRecord(int from, int to, double r, int t) {
		fromstate = from;		
		tostate = to;
		rate = r;
		transition = t;
	}
	
	/**
	 * Sets up blank record 
	 * @param from
	 * @param to
	 * @param r
	 */
	public NewTransitionRecord(){
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 128 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 201 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 274 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

  private String compareArcs(Arc[] source, Arc[] comparison, boolean compareName, boolean compareID, boolean compareWeighting) {
    int i = 0, j = 0, k = -1;
    String s;
    ArrayList results=new ArrayList(); // arraylist for creating the table 
    
    results.add("Source arc");
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 508 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 519 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

			  		String currentId = arc.getTarget().getId();
			  		int placeNo = this.getPlaceIndex(currentId);
			  		if( incidenceMatrix!=null && incidenceMatrix[placeNo][i]>0  )
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 438 of /usr/local/git/PipeCoursework/src/pipe/modules/invariantAnalysis/InvariantAnalysis.java
Starting at line 522 of /usr/local/git/PipeCoursework/src/pipe/modules/invariantAnalysis/InvariantAnalysis.java

    int setLength = pSet.length;

    for (int i = 0; i < setLength; i++){
      if (pSet[i] != 0) {
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 345 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 356 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

			  		String currentId = arc.getTarget().getId();
			  		int placeNo = this.getPlaceIndex(currentId);
			  		if( incidenceMatrix!=null && incidenceMatrix[placeNo][i]>0  )
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 80 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 118 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

					    out1.write(modString);
					    out1.close();
					    
					  }
				  catch (Exception e)
				  {
					    System.err.println("Error: " + e.getMessage());
				  }
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 147 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 139 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultBarChartPlotter.java

	public ResultBarChartPlotter(final Dimension prefferedSize) {
		super(prefferedSize);
	}

	@Override
	public JComponent getChart(final ResultWrapper wrapper) throws QueryAnalysisException
	{
		if (wrapper instanceof FilePointsResultWrapper)
=====================================================================
Found a 12 line (28 tokens) duplication in the following files: 
Starting at line 76 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 355 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

						ResultProvider.setupSSP(node, event);
						break;
					}
					case ININTERVAL :
					case DISCON :
					case ARITHCOMP :
					case ARITHOP :
					case NEGATION :
					case BOOL :
					case NUM :
					case RANGE :
					{
=====================================================================
Found a 9 line (28 tokens) duplication in the following files: 
Starting at line 382 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java
Starting at line 464 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java

									{
										MacroManager.getEditor().updateNode(this.node);
									}

									inputValid = true;
								}
								else
								{
									JOptionPane.showMessageDialog(	this.contentPane,
=====================================================================
Found a 10 line (28 tokens) duplication in the following files: 
Starting at line 43 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeArcHandler.java
Starting at line 36 of /usr/local/git/PipeCoursework/src/pipe/gui/PlaceTransitionObjectHandler.java

  	menuItem.setText("Edit label");
  	popup.add(menuItem);
  	
  	return popup;
  }
  
  public void mousePressed(MouseEvent e) {
  	super.mousePressed(e);
  	 // Avoid creating arcs with a right-click or middle-click
    if (e.getButton() != MouseEvent.BUTTON1) return;
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 43 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeArcPathPointHandler.java
Starting at line 35 of /usr/local/git/PipeCoursework/src/pipe/gui/ArcPathPointHandler.java

			if (((ArcPathPoint)myObject).getPointType() == ArcPathPoint.STRAIGHT)
				menuItem.setText("Change to Curved");
			else
				menuItem.setText("Change to Straight");
			popup.add(menuItem);
			
			menuItem = new JMenuItem(new SplitArcPointAction((ArcPathPoint)myObject));
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 44 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeObjectHandler.java
Starting at line 25 of /usr/local/git/PipeCoursework/src/pipe/gui/PetriNetObjectHandler.java

  protected PetriNetObject myObject = null;
  protected static boolean justSelected = false;	// set to true on press, and false on release;
  protected boolean isDragging = false;
  protected boolean enablePopup = false;
  protected Point dragInit = new Point();
  
  // constructor passing in all required objects
  public PetriNetObjectHandler(Container contentpane, PetriNetObject obj) {
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 1224 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 754 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

		private String validatePercent(String selection) {

			try{
				String toTest=selection;
				
				if(selection.endsWith("%")){
					toTest=selection.substring(0, (selection.length())-1);
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 1174 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 703 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

				if(actionName.equals("Zoom out")){
					zoomer.zoomOut();
					updateZoomCombo();
				}

				else{
					if(actionName.equals("Zoom"))
						selection = (String)zoomComboBox.getSelectedItem();
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 370 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 242 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

		menuBar=new JMenuBar();

		//File menu
		JMenu fileMenu = new JMenu("File");
		fileMenu.setMnemonic('F');		
		addMenuItem(fileMenu,((Action)actions.get("New")));
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 535 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 288 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

				if (dragStart.y > e.getY()){
					offScreen.translate(0, viewer.getHeight());
				}
				offScreen.translate(dragStart.x - e.getX(), dragStart.y - e.getY());
=====================================================================
Found a 10 line (28 tokens) duplication in the following files: 
Starting at line 311 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java
Starting at line 474 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java

																	+ "consisting of letters and possibly numbers.",
																	"Invalid entry",
																	JOptionPane.ERROR_MESSAGE);
								}
							}
						}
						catch (Exception exc)
						{
							if (input != null)
								JOptionPane.showMessageDialog(	this.contentPane,
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 528 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 635 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

	}

	public void setSourceLocation(final double x, final double y)
	{
		this.myPath.setPointLocation(0, x, y);
		this.updateArrow();
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 26 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPathPoint.java
Starting at line 29 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPathPoint.java

	public static final boolean		STRAIGHT			= false;
	public static final boolean		CURVED				= true;
	public static final int			SIZE				= 4;
	public static final int			SIZE_OFFSET			= 4;
=====================================================================
Found a 1 line (28 tokens) duplication in the following files: 
Starting at line 629 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 630 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 76 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

				this.angle = Math.atan((p1.x - p2.x) / (p2.y - p1.y));
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 219 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 452 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

		if (this.selected && !PerformanceTreeObject.ignoreSelection)
			g2.setPaint(QueryConstants.SELECTION_LINE_COLOUR);
		else g2.setPaint(QueryConstants.ELEMENT_LINE_COLOUR);
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 208 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 433 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

		g2.translate(PetriNetObject.COMPONENT_DRAW_OFFSET, PetriNetObject.COMPONENT_DRAW_OFFSET);
		g2.transform(scaledXform);
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

		if (this.selected && !PetriNetObject.ignoreSelection)
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 1448 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 754 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

		private String validatePercent(String selection) {

			try{
				String toTest=selection;
				
				if(selection.endsWith("%")){
					toTest=selection.substring(0, (selection.length())-1);
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 1398 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 703 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

				if(actionName.equals("Zoom out")){
					zoomer.zoomOut();
					updateZoomCombo();
				}

				else{
					if(actionName.equals("Zoom"))
						selection = (String)zoomComboBox.getSelectedItem();
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 391 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 207 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

		this.actions.put("EPS", new FileAction("EPS", "Export query to EPS format", ""));
		this.actions.put("Print", new FileAction("Print", "Print query", "ctrl P"));
		this.actions.put("Exit", new FileAction("Exit", "Close query editor", "alt F4"));
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 251 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 252 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

		addMenuItem(fileMenu,((Action)actions.get("Save as")));

		// File->Export menu
		JMenu exportMenu=new JMenu("Export");
		exportMenu.setIcon(new ImageIcon(
				Thread.currentThread().getContextClassLoader().getResource(
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 182 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 219 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java

			this.macroDescriptionTextField.setText(this.activeMacro.getDescription());

			// set selection mode so that objects can be moved around
			MacroManager.setMode(QueryConstants.SELECT);
			((QueryAction) this.actions.get("Draw Select")).setSelected(true);
		}
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 546 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 288 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

				if (dragStart.y > e.getY()){
					offScreen.translate(0, viewer.getHeight());
				}
				offScreen.translate(dragStart.x - e.getX(), dragStart.y - e.getY());
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/MomentNode.java
Starting at line 78 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/DistributionNode.java

			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();	
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 123 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PercentileNode.java
Starting at line 136 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PercentileNode.java

			description.append(QueryManager.addColouring(op));
			description.append(QueryManager.addColouring(" an undefined passage time density / distribution"));
			QueryManager.colourDown();
		}
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 84 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ProbInStatesNode.java
Starting at line 87 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PercentileNode.java

			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();
=====================================================================
Found a 9 line (28 tokens) duplication in the following files: 
Starting at line 29 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ResultNode.java
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PercentileNode.java

	public PercentileNode(final double positionXInput, final double positionYInput) {
		super(positionXInput, positionYInput);
		initialiseNode();
	}

	private void initialiseNode()
	{
		// set name and node type
		setName("PercentileNode");
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 97 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SequentialNode.java
Starting at line 84 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ProbInStatesNode.java

			Iterator<PerformanceTreeNode> i = children.iterator();
			while (i.hasNext()) {
				PerformanceTreeNode child = i.next();	
=====================================================================
Found a 9 line (28 tokens) duplication in the following files: 
Starting at line 31 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 29 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ResultNode.java

	public ResultNode(final double positionXInput, final double positionYInput) {
		super(positionXInput, positionYInput);
		initialiseNode();
	}

	private void initialiseNode()
	{
		// set name and node type
		setName("ResultNode");
=====================================================================
Found a 10 line (28 tokens) duplication in the following files: 
Starting at line 35 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java
Starting at line 32 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ConditionPlaceHandler.java

	protected JDialog parent = null; 
	protected ConditionPlace place = null;
	
	protected JDialog conditionEdit;
	JComboBox operaterCombo;
	JButton okButton, cancelButton;
	JTextField conditionValue;
	
	public ConditionPlaceHandler(JDialog parentDialog, ConditionPlace place)
	{
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 239 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateGroupEditor.java
Starting at line 1013 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java

												JOptionPane.showMessageDialog(	MacroManager.getEditor()
																							.getContentPane(),
																				msg,
																				"Warning",
																				JOptionPane.ERROR_MESSAGE);
											}
										}
										else if (event.getSource() == MacroEditor.this.cancelButton)
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 121 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateGroupEditor.java
Starting at line 337 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java

		macroButtonsPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
		this.okButton = new JButton("OK");
		this.okButton.addActionListener(this.saveMacro);
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 122 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 843 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java

		ActionListener okButtonListener = new ActionListener()
		{
			public void actionPerformed(ActionEvent arg0)
			{
				StateLabelManager.clearAll();
				StateLabelManager.popupDialog.dispose();
			}
		};
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 81 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 110 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java

	    contentPane.add(getMacroAssignmentManagerPanel(false));
	    String[] buttonNames = {"OK", "Cancel"};
	    ActionListener okButtonListener = new ActionListener() {		 
	    	public void actionPerformed(ActionEvent arg0) {
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 307 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 365 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

					Iterator it = ((OperationNode) nodeToDelete).getOutgoingArcIDs().iterator();
					while (it.hasNext())
					{
						String outgoingArcID = (String) it.next();
=====================================================================
Found a 9 line (28 tokens) duplication in the following files: 
Starting at line 147 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 448 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayerWriter.java

			System.out.println("DOMException thrown in savePNML() : dataLayerWriter Class : dataLayer Package: filename=\"" +
								file.getCanonicalPath() +
								"\" xslt=\"" +
								xsltSource.getSystemId() +
								"\" transformer=\"" + transformer.getURIResolver() + "\"");
// System.out.println("=====================================================================");
// e.printStackTrace(System.err);
		}
		catch (final TransformerConfigurationException e)
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 245 of /usr/local/git/PipeCoursework/src/pipe/modules/reachability/ReachabilityGraphGenerator.java
Starting at line 169 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java

		this.setIconImage(new ImageIcon(Thread	.currentThread()
												.getContextClassLoader()
												.getResource(CreateGui.imgPath + "icon.png")).getImage());
=====================================================================
Found a 9 line (28 tokens) duplication in the following files: 
Starting at line 32 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 35 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java

	protected JDialog parentDialog = null; 
	protected ConditionPlace place = null;

	protected JDialog conditionEdit;
	JComboBox operaterCombo;
	JButton okButton, cancelButton;
	JTextField conditionValue;

	public ConditionPlaceHandler(JDialog parentDialog, ConditionPlace place) {
=====================================================================
Found a 14 line (28 tokens) duplication in the following files: 
Starting at line 266 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 435 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

	  			condition += " && " + currArc.placeId + " > " + (currArc.weight - 1);
	  	}
	  	
	  	return condition; 	
	}

	
	/**
	 * This method is to limit the number of states that are generated
	 * to a maximum of 2 million.This ensures infintie state models terminate 
	 */
	private void maxStates()
	{
		modString += "\\generation{\n\t\\maxstates{20000000}\n\n}";
=====================================================================
Found a 2 line (28 tokens) duplication in the following files: 
Starting at line 187 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 231 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

		  	LinkedList<SimpleArc> arcToTransitions = transitions.arcsTo.get(i);
		  	LinkedList<SimpleArc> arcFromTransitions = transitions.arcsFrom.get(i);
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 352 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java
Starting at line 374 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java

						if (!toBeExecuted.hasModFile())
						{
							this.genModFile(toBeExecuted);
						}
						ex = new DrmaaExecutor(	toBeExecuted,
												this.paths.getMomaPath(),
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 25 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/SimpleAnalysisExecutor.java
Starting at line 24 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/MomentSSPExecutor.java

	public MomentSSPExecutor(final ParentSubtree subtree, final ResultSender resultSender) {
		super(subtree, resultSender);
	}

	@Override
	public ArrayList<ResultWrapper> doCall() throws UnexpectedResultException,
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 26 of /usr/local/git/PipeCoursework/RTAResources/DynamicCode/pipe/common/dataLayer/DynamicMarkingImpl.java
Starting at line 41 of /usr/local/git/PipeCoursework/RTAResources/DynamicCode/pipe/common/dataLayer/DynamicMarkingImpl.java

	public boolean isStartMarking(NewStateRecord marking) {
		int [] p = marking.getState();
		int id = marking.getID();
	if( p[0] > 0) 
=====================================================================
Found a 8 line (27 tokens) duplication in the following files: 
Starting at line 598 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 612 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 626 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 647 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java

	case SHAPE_TYPE:
	    if(value instanceof Integer) {
		copy_value = value;
	    } else {
		throw new IllegalArgumentException("value of attribute \"" + name + "\" is not an instance of Integer");
	    }
	    break;
	case SIZE_TYPE:
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 423 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 656 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java

		copy_value = ((GrappaSize)value).clone();
	    } else {
		throw new IllegalArgumentException("value of attribute \"" + name + "\" is not an instance of GrappaSize");
	    }
	    break;
	case STRING_TYPE:
	    if(value instanceof String) {
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 409 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 642 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java

		copy_value = ((GrappaPoint)value).clone();
	    } else {
		throw new IllegalArgumentException("value of attribute \"" + name + "\" is not an instance of GrappaPoint");
	    }
	    break;
	case SHAPE_TYPE:
	    if(value instanceof Integer) {
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 402 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 635 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java

		copy_value = ((GrappaLine)value).clone();
	    } else {
		throw new IllegalArgumentException("value of attribute \"" + name + "\" is not an instance of GrappaLine");
	    }
	    break;
	case POINT_TYPE:
	    if(value instanceof GrappaPoint) {
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 1538 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1550 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

			    if (edge.goesForward()) {
				if (edge.visastamp != stamp) {
				    input.addElement(edge);
				    edge.visastamp = stamp;
				}
			    }
			}
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 1497 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1507 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

		    enm = ((Node)elem).inEdgeElements();
		    while(enm.hasMoreElements()) {
			edge = (Edge)(enm.nextElement());
			if (edge.goesReverse()) {
=====================================================================
Found a 2 line (27 tokens) duplication in the following files: 
Starting at line 1167 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1256 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return;
=====================================================================
Found a 8 line (27 tokens) duplication in the following files: 
Starting at line 973 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 988 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

		    switch(dir) {
		    case GrappaLine.HEAD_ARROW_EDGE:
			line_dir = GrappaLine.TAIL_ARROW_EDGE;
		    case GrappaLine.TAIL_ARROW_EDGE:
			line_dir = GrappaLine.HEAD_ARROW_EDGE;
			break;
		    default:
			line_dir = dir;
=====================================================================
Found a 1 line (27 tokens) duplication in the following files: 
Starting at line 586 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 588 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

		    sgbox.add(new java.awt.geom.Rectangle2D.Double(minBox.x,minBox.y,minBox.width,minBox.height));
=====================================================================
Found a 1 line (27 tokens) duplication in the following files: 
Starting at line 458 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java
Starting at line 483 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaShape.java

				     (float)(x + tmpVertices[0].x), (float)(y - tmpVertices[0].y),
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 788 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java
Starting at line 880 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java
Starting at line 895 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java

	   ) {
	    if(styleStringBuffer == null) {
		styleStringBuffer = new StringBuffer();
	    } else {
		styleStringBuffer.append(',');
	    }
	    if(fontStyle.intValue() == Font.BOLD) {
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 637 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java
Starting at line 696 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java
Starting at line 721 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java

	   ) {
	    if(styleStringBuffer == null) {
		styleStringBuffer = new StringBuffer();
	    } else {
		styleStringBuffer.append(',');
	    }
	    switch(joinType) {
=====================================================================
Found a 2 line (27 tokens) duplication in the following files: 
Starting at line 98 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 107 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

			    cvt.buildOctal(prtbuf, ((Number)args[argn++]).intValue());
			else throw new RuntimeException("argument " + argn + " should be a Character or Number");
=====================================================================
Found a 16 line (27 tokens) duplication in the following files: 
Starting at line 370 of /usr/local/git/PipeCoursework/src/att/grappa/Lexer.java
Starting at line 406 of /usr/local/git/PipeCoursework/src/att/grappa/Lexer.java

	    result_str = cmnstrbuf.toString();
	}

	// advance past the closing double quote and build a return Symbol
	advance();
	haveId = true;
	return new Symbol(Symbols.ATOM, result_str);
    }

    /**
     * Process an identifier.  Identifiers begin with a letter, underscore,
     * or dollar sign, which is followed by zero or more letters, numbers,
     * underscores or dollar signs.  This routine returns an Symbol suitable
     * for return by the scanner.
     */
    private Symbol do_id() throws IOException {
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 389 of /usr/local/git/PipeCoursework/src/att/grappa/Node.java
Starting at line 397 of /usr/local/git/PipeCoursework/src/att/grappa/Node.java

	    synchronized (Node.this) {
		int tmp;
		if(inCnt > 0 && inCnt > (tmp = inEdges.size())) inCnt = tmp;
		if(inCnt > 0) {
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 952 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1014 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(26/*optAttrDefs*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // optAttrDefs ::= attrDefs 
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 948 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 965 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

		String value = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-0)).value;
		
                     appendAttr(name,value);
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 826 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 835 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(17/*optSeparator*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // optSeparator ::= SEMI 
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 2283 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 2291 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    elems = edgedict.elements();
	    while(elems.hasMoreElements()) {
		retVec.addElement(elems.nextElement());
	    }
	}
	if(graphdict != null) {
=====================================================================
Found a 1 line (27 tokens) duplication in the following files: 
Starting at line 2013 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 2027 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

			el.setPatch(previous, box.getY(), (next = frac * box.getWidth()), box.getHeight());
=====================================================================
Found a 1 line (27 tokens) duplication in the following files: 
Starting at line 2011 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 2025 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

			el.setPatch(box.getX(), previous, box.getWidth(), (next = frac * box.getHeight()));
=====================================================================
Found a 1 line (27 tokens) duplication in the following files: 
Starting at line 1946 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 2046 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

			((Subgraph)el).compStdPatchWork(new GrappaBox(previous, box.getY(), (next = frac * box.getWidth()), box.getHeight()), false);
=====================================================================
Found a 2 line (27 tokens) duplication in the following files: 
Starting at line 1368 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1418 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	tags = (Hashtable)(attr.getValue());
	if(tags == null || tags.size() == 0) return;
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 1302 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1129 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	if(tag == null || tag.indexOf(',') >= 0) {
	    throw new RuntimeException("tag value null or contains a comma (" + tag + ")");
	}
=====================================================================
Found a 1 line (27 tokens) duplication in the following files: 
Starting at line 740 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 742 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

		    bbox.add(new java.awt.geom.Rectangle2D.Double(minBox.x,minBox.y,minBox.width,minBox.height));
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 756 of /usr/local/git/PipeCoursework/src/circularbuffers/CircularByteBuffer.java
Starting at line 801 of /usr/local/git/PipeCoursework/src/circularbuffers/CircularByteBuffer.java

				if (!written){
					try {
						Thread.sleep(100);
					} catch(Exception x){
						throw new IOException("Waiting for available space in buffer interrupted.");
					}
				}
			}
		}
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 1754 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1777 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                if(this.real==Double.NEGATIVE_INFINITY || this.imag==Double.NEGATIVE_INFINITY)test = true;
                return test;
        }

        // Returns true if the Complex number is NaN (Not a Number)
        // i.e. is the result of an uninterpretable mathematical operation
        public static boolean isNaN(Complex a){
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 830 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 867 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                    if(Fmath.isInfinity(a) && !b.isZero()){
                        c.reset(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
                        return c;
                    }
                }

                c.real=a*b.real;
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 487 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 524 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                Complex[][][] a =new Complex[n][m][l];
                for(int i=0; i<n; i++){
                        for(int j=0; j<m; j++){
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 2292 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 2345 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double tan(double sideAC, double sideBC, double sideAB){
            double angle = Fmath.angle(sideAC, sideBC, sideAB);
            return Math.tan(angle);
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 632 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 803 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                    diff = (int)Math.abs(array[i] - value);
                    nearest = array[i];
                }
            }
            return nearest;
        }

        // finds the index of nearest element value in array to the argument value
        public static int nearestElementIndex(int[] array, int value){
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 476 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 609 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static int indexOf(String[] array, String value){
            int index = -1;
            boolean test = true;
            int counter = 0;
            while(test){
                if(array[counter].equals(value)){
=====================================================================
Found a 2 line (27 tokens) duplication in the following files: 
Starting at line 69 of /usr/local/git/PipeCoursework/src/jama/EigenvalueDecomposition.java
Starting at line 169 of /usr/local/git/PipeCoursework/src/jama/EigenvalueDecomposition.java

      for (int j = 0; j < n; j++) {
         d[j] = V[n-1][j];
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 689 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 704 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

            A[i][j] = B.A[i][j] / A[i][j];
         }
      }
      return this;
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 669 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 686 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      double[][] C = X.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 657 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 672 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

            A[i][j] = A[i][j] / B.A[i][j];
         }
      }
      return this;
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 637 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 654 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      double[][] C = X.getArray();
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 625 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 640 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

            A[i][j] = A[i][j] * B.A[i][j];
         }
      }
      return this;
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 472 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 573 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      checkMatrixDimensions(B);
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 414 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 434 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

   public void setMatrix (int[] r, int j0, int j1, Matrix X) {
      try {
         for (int i = 0; i < r.length; i++) {
            for (int j = j0; j <= j1; j++) {
=====================================================================
Found a 17 line (27 tokens) duplication in the following files: 
Starting at line 399 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 438 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

               A[r[i]][j] = X.get(i,j-j0);
            }
         }
      } catch(ArrayIndexOutOfBoundsException e) {
         throw new ArrayIndexOutOfBoundsException("Submatrix indices");
      }
   }

   /** Set a submatrix.
   @param i0   Initial row index
   @param i1   Final row index
   @param c    Array of column indices.
   @param X    A(i0:i1,c(:))
   @exception  ArrayIndexOutOfBoundsException Submatrix indices
   */

   public void setMatrix (int i0, int i1, int[] c, Matrix X) {
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 111 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 573 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      checkMatrixDimensions(B);
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 195 of /usr/local/git/PipeCoursework/src/jama/SingularValueDecomposition.java
Starting at line 226 of /usr/local/git/PipeCoursework/src/jama/SingularValueDecomposition.java

            if ((k < nrt) & (e[k] != 0.0)) {
               for (int j = k+1; j < nu; j++) {
                  double t = 0;
                  for (int i = k+1; i < n; i++) {
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 726 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 466 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

    debug_message(5, "# Current Symbol is #" + cur_token.sym);

    /* push dummy Symbol with start state to get us underway */
    stack.push(new Symbol(0, start_state()));
    tos = 0;

    /* continue until we are told to stop */
    for (_done_parsing = false; !_done_parsing; )
      {
=====================================================================
Found a 14 line (27 tokens) duplication in the following files: 
Starting at line 699 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 442 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

    int act;

    /* the Symbol/stack element returned by a reduce */
    Symbol lhs_sym = null;

    /* information about production being reduced with */
    short handle_size, lhs_sym_num;

    /* set up direct reference to tables to drive the parser */
    production_tab = production_table();
    action_tab     = action_table();
    reduce_tab     = reduce_table();

    debug_message(5, "# Initializing parser");
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 536 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 466 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

    debug_message(5, "# Current Symbol is #" + cur_token.sym);

    /* push dummy Symbol with start state to get us underway */
    stack.push(new Symbol(0, start_state()));
    tos = 0;

    /* continue until we are told to stop */
    for (_done_parsing = false; !_done_parsing; )
      {
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 275 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/AnnotationNote.java
Starting at line 301 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/AnnotationNote.java

		if (this.note.getPreferredSize().height <= this.note.getHeight() - dy)
		{
			this.note.setSize(new Dimension(this.note.getWidth(), this.note.getHeight() - dy));
=====================================================================
Found a 1 line (27 tokens) duplication in the following files: 
Starting at line 607 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java
Starting at line 608 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

					y[k1] = (int) ((ArcPathPoint) this.pathPoints.get(curveStartIndex + k1)).getPoint().y;
=====================================================================
Found a 17 line (27 tokens) duplication in the following files: 
Starting at line 2409 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 2438 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

					if (transitionName.equalsIgnoreCase(((Transition) this.transitionsArray.get(i)).getName()))
					{
						returnTransition = (Transition) this.transitionsArray.get(i);
					}
				}
			}
		}

		return returnTransition;
	}

	/**
	 * Get an List of all the Transition objects in the Petri-Net
	 * 
	 * @return An List of all the Transition objects
	 */
	public Transition[] getTransitions()
=====================================================================
Found a 17 line (27 tokens) duplication in the following files: 
Starting at line 2257 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 2285 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

					if (placeName.equalsIgnoreCase(((Place) this.placesArray.get(i)).getName()))
					{
						returnPlace = (Place) this.placesArray.get(i);
					}
				}
			}
		}

		return returnPlace;
	}

	/**
	 * Get an List of all the Place objects in the Petri-Net
	 * 
	 * @return A List of all the Place objects
	 */
	public Place[] getPlaces()
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 1696 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 418 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

               A[r[i]][c[j]] = X.get(i,j);
            }
         }
      } catch(ArrayIndexOutOfBoundsException e) {
=====================================================================
Found a 27 line (27 tokens) duplication in the following files: 
Starting at line 904 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 939 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

					B[i - i0][j] = this.A[i][c[j]];
				}
			}
		}
		catch (final ArrayIndexOutOfBoundsException e)
		{
			throw new ArrayIndexOutOfBoundsException("Submatrix indices");
		}
		return X;
	}

// ######################################################################################
	/**
	 * Get a submatrix.
	 * 
	 * @param r
	 *            Array of row indices.
	 * @param j0
	 *            Initial column index
	 * @param j1
	 *            Final column index
	 * @return A(r(:),j0:j1)
	 * @exception ArrayIndexOutOfBoundsException
	 *                Submatrix indices
	 */

	public PNMatrix getMatrix(final int[] r, final int j0, final int j1)
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 896 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 967 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		final PNMatrix X = new PNMatrix(r.length, j1 - j0 + 1);
		final int[][] B = X.getArray();
		try
		{
			for (int i = 0; i < r.length; i++)
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 573 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      checkMatrixDimensions(B);
      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 44 line (27 tokens) duplication in the following files: 
Starting at line 253 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PlaceTransitionObject.java
Starting at line 349 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

		return this.myPath.getPoint(this.myPath.getEndIndex()).getY();
	}

	/**
	 * Set inscription
	 * 
	 * @param inscriptionInput
	 *            String value for Arc inscription;
	 */
// public void setInscription(String inscriptionInput) {
// inscription = inscriptionInput;
// }
	/**
	 * Set X-axis offset for inscription position
	 * 
	 * @param inscriptionOffsetXInput
	 *            Double value for inscription X-axis offset
	 */
// public void setInscriptionOffsetX(double inscriptionOffsetXInput) {
// inscriptionOffsetX = new Double(inscriptionOffsetXInput);
// }
	/**
	 * Set Y-axis offset for inscription position
	 * 
	 * @param inscriptionOffsetYInput
	 *            Double value for inscription Y-axis offset
	 */
// public void setInscriptionOffsetY(double inscriptionOffsetYInput) {
// inscriptionOffsetY = new Double(inscriptionOffsetYInput);
// }
	/**
	 * Get id
	 * 
	 * @return String value for Arc id;
	 */
	@Override
	public String getId()
	{
		if (this.id != null)
		{
			return this.id;
		}
		else
		{
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 203 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PlaceTransitionObject.java
Starting at line 216 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PlaceTransitionObject.java

	public int centreOffsetTop()
	{
		final double zoomBy = this.getZoomController().getPercent() * 0.01;
		return (int) (zoomBy * this.componentHeight / 2.0);
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PlaceTransitionObject.java
Starting at line 198 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/AnnotationNote.java

	public AnnotationNote(final int x, final int y) {
		if (CreateGui.getApp() != null)
		{
			this.addZoomController(CreateGui.getView().getZoomController());
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 45 of /usr/local/git/PipeCoursework/src/pipe/common/queryresult/XYCoordinatesTest.java
Starting at line 71 of /usr/local/git/PipeCoursework/src/pipe/common/queryresult/XYCoordinatesTest.java

		List<XYCoordinate> c = cs.getFromXToX(-2, 77);
		this.printList(c);
		Assert.assertEquals(8, c.size());

		c = cs.getFromYToY(3, 101);
=====================================================================
Found a 24 line (27 tokens) duplication in the following files: 
Starting at line 587 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 247 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

			if (vanishingStates) sr.write(opfile);
			else sr.write(opfile);
		} catch (IOException e) {
			System.err.println("IO problem while writing explored states to file.");
		}
	}
	
	/**
	 * createRGFile()
	 * Creates a reachability graph file containing all the tangible
	 * states that were found during state space exploration and also
	 * all the transitions between them.
	 * 
	 * @param transource	A file containing all the transitions (arcs) between 
	 * 						tangible states.
	 * @param destination	The file to create as a reachability graph file. The file
	 * 						should already contain a list of all the tangible states
	 * 						and be in the correct position for writing the record
	 * 						of all the transitions between them.
	 * @param statesize		The size of each state array
	 * @param states		The number of tangible states found
	 * @param transitions	The number of transitions recorded
	 */
	private static void createRGFile(File transource, MappedByteBuffer destination, int statesize, int states, int transitions, boolean withTransitions) {
=====================================================================
Found a 2 line (27 tokens) duplication in the following files: 
Starting at line 106 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java
Starting at line 304 of /usr/local/git/PipeCoursework/src/pipe/gui/SelectionObject.java

			if ((netObj[i] instanceof PlaceTransitionObject) && ((PetriNetObject)netObj[i]).isSelectable())
				if (((PlaceTransitionObject)netObj[i]).isSelected()) {
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/JFCGraphFrame.java
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/CartesianGraphFrame.java

	  		FileWriter fw = null;
	  		StringBuffer content = new StringBuffer();
	  		
	  		File saveFile;
		
			JFileChooser fc = new JFileChooser();
			int returnVal = fc.showSaveDialog(CartesianGraphFrame.this);
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 37 of /usr/local/git/PipeCoursework/src/pipe/io/RGFileHeader.java
Starting at line 41 of /usr/local/git/PipeCoursework/src/pipe/io/NewRGFileHeader.java

	public NewRGFileHeader(RandomAccessFile input) throws IncorrectFileFormatException, IOException{
		this(0,0,0,0,0);
		read(input);
	}
	
	/**
	 * Sets up a blank Reachability Graph File Header Object
	 */
	public NewRGFileHeader(){
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 253 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java
Starting at line 345 of /usr/local/git/PipeCoursework/src/pipe/modules/comparison/Comparison.java

      results.add(source[i].getSource().getName()+"->"+source[i].getTarget().getName());
      results.add("");
      s="Not found in comparison Petri net";
      if(compareID)        s+="<br>Id= \"" + source[i].getSource().getId() + "\"->\""+source[i].getTarget().getId()+"\"";
=====================================================================
Found a 2 line (27 tokens) duplication in the following files: 
Starting at line 322 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 220 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		for(int i=1; i<places.length; i++) {
			modString += ", "+places[i].getId();
=====================================================================
Found a 12 line (27 tokens) duplication in the following files: 
Starting at line 203 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 204 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		passageTime();
	}
	
	private void model() {
		modString += "\\model{\n";
		stateVector();
		initial();
		transitions();
		modString += "}\n\n";		
	}
	
	private void stateVector() {
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 193 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 432 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

	private static boolean isTangible(DataLayer pnmlData, State marking) {
		Transition[] trans = pnmlData.getTransitions();
		int numTrans = trans.length;
		boolean hasTimed = false;
		boolean hasImmediate = false;
=====================================================================
Found a 8 line (27 tokens) duplication in the following files: 
Starting at line 164 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 894 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

				if(result[i]){
					if (transArray[i].isTimed()==true){
						hasTimed = true;
					}
					else {
						hasImmediate = true;
					}
				}
=====================================================================
Found a 2 line (27 tokens) duplication in the following files: 
Starting at line 164 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java
Starting at line 173 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPN.java

			for (int i = 0; i<transCount; i++){
				if (transArray[i].isTimed()==true){
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 190 of /usr/local/git/PipeCoursework/src/pipe/modules/invariantAnalysis/InvariantAnalysis.java
Starting at line 616 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                Complex[][] b = Complex.twoDarray(n, m);
                for(int i=0; i<n; i++){
                        for(int j=0; j<m; j++){
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 232 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ResultsReceiver.java
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/CartesianGraphFrame.java

	  		FileWriter fw = null;
	  		StringBuffer content = new StringBuffer();
	  		
	  		File saveFile;
		
			JFileChooser fc = new JFileChooser();
			int returnVal = fc.showSaveDialog(CartesianGraphFrame.this);
=====================================================================
Found a 8 line (27 tokens) duplication in the following files: 
Starting at line 79 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/StateViewer.java
Starting at line 145 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

		selection.updateBounds();
	}

	public void updatePreferredSize() {
		// iterate over net objects
		// setPreferredSize() accordingly
		Component[] components=getComponents();
		Dimension d=new Dimension(0,0);
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 32 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java
Starting at line 30 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ConditionPlaceHandler.java

public class ConditionPlaceHandler extends MouseAdapter
{
	protected JDialog parent = null; 
	protected ConditionPlace place = null;
	
	protected JDialog conditionEdit;
	JComboBox operaterCombo;
	JButton okButton, cancelButton;
	JTextField conditionValue;
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 369 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/CartesianGraphFrame.java

	  		FileWriter fw = null;
	  		StringBuffer content = new StringBuffer();
	  		
	  		File saveFile;
		
			JFileChooser fc = new JFileChooser();
			int returnVal = fc.showSaveDialog(CartesianGraphFrame.this);
=====================================================================
Found a 8 line (27 tokens) duplication in the following files: 
Starting at line 74 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java
Starting at line 145 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

		selection.updateBounds();
	}

	public void updatePreferredSize() {
		// iterate over net objects
		// setPreferredSize() accordingly
		Component[] components=getComponents();
		Dimension d=new Dimension(0,0);
=====================================================================
Found a 2 line (27 tokens) duplication in the following files: 
Starting at line 176 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 220 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		for(int i=1; i<places.length; i++) {
			modString += ", "+places[i].getId();
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 63 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/LoggingListener.java
Starting at line 104 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/LoggingListener.java

		}
		catch (final IOException e)
		{
			EvaluatorLoggingHandler.logger.log(Level.WARNING, "Problem on Socket, port no:" + this.port, e);
		}
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 60 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultBarChartPlotter.java
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/CartesianGraphFrame.java

	  		FileWriter fw = null;
	  		StringBuffer content = new StringBuffer();
	  		
	  		File saveFile;
		
			JFileChooser fc = new JFileChooser();
			int returnVal = fc.showSaveDialog(CartesianGraphFrame.this);
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 125 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 114 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultBarChartPlotter.java

														graphImage = ResultBarChartPlotter.this.chart.createBufferedImage(	800,
																															600);

														File saveFile;
														JFileChooser fc = new JFileChooser();
														int returnVal = fc.showSaveDialog(ResultBarChartPlotter.this.resultsPanel);
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 74 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultGraphPlotter.java
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/CartesianGraphFrame.java

	  		FileWriter fw = null;
	  		StringBuffer content = new StringBuffer();
	  		
	  		File saveFile;
		
			JFileChooser fc = new JFileChooser();
			int returnVal = fc.showSaveDialog(CartesianGraphFrame.this);
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 434 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 471 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

				QueryManager.getProgressWindow().allComponents.put(hash, area);
			}
			else
			{
				area = QueryManager.getProgressWindow().allComponents.get(hash);
			}
=====================================================================
Found a 13 line (27 tokens) duplication in the following files: 
Starting at line 192 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ServerSettingsBasicPanel.java
Starting at line 163 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/ServerPanel.java

		 panel.add(componentPanel);
		 

		 // Set up dialog with new panel
		 addServ.add(panel);
		 addServ.pack();
		 addServ.setResizable(false);
		 addServ.setLocationRelativeTo(null);
		 
		 
		 // Return Dialog
		 return addServ;
	 }
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 34 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeArcPathPointHandler.java
Starting at line 29 of /usr/local/git/PipeCoursework/src/pipe/gui/ArcPathPointHandler.java

		if(((ArcPathPoint)myObject).isDeleteable()) popup = super.getPopup(e);
		else popup = new JPopupMenu();
		
		if(((ArcPathPoint)myObject).getIndex()==0) return null;
=====================================================================
Found a 11 line (27 tokens) duplication in the following files: 
Starting at line 24 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeArcPathPointHandler.java
Starting at line 19 of /usr/local/git/PipeCoursework/src/pipe/gui/ArcPathPointHandler.java

	public ArcPathPointHandler(Container contentpane, ArcPathPoint obj) {
		super(contentpane, obj);
		enablePopup = true;
	}	

		/** Creates the popup menu that the user will see when they right click on a component */
	public JPopupMenu getPopup(MouseEvent e)
	{
		JPopupMenu popup;
		
		if(((ArcPathPoint)myObject).isDeleteable()) popup = super.getPopup(e);
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 97 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java
Starting at line 199 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java

			netObj = ((MacroView)edit_window).getComponents();

		for (int i=0; i<netObj.length; i++) {
			if ((netObj[i] instanceof PerformanceTreeObject) && (((PerformanceTreeObject)netObj[i]).isSelected())) {
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 258 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 74 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java

		repaint();
	}
	
	public void updatePreferredSize() {
		// iterate over net objects and setPreferredSize() accordingly
		Component[] components=getComponents();
		Dimension d=new Dimension(0,0);
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 1027 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java
Starting at line 199 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java

			netObj = ((MacroView)edit_window).getComponents();

		for (int i=0; i<netObj.length; i++) {
			if ((netObj[i] instanceof PerformanceTreeObject) && (((PerformanceTreeObject)netObj[i]).isSelected())) {
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 250 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java
Starting at line 124 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/EditPerformanceTreeNodeAction.java

					while (!inputValid)
					{
						String input = JOptionPane.showInputDialog("Numerical value to be represented by Num node:");
						try
						{
							// check for Cancel
							if (input == null)
							{
								inputValid = true;
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 82 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 132 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

		setArcLabel(labelInput, labelsRequired);
	}

	// used in QueryLoader and MacroLoader
	public PerformanceTreeArc(	final double startPositionXInput,
								final double startPositionYInput,
								final double endPositionXInput,
								final double endPositionYInput,
								final String sourceID,
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 145 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPathPoint.java
Starting at line 432 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

	public void paintComponent(final Graphics g)
	{
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D) g;
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
=====================================================================
Found a 10 line (27 tokens) duplication in the following files: 
Starting at line 415 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 350 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PlaceTransitionObject.java

		this.connectTo.remove(oldArc);
	}

	/** Handles selection for Place/Transitions */
	@Override
	public void select()
	{
		if (this.selectable && !this.selected)
		{
			super.select();
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 1088 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 450 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java

				Iterator<PerformanceTreeNode> i = treeNodes.iterator();
				while (i.hasNext()) {
					PerformanceTreeNode node = i.next();
					if (!(node instanceof ResultNode)) {
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 306 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 74 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java

		repaint();
	}
	
	public void updatePreferredSize() {
		// iterate over net objects and setPreferredSize() accordingly
		Component[] components=getComponents();
		Dimension d=new Dimension(0,0);
=====================================================================
Found a 10 line (27 tokens) duplication in the following files: 
Starting at line 407 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java
Starting at line 415 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java

		else return this.node.contains((int) unZoomedX, (int) unZoomedY);
	}

	/** Handles selection for Nodes */
	@Override
	public void select()
	{
		if (this.selectable && !this.selected)
		{
			super.select();
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 95 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java
Starting at line 78 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java

	public PerformanceTreeNode(final double positionXInput, final double positionYInput, final String idInput) {
		super(positionXInput, positionYInput, idInput);
		setupNode();
	}

	public PerformanceTreeNode(final double positionXInput, final double positionYInput) {
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 24 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ResultNode.java
Starting at line 22 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PercentileNode.java

	public PercentileNode(final double positionXInput, final double positionYInput, final String idInput) {
		super(positionXInput, positionYInput, idInput);
		initialiseNode();
	}

	public PercentileNode(final double positionXInput, final double positionYInput) {
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 92 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateProbNode.java
Starting at line 104 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateProbNode.java

			description += QueryManager.addColouring(op);
			QueryManager.colourUp();
			description += QueryManager.addColouring("the set of all states in the model ");
			QueryManager.colourDown();
		}
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 26 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 24 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ResultNode.java

	public ResultNode(final double positionXInput, final double positionYInput, final String idInput) {
		super(positionXInput, positionYInput, idInput);
		initialiseNode();
	}

	public ResultNode(final double positionXInput, final double positionYInput) {
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 234 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 245 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java

		{
			// have a delete and edit state label button as well - used when the
			// state label manager is
			// invoked from the Tools menu
			JPanel stateLabelButtonPanel = new JPanel();
			stateLabelButtonPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
			String[] buttonNames = {"Create State Label", "Edit State Label", "Delete State Label"};
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 84 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java
Starting at line 306 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java

		this.selection.updateBounds();
	}

	public void updatePreferredSize()
	{
		// iterate over net objects
		// setPreferredSize() accordingly
		Component[] components = getComponents();
		Dimension d = new Dimension(0, 0);
=====================================================================
Found a 2 line (27 tokens) duplication in the following files: 
Starting at line 144 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java
Starting at line 120 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java

			imgDir = "pipe"+System.getProperty("file.separator")+"modules"+
				System.getProperty("file.separator")+"queryeditor"+System.getProperty("file.separator")+
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 503 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 174 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java

					Iterator<String> j = outgoingArcIDs.iterator();
					while (j.hasNext())
					{
						String outgoingArcID = j.next();
						System.out.println("   has an outgoing arc with ID " + outgoingArcID);
=====================================================================
Found a 2 line (27 tokens) duplication in the following files: 
Starting at line 126 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 120 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java

			imgDir = "pipe"+System.getProperty("file.separator")+"modules"+
				System.getProperty("file.separator")+"queryeditor"+System.getProperty("file.separator")+
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 112 of /usr/local/git/PipeCoursework/src/pipe/modules/reachability/ReachabilityGraphGenerator.java
Starting at line 131 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPNNew.java

				steadystatetime = (ssdfinished - efinished)/1000.0;
				totaltime = (allfinished - start)/1000.0;
				DecimalFormat f=new DecimalFormat();
				f.setMaximumFractionDigits(5);
				s+= "<br>State space exploration took " + f.format(explorationtime) + "s";
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 385 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java
Starting at line 483 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java

			rgheader.read(inputBuf);
		} 
		catch (IOException e) {
			System.out.println("IO error!2");
			throw new ImmediateAbortException("IO error");
		}
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 114 of /usr/local/git/PipeCoursework/src/pipe/modules/simulation/Simulation.java
Starting at line 102 of /usr/local/git/PipeCoursework/src/pipe/modules/reachability/ReachabilityGraphGenerator.java

			if(sourceDataLayer==null) return;
			if(!sourceDataLayer.getPetriNetObjects().hasNext()) s+="No Petri net objects defined!";
			else {
				try {
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 30 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 32 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

public class ConditionPlaceHandler extends MouseAdapter
{
	protected JDialog parent = null; 
	protected ConditionPlace place = null;
	
	protected JDialog conditionEdit;
	JComboBox operaterCombo;
	JButton okButton, cancelButton;
	JTextField conditionValue;
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 232 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/CartesianGraphFrame.java

	  		FileWriter fw = null;
	  		StringBuffer content = new StringBuffer();
	  		
	  		File saveFile;
		
			JFileChooser fc = new JFileChooser();
			int returnVal = fc.showSaveDialog(CartesianGraphFrame.this);
=====================================================================
Found a 11 line (27 tokens) duplication in the following files: 
Starting at line 160 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ResultsReceiver.java
Starting at line 176 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java

		HTMLPane errorText = new HTMLPane("Error calculating results");
		//errorText.setText(results[1] + exp);
	
		resultsPanel.removeAll(); // clear if previously used
		resultsPanel.setLayout(new BorderLayout());
		resultsPanel.add(errorText, BorderLayout.CENTER);			
	}
    
		
		
  }
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/SimpleTransitions.java
Starting at line 25 of /usr/local/git/PipeCoursework/src/pipe/common/SimpleTransitions.java

	public boolean[]			timed;
	public double[]				rate;
	public ArrayList<LinkedList<SimpleArc>>	arcsTo, arcsFrom;
	public int								length;

	public SimpleTransitions(final DataLayer pnmldata) {
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 79 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java
Starting at line 306 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java

		this.selection.updateBounds();
	}

	public void updatePreferredSize()
	{
		// iterate over net objects
		// setPreferredSize() accordingly
		Component[] components = getComponents();
		Dimension d = new Dimension(0, 0);
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 312 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 488 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

		 }
	}
	
	private void countMeasure()
	{
		for(int i=0; i< performanceMeasures.counts.size(); i++)
		 {
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 290 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java
Starting at line 466 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

		}
	}
	
	private void stateMeasure()
	{
		for(int i=0; i< performanceMeasures.states.size(); i++)
		 {
=====================================================================
Found a 8 line (27 tokens) duplication in the following files: 
Starting at line 38 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/RangeNode.java
Starting at line 20 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/BinaryNodeAnalyser.java

		this.rhs = this.checkChildValid(rhs);
	}

	@Override
	public boolean canEvaluate()
	{
		return this.lhs.canEvaluate() && this.rhs.canEvaluate();
	}
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 598 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java
Starting at line 373 of /usr/local/git/PipeCoursework/src/pipe/server/TransMod.java

			modString .append( "(" ).append(currentCondition[0]);
			
			for(int i=1; i< currentCondition.length;i++)
=====================================================================
Found a 7 line (26 tokens) duplication in the following files: 
Starting at line 430 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 663 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java

		copy_value = value;
	    } else {
		throw new IllegalArgumentException("value of attribute \"" + name + "\" is not an instance of String");
	    }
	    break;
	case STYLE_TYPE:
	    if(value instanceof GrappaStyle) {
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 470 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 518 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	Object oldValue = null;
	Subgraph subg = getSubgraph();
	switch(type) {
	case Grappa.NODE:
	    oldValue = subg.setNodeAttribute(attr);
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 930 of /usr/local/git/PipeCoursework/src/att/grappa/Graph.java
Starting at line 956 of /usr/local/git/PipeCoursework/src/att/grappa/Graph.java

	GrappaPanel panel = null;

	while(incomplete) {
	    try {
		li = panelList.listIterator(0);
		while(li.hasNext()) {
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 473 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 503 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

			if(subg.currentSelection instanceof Element) {
			    GrappaSupport.setHighlight((Element)(subg.currentSelection), 0, HIGHLIGHT_OFF); 
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 265 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 285 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

		Vector elems = GrappaSupport.findContainedElements(subg, outline);
		if(elems != null) {
		    drillDown(subg, elems, SELECTION_MASK, HIGHLIGHT_TOGGLE);
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 497 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 499 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

		    shape = new GrappaShape(shapeType, pos.x + (width/2.0), pos.y + (height/2.0), width, height, sides, peripheries, distortion, skew, orientation, style.rounded, style.diagonals, rects);
		}
=====================================================================
Found a 1 line (26 tokens) duplication in the following files: 
Starting at line 359 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 417 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

			shape = new Ellipse2D.Double(pos.x - (width/2.0), pos.y - (height/2.0), width, height);
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 343 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 345 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

			shape = new GrappaShape(shapeType, pos.x + (width/2.0), pos.y + (height/2.0), width, height, sides, peripheries, distortion, skew, orientation, style.rounded, style.diagonals, null);
		    }
=====================================================================
Found a 1 line (26 tokens) duplication in the following files: 
Starting at line 305 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 359 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

			shape = new RoundRectangle2D.Double(pos.x - (width/2.0), pos.y - (height/2.0), width, height, arcWidthFactor * width, arcHeightFactor * height);
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 277 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 279 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java

		    } else {
			shape = (Shape)(custom_shape = ccustom.newInstance(new Object[] { node, new Double(pos.x), new Double(pos.y), new Double(width), new Double(height) }));
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 860 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 1497 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

		    enm = ((Node)elem).outEdgeElements();
		    while(enm.hasMoreElements()) {
			edge = (Edge)(enm.nextElement());
			if (edge.goesForward()) {
=====================================================================
Found a 7 line (26 tokens) duplication in the following files: 
Starting at line 611 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java
Starting at line 787 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java

	    )
	   ) {
	    if(styleStringBuffer == null) {
		styleStringBuffer = new StringBuffer();
	    } else {
		styleStringBuffer.append(',');
	    }
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 807 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 820 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java

	    program = new Parser(fromReader,graph.getErrorWriter(),graph);
	    try {
		program.parse();
	    } catch(Exception ex2) {
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 516 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 963 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

		    if((grappaNexus = node.grappaNexus) == null || !node.selectable) continue;
		    if(grappaNexus.rawBounds2D().contains(pt)) {
			if(grappaNexus.contains(pt)) {
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 268 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 287 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 307 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java

	double[] array = new double[st.countTokens()];

	int i = 0;
	while(st.hasMoreTokens()) {
	    array[i++] = Double.valueOf(st.nextToken()).doubleValue();
=====================================================================
Found a 11 line (26 tokens) duplication in the following files: 
Starting at line 144 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 155 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java

	isgraph(int ch) {

	return(isascii(ch) && (ctype[ch]&DG) != 0);
    }

    ///////////////////////////////////////////////////////////////////////////

    /**
     * for ASCII only
     */
    static boolean
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 88 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 102 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 129 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 147 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 165 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java
Starting at line 174 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupportPrintf.java

		    case 'g':
			if (args.length <= argn) throw new RuntimeException("too few arguments for format");
			if (args[argn] instanceof Character)
			    cvt.buildFlex(prtbuf, ((Character)args[argn++]).charValue(), false);
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 195 of /usr/local/git/PipeCoursework/src/att/grappa/Node.java
Starting at line 292 of /usr/local/git/PipeCoursework/src/att/grappa/Node.java

    synchronized public void removeEdge(Edge edge, boolean inEdge) {
	if(edge == null) return;
	if(inEdge) {
	    if(inEdges == null) return;
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 1499 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1528 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

	    closeGraph();
          
              CUP$Parser$result = new java_cup.runtime.Symbol(9/*graph*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 1452 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1486 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

          startGraph(name,type.booleanValue(),strict.booleanValue());
        
              CUP$Parser$result = new java_cup.runtime.Symbol(10/*hdr*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 1126 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1143 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

               attrStmt(type.intValue(),name);
             
              CUP$Parser$result = new java_cup.runtime.Symbol(15/*attrStmt*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 1838 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1911 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

				    el.setPatch(prv, previous, nxt = box.getWidth() * el.getPatchSize() / tot, next);
				} else {
=====================================================================
Found a 9 line (26 tokens) duplication in the following files: 
Starting at line 517 of /usr/local/git/PipeCoursework/src/circularbuffers/CircularByteBuffer.java
Starting at line 639 of /usr/local/git/PipeCoursework/src/circularbuffers/CircularByteBuffer.java

					}
				}
				try {
					Thread.sleep(100);
				} catch(Exception x){
					throw new IOException("Blocking read operation interrupted.");
				}
			}
		}
=====================================================================
Found a 8 line (26 tokens) duplication in the following files: 
Starting at line 1654 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1664 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                c=Complex.sqrt(Complex.square(a).minus(1.0D));
                c=a.plus(c);
                c=Complex.log(c);
                return c;
        }

        // Inverse hyperbolic tangent of a Complex number
        public static Complex atanh(Complex a ){
=====================================================================
Found a 7 line (26 tokens) duplication in the following files: 
Starting at line 1026 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1090 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                        denom=this.real+this.imag*ratio;
                        c.real=a/denom;
                        c.imag=-a*ratio/denom;
                }
                else
                {
                        ratio=this.real/this.imag;
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 488 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 617 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                for(int i=0; i<n; i++){
                        for(int j=0; j<m; j++){
=====================================================================
Found a 7 line (26 tokens) duplication in the following files: 
Starting at line 2465 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 2534 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double acsch(double a){
            double sgn = 1.0D;
            if(a<0.0D){
                sgn = -1.0D;
                a = -a;
            }
            return 0.5D*sgn*(Math.log(1.0/a + Math.sqrt(1.0D/(a*a) + 1.0D)));
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 1236 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1245 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static void println(double[] aa){
            for(int i=0; i<aa.length; i++){
                System.out.println(aa[i]+"   ");
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 352 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1347 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            int[] indices = new int[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 218 of /usr/local/git/PipeCoursework/src/jama/LUDecomposition.java
Starting at line 364 of /usr/local/git/PipeCoursework/src/jama/EigenvalueDecomposition.java

      for (int i = 0; i < n; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 99 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 527 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 131 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 364 of /usr/local/git/PipeCoursework/src/jama/EigenvalueDecomposition.java

      for (int i = 0; i < n; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 112 of /usr/local/git/PipeCoursework/src/jama/QRDecomposition.java
Starting at line 99 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 499 of /usr/local/git/PipeCoursework/src/jama/SingularValueDecomposition.java
Starting at line 364 of /usr/local/git/PipeCoursework/src/jama/EigenvalueDecomposition.java

      for (int i = 0; i < n; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 1 line (26 tokens) duplication in the following files: 
Starting at line 243 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java
Starting at line 251 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

					this.path.lineTo(this.currentPoint.getPoint().x, this.currentPoint.getPoint().y);
=====================================================================
Found a 9 line (26 tokens) duplication in the following files: 
Starting at line 1599 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1623 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

						t = (Transition) timedTransitions.get(index);
						rval -= t.getRate();
						if (rval <= 0.0d)
						{
							result = t;
							break;
						}
					}
			}
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 1596 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1620 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

					double rval = sumOfTimedWeights * DataLayer.randomNumber.nextDouble();
					for (int index = 0; index < count; index++)
					{
						t = (Transition) timedTransitions.get(index);
=====================================================================
Found a 8 line (26 tokens) duplication in the following files: 
Starting at line 1229 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1388 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

	private Transition createTransition(final Element inputTransitionElement)
	{
		double positionXInput = 0;
		double positionYInput = 0;
		String idInput = null;
		String nameInput = null;
		double nameOffsetYInput = 0;
		double nameOffsetXInput = 0;
=====================================================================
Found a 7 line (26 tokens) duplication in the following files: 
Starting at line 974 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1039 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

				PetriNetObject pnObject = arc.getTarget();
				if (pnObject != null)
				{
					if (pnObject instanceof Place)
					{
						place = (Place) pnObject;
						pnObject = arc.getSource();
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 636 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 656 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

								if (id.equals(((Transition) this.transitionsArray.get(i)).getId()))
								{
									unique = false;
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 347 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 366 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

								if (id.equals(((Arc) this.arcsArray.get(i)).getId()))
								{
									unique = false;
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 148 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMLTransformer.java
Starting at line 421 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayerWriter.java

			xsltSource = new StreamSource(Thread.currentThread()
												.getContextClassLoader()
												.getResourceAsStream("xslt" +
																		System.getProperty("file.separator") +
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 1665 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 438 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

               A[r[i]][j] = X.get(i,j-j0);
            }
         }
      } catch(ArrayIndexOutOfBoundsException e) {
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 1632 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 458 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

               A[i][c[j]] = X.get(i-i0,j);
            }
         }
      } catch(ArrayIndexOutOfBoundsException e) {
=====================================================================
Found a 7 line (26 tokens) duplication in the following files: 
Starting at line 1591 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1624 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

	public void setMatrix(final int i0, final int i1, final int[] c, final PNMatrix X)
	{
		try
		{
			for (int i = i0; i <= i1; i++)
			{
				for (int j = 0; j < c.length; j++)
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 1544 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 99 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      for (int i = 0; i < m; i++) {
         for (int j = 0; j < n; j++) {
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 1459 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 930 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      format.setDecimalFormatSymbols(new DecimalFormatSymbols(Locale.US));
      format.setMinimumIntegerDigits(1);
      format.setMaximumFractionDigits(d);
      format.setMinimumFractionDigits(d);
      format.setGroupingUsed(false);
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 84 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 174 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 722 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

		for (int i = 0; i < m; i++)
		{
			for (int j = 0; j < n; j++)
			{
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 379 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java
Starting at line 125 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/AnnotationNote.java

				g2.setStroke(new BasicStroke(1.0f));
				g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

				if (this.isPressed)
=====================================================================
Found a 25 line (26 tokens) duplication in the following files: 
Starting at line 355 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java
Starting at line 547 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

	}

	/**
	 * Get X-axis offset for inscription position returns null if value not yet
	 * entered
	 * 
	 * @return Double value for inscription X-axis offset
	 */
// public Double getInscriptionOffsetXObject() {
// return inscriptionOffsetX;
// }
	/**
	 * Get Y-axis offset for inscription position returns null if value not yet
	 * entered
	 * 
	 * @return Double value for inscription Y-axis offset
	 */
// public Double getInscriptionOffsetYObject() {
// return inscriptionOffsetY;
// }
	@Override
	public void paintComponent(final Graphics g)
	{
		super.paintComponent(g);
		final Graphics2D g2 = (Graphics2D) g;
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 726 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 747 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

		while (arcIterator.hasNext())
		{
			final ArcAngleCompare thisArc = (ArcAngleCompare) arcIterator.next();
			if (thisArc.arc == arc)
=====================================================================
Found a 12 line (26 tokens) duplication in the following files: 
Starting at line 725 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 813 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

		transform.transform(new Point2D.Double(1, 0.5 * Transition.TRANSITION_HEIGHT), transformed); // +1
		// due
		// to
		// rounding
		// making
		// it
		// off
		// by 1
		while (arcIterator.hasNext())
		{
			final ArcAngleCompare thisArc = (ArcAngleCompare) arcIterator.next();
			if (thisArc.sourceOrTarget())
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 708 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 747 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

		while (arcIterator.hasNext())
		{
			final ArcAngleCompare thisArc = (ArcAngleCompare) arcIterator.next();
			if (thisArc.arc == arc)
=====================================================================
Found a 12 line (26 tokens) duplication in the following files: 
Starting at line 707 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 813 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

		transform.transform(new Point2D.Double(1, 0.5 * Transition.TRANSITION_HEIGHT), transformed); // +1
		// due
		// to
		// rounding
		// making
		// it
		// off
		// by 1
		while (arcIterator.hasNext())
		{
			final ArcAngleCompare thisArc = (ArcAngleCompare) arcIterator.next();
			if (thisArc.sourceOrTarget())
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 690 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 747 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

		while (arcIterator.hasNext())
		{
			final ArcAngleCompare thisArc = (ArcAngleCompare) arcIterator.next();
			if (thisArc.arc == arc)
=====================================================================
Found a 12 line (26 tokens) duplication in the following files: 
Starting at line 689 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 813 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

		transform.transform(new Point2D.Double(1, 0.5 * Transition.TRANSITION_HEIGHT), transformed); // +1
		// due
		// to
		// rounding
		// making
		// it
		// off
		// by 1
		while (arcIterator.hasNext())
		{
			final ArcAngleCompare thisArc = (ArcAngleCompare) arcIterator.next();
			if (thisArc.sourceOrTarget())
=====================================================================
Found a 25 line (26 tokens) duplication in the following files: 
Starting at line 421 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 547 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

	}

	/**
	 * Get X-axis offset for inscription position returns null if value not yet
	 * entered
	 * 
	 * @return Double value for inscription X-axis offset
	 */
// public Double getInscriptionOffsetXObject() {
// return inscriptionOffsetX;
// }
	/**
	 * Get Y-axis offset for inscription position returns null if value not yet
	 * entered
	 * 
	 * @return Double value for inscription Y-axis offset
	 */
// public Double getInscriptionOffsetYObject() {
// return inscriptionOffsetY;
// }
	@Override
	public void paintComponent(final Graphics g)
	{
		super.paintComponent(g);
		final Graphics2D g2 = (Graphics2D) g;
=====================================================================
Found a 7 line (26 tokens) duplication in the following files: 
Starting at line 205 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 145 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java

	public Place(	final double positionXInput,
					final double positionYInput,
					final String idInput,
					final String nameInput,
					final double nameOffsetXInput,
					final double nameOffsetYInput,
					final int initialMarkingInput,
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 132 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 337 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

						addExplored(tangible, exploredStates, esoFile, false);
					}
					else{
						int id = identifyState(sprime, exploredStates);
						if(id==-1)
							throw new ImmediateAbortException("Could not identify previously explored tangible state.");
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 311 of /usr/local/git/PipeCoursework/src/pipe/gui/Animator.java
Starting at line 336 of /usr/local/git/PipeCoursework/src/pipe/gui/Animator.java

  public void fireTaggedTransition(Transition transition){
	    Animator animator = CreateGui.getAnimator();
  CreateGui.getAnimationHistory().addHistoryItem(transition.getName()+" fires TAG");
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 253 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java
Starting at line 273 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

				createArc.setEndPoint(Grid.getModifiedX(e.getX()), Grid.getModifiedY(e.getY()), shiftDown);
			}
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 194 of /usr/local/git/PipeCoursework/src/pipe/modules/invariantAnalysis/InvariantAnalysis.java
Starting at line 488 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                for(int i=0; i<n; i++){
                        for(int j=0; j<m; j++){
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 94 of /usr/local/git/PipeCoursework/src/pipe/modules/invariantAnalysis/InvariantAnalysis.java
Starting at line 77 of /usr/local/git/PipeCoursework/src/pipe/modules/classification/Classification.java

      if(sourceDataLayer==null) return;
      if(!sourceDataLayer.getPetriNetObjects().hasNext()) s+="No Petri net objects defined!";
      else s+=ResultsHTMLPane.makeTable(new String[]{
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 74 of /usr/local/git/PipeCoursework/src/pipe/modules/matrices/Matrices.java
Starting at line 78 of /usr/local/git/PipeCoursework/src/pipe/modules/matrices/Matrices.java
Starting at line 82 of /usr/local/git/PipeCoursework/src/pipe/modules/matrices/Matrices.java

            renderIncidenceMatrix(data,data.getIncidenceMatrix())
        },1,false,false,true,false);
        s+=ResultsHTMLPane.makeTable(new String[] {
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 151 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/StateViewer.java
Starting at line 167 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/StateViewer.java

	public void clearAllCond()
	{
		for(ConditionPlace curPlace : condPlaces)
		{
			// Update the 'change buffer' with a blank condition; this will remove the condition
			((StateEditor)parent).addStateElement(curPlace.getId(), "", "");
=====================================================================
Found a 11 line (26 tokens) duplication in the following files: 
Starting at line 170 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java
Starting at line 131 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/ConditionPlaceHandler.java

				 targetStr = conditionValue.getText();
				 
				 
				 
				 // Check that the input is valid, then check the new condition
				 if (inputValid(targetStr))
				 {
					 try
					 {						 
						 // Update the change buffer					 
						 ((StateEditor)parent).addStateElement(place.getId(), operatorStr, targetStr);
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 152 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java
Starting at line 171 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java

	public void clearAllCond()
	{
		for(ConditionPlace curPlace : condPlaces)
		{
			// Update the 'change buffer' with a blank condition; this will remove the condition
			((StateEditor)parent).addStateElement(curPlace.getId(), "", "");
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 115 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 186 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 245 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 281 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java
Starting at line 384 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ResultProvider.java

	public static void setupSSP(final QueryOperationNode node, final MouseEvent event)
	{
		try
		{
			if (node.getResult().getOrginalType() == PTNode.STEADYSTATEPROB)
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 151 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ServerSettingsBasicPanel.java
Starting at line 32 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/EvaluationSettingsServerPanel.java

		this.serverPanel.add(this.processorNo);
		this.serverPanel.setMaximumSize(new Dimension(	Integer.MAX_VALUE,
														this.serverPanel.getPreferredSize().height));
	}
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 52 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ServerSettingsBasicPanel.java
Starting at line 71 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ServerSettingsBasicPanel.java

	ActionListener				addServClick	= new ActionListener()
												{
													public void actionPerformed(ActionEvent event)
													{
														if (event.getSource() == ServerSettingsBasicPanel.this.cancelButton)
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 68 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java
Starting at line 87 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java
Starting at line 93 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java
Starting at line 99 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java
Starting at line 105 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java
Starting at line 124 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java
Starting at line 130 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java
Starting at line 136 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java
Starting at line 142 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java
Starting at line 171 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java

				subMenuItem.setText("true");
				menuItem.add(subMenuItem);
				subMenuItem = new JMenuItem(new EditPerformanceTreeNodeAction(	this.contentPane,
																				(PerformanceTreeNode) this.myObject,
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 42 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeNodeHandler.java
Starting at line 245 of /usr/local/git/PipeCoursework/src/pipe/gui/ModuleManager.java

					popup.add(menuItem);
					popup.show(e.getComponent(), e.getX(), e.getY());
				}
			}
		}
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 531 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 285 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

				if (dragStart.x > e.getX()){
					offScreen.translate(viewer.getWidth(), 0);
				}
				if (dragStart.y > e.getY()){
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 551 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java
Starting at line 582 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java

					selector.addItem("Assign Actions");
				}else if (currentParam.equals("[statefunc]")){
					selector.addItem("-- Select --");
					selector.addItem("Set State Function");
				}
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 523 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 303 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

			details[c][1] = String.valueOf(((ArcPathPoint) this.pathPoints.get(c)).getY());
			details[c][2] = String.valueOf(((ArcPathPoint) this.pathPoints.get(c)).getPointType());
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 522 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 302 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

			details[c][0] = String.valueOf(((ArcPathPoint) this.pathPoints.get(c)).getX());
			details[c][1] = String.valueOf(((ArcPathPoint) this.pathPoints.get(c)).getY());
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 241 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 255 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java

					(float)(myPoint.getPoint().y + Math.sin(anAngle)*distance) );
			myPoint = (PerformanceTreeArcPathPoint)pathPoints.get(1);
=====================================================================
Found a 1 line (26 tokens) duplication in the following files: 
Starting at line 133 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPathPoint.java
Starting at line 135 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPathPoint.java

			angle = Math.atan((point.x - p2.x) / (p2.y - point.y))+Math.PI;
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 296 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 788 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

				thisArc.arc.setPathToTransitionAngle(this.angle + 270);
			}
			else if (Math.sin(thisAngle) > 0)
			{
				left.add(thisArc);
				thisArc.arc.setPathToTransitionAngle(this.angle + 180);
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 337 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 181 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ServerSettingsBasicPanel.java

		componentPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));

		this.okButton = new JButton("OK");
		this.okButton.addActionListener(this.addServClick);
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 542 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 285 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

				if (dragStart.x > e.getX()){
					offScreen.translate(viewer.getWidth(), 0);
				}
				if (dragStart.y > e.getY()){
=====================================================================
Found a 9 line (26 tokens) duplication in the following files: 
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/NegationNode.java
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/MomentNode.java
Starting at line 29 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/InIntervalNode.java
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/FiringRateNode.java
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/DistributionNode.java
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/DisconNode.java
Starting at line 30 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ConvolutionNode.java
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ArithOpNode.java
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ArithCompNode.java
Starting at line 26 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/ArgumentNode.java

	public ArgumentNode(double positionXInput, double positionYInput) {
		super(positionXInput, positionYInput);
		initialiseNode();
	}
	
	
	private void initialiseNode() {
		// set name and node type
		setName("ArgumentNode");
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 322 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java
Starting at line 365 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

					Iterator it = ((OperationNode) nodeToDelete).getOutgoingArcIDs().iterator();
					while (it.hasNext())
					{
						String outgoingArcID = (String) it.next();
						PerformanceTreeArc outgoingArc = getMacroArc(outgoingArcID);
=====================================================================
Found a 9 line (26 tokens) duplication in the following files: 
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateStatesNode.java
Starting at line 29 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateProbNode.java
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/StatesAtTimeNode.java
Starting at line 31 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SequentialNode.java
Starting at line 29 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/RangeNode.java
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ProbInStatesNode.java
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ProbInIntervalNode.java
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PassageTimeDensityNode.java
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/NegationNode.java

	public NegationNode(double positionXInput, double positionYInput) {
		super(positionXInput, positionYInput);
		initialiseNode();
	}
	
	
	private void initialiseNode() {
		// set name and node type
		setName("NegationNode");
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 168 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 365 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

					Iterator it = ((OperationNode) nodeToDelete).getOutgoingArcIDs().iterator();
					while (it.hasNext())
					{
						String outgoingArcID = (String) it.next();
						PerformanceTreeArc outgoingArc = getMacroArc(outgoingArcID);
=====================================================================
Found a 16 line (26 tokens) duplication in the following files: 
Starting at line 147 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 206 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java

					else
					{
						// node return type is not supported
						problem = "The node you are trying to connect is not a valid subnode of a Subset node";
						writeErrorMessage(problem);
						return false;
					}
				}
				else
				{
					// role type is not supported
					problem = "No permissible child node of a Subset node has the role associated with it that you want to assign it to";
					writeErrorMessage(problem);
					return false;
				}
			}
=====================================================================
Found a 13 line (26 tokens) duplication in the following files: 
Starting at line 82 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 81 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ResultNode.java

	}

	/**
	 * This method recursively prints out the textual representation of the node
	 * and its children
	 */
	@Override
	public String printTextualRepresentation()
	{
		String description = "";
		ArrayList children = getChildNodes();
		if (children != null)
		{
=====================================================================
Found a 9 line (26 tokens) duplication in the following files: 
Starting at line 30 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/StatesNode.java
Starting at line 25 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/StateFunctionNode.java
Starting at line 27 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/NumNode.java
Starting at line 26 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/BoolNode.java
Starting at line 25 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/ActionsNode.java
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateStatesNode.java

	public SteadyStateStatesNode(double positionXInput, double positionYInput) {
		super(positionXInput, positionYInput);
		initialiseNode();
	}
	
	
	private void initialiseNode() {
		// set name and node type
		setName("SteadyStateStatesNode");
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 191 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ConditionPlaceHandler.java
Starting at line 245 of /usr/local/git/PipeCoursework/src/pipe/gui/ModuleManager.java

					popup.add(menuItem);
					popup.show(e.getComponent(), e.getX(), e.getY());
				}
			}
		}
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 186 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateGroupEditor.java
Starting at line 260 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateGroupEditor.java

	ActionListener	autoSetState	= new ActionListener()
									{
										public void actionPerformed(ActionEvent event)
										{
											if (event.getSource() == StateGroupEditor.this.initialStateButton)
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 121 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateGroupEditor.java
Starting at line 181 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ServerSettingsBasicPanel.java

		componentPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));

		this.okButton = new JButton("OK");
		this.okButton.addActionListener(this.addServClick);
=====================================================================
Found a 7 line (26 tokens) duplication in the following files: 
Starting at line 710 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 745 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java

		ActionListener removeStateFromStateLabelButtonListener = new ActionListener()
		{
			public void actionPerformed(ActionEvent arg0)
			{
				if (StateLabelManager.currentStateLabel != null)
				{
					int[] statesAssignedSelectedIndices = StateLabelManager.statesAssignedToLabelList.getSelectedIndices();
=====================================================================
Found a 7 line (26 tokens) duplication in the following files: 
Starting at line 624 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 645 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java

				{
					JOptionPane.showMessageDialog(	QueryManager.getEditor().getContentPane(),
													"To edit a state group, please select a single state \n"
													+ "group from the list of states defined on the model.",
													"Warning",
													JOptionPane.INFORMATION_MESSAGE);
				}
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 205 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 76 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/ActionLabelManager.java

			ActionListener comboBoxListener = new ActionListener() {
				public void actionPerformed(ActionEvent e) {
					JComboBox cb = (JComboBox)e.getSource();
					String actionLabel = (String)cb.getSelectedItem();				
=====================================================================
Found a 9 line (26 tokens) duplication in the following files: 
Starting at line 119 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 552 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java

				}
			}
		};
		ActionListener cancelButtonListener = new ActionListener()
		{
			public void actionPerformed(ActionEvent arg0)
			{
				StateLabelManager.clearAll();
				StateLabelManager.stateLabelDialog.dispose();
=====================================================================
Found a 8 line (26 tokens) duplication in the following files: 
Starting at line 116 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 132 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java

	    					"that you wish to assign to the Macro node.",
	    					"Warning",
	    					JOptionPane.ERROR_MESSAGE);
	    		}		
		    }
	    };   
	    ActionListener cancelButtonListener = new ActionListener() {		 
		    public void actionPerformed(ActionEvent arg0) {
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 163 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java
Starting at line 192 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/StateViewer.java

			((StateEditor)parent).addStateElement(curPlace.getId(), "=", currentMarking);
			
			// Update the UI
			curPlace.setCondition("=", currentMarking);			
		}
	}	
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 135 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java
Starting at line 148 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java

	public void clearAllCond() {
		for(ConditionPlace curPlace : condPlaces) {
			// Update the 'change buffer' with a blank condition; this will remove the condition
			((StateGroupEditor)parent).addStateElement(curPlace.getId(), "", "");
=====================================================================
Found a 8 line (26 tokens) duplication in the following files: 
Starting at line 165 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java
Starting at line 449 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayerWriter.java

								file.getCanonicalPath() +
								"\" xslt=\"" +
								xsltSource.getSystemId() +
								"\" transformer=\"" + transformer.getURIResolver() + "\"");
// System.out.println("=====================================================================");
// e.printStackTrace(System.err);
		}
		catch (final TransformerConfigurationException e)
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 490 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 1006 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java

				PerformanceTreeNode node = it.next();
				String nodeID = node.getId();
				PTNode nodeType = node.getNodeType();
				System.out.println("The array has a node entry with ID " + nodeID + " and type " +
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 230 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryData.java
Starting at line 300 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroDefinition.java

					Iterator<PerformanceTreeArc> it = ((OperationNode) node).getRequiredArcs().iterator();
					while (it.hasNext())
					{
						arc = it.next();
						arc.setSource(node);
=====================================================================
Found a 8 line (26 tokens) duplication in the following files: 
Starting at line 170 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 448 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayerWriter.java

			System.out.println("DOMException thrown in savePNML() : dataLayerWriter Class : dataLayer Package: filename=\"" +
								file.getCanonicalPath() +
								"\" xslt=\"" +
								xsltSource.getSystemId() +
								"\" transformer=\"" + transformer.getURIResolver() + "\"");
// System.out.println("=====================================================================");
// e.printStackTrace(System.err);
		}
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 147 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 178 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

								macroFile.getCanonicalPath() + "\" xslt=\"" + xsltSource.getSystemId() +
								"\" transformer=\"" + transformer.getURIResolver() + "\"");
		}
		catch (TransformerException e)
=====================================================================
Found a 8 line (26 tokens) duplication in the following files: 
Starting at line 50 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryWriter.java
Starting at line 49 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/MacroWriter.java

	private static MacroDefinition			macro;
	private static HashMap<String, String>	nodesProcessed	= new HashMap<String, String>();

	/**
	 * This method is responsible for saving a macro as an XML document. The
	 * document follows the structure of the macro tree.
	 */
	public static void saveMacro(final MacroDefinition macroDef, final String saveLocation)	throws NullPointerException,
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 84 of /usr/local/git/PipeCoursework/src/pipe/modules/reachability/ReachabilityGraphGenerator.java
Starting at line 74 of /usr/local/git/PipeCoursework/src/pipe/modules/gspn/GSPNNew.java

	ActionListener runAnalysis = new ActionListener() {
		public void actionPerformed(ActionEvent arg0) {
			long start = new Date().getTime();
			long efinished;
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 621 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java
Starting at line 382 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LaplaceTransformInverter.java

					if(MAind[i][n++] == j) {
						DecimalFormat matrixF = new DecimalFormat("' '0.0;-0.0");
						String op = matrixF.format(MAstore[MAind[i][n]]);
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 368 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java
Starting at line 754 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java

			rgBuf = rgfc.map(FileChannel.MapMode.READ_ONLY, 0, length);
		}
		catch (Exception e) {
			e.printStackTrace();
		}
=====================================================================
Found a 12 line (26 tokens) duplication in the following files: 
Starting at line 214 of /usr/local/git/PipeCoursework/src/pipe/modules/simulation/Simulation.java
Starting at line 224 of /usr/local/git/PipeCoursework/src/pipe/modules/simulation/Simulation.java

    }


    //Generate the 95% confidence interval for the table of results

    //Find standard deviation and mulitply by 1.95996 assuming approx
    //to gaussian distribution

    //For each column in result array
    for(i=0; i < marking.length; i++) {
      //Find variance
      for(j=0; j < cycles ;j++)
=====================================================================
Found a 9 line (26 tokens) duplication in the following files: 
Starting at line 131 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 170 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java

					 targetStr = conditionValue.getText();

				 // Check that the input is valid, then check the new condition
				 if (inputValid(targetStr))
				 {
					 try
					 {						 
						 // Update the change buffer					 
						 ((StateEditor)parent).addStateElement(placeStr, operatorStr, targetStr);
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 187 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java
Starting at line 163 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateView.java

			((StateGroupEditor)parent).addStateElement(curPlace.getId(), "=", currentMarking);
			// Update the UI
			curPlace.setCondition("=", currentMarking);			
		}
	}	
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 151 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java
Starting at line 167 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/StateViewer.java

	public void clearAllCond()
	{
		for(ConditionPlace curPlace : condPlaces)
		{
			// Update the 'change buffer' with a blank condition; this will remove the condition
			((StateEditor)parent).addStateElement(curPlace.getId(), "", "");
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 280 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/DrmaaExecutor.java
Starting at line 328 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/DrmaaExecutor.java

				return new PointsResultWrapper(	ServerConstants.pdfResultsFileName,
												resultsDirectory,
												this.subtree.getID(),
												this.subtree.getType());
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 160 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java
Starting at line 165 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java
Starting at line 170 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java

		catch (final IOException e)
		{
			ServerLoggingHandler.logger.log(Level.WARNING, "Couldn't complete analysis", e);
			this.cleanUp();
		}
		catch (final ClassNotFoundException e)
=====================================================================
Found a 10 line (26 tokens) duplication in the following files: 
Starting at line 34 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/Negation.java
Starting at line 48 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/InInterval.java

			throw new InvalidNodeAnalyserException("InInterval Children not evaluated yet");
		}
	}

	@Override
	protected NodeAnalyser checkChildValid(final NodeAnalyser child) throws InvalidNodeAnalyserException
	{
		switch (child.getType())
		{
			case PROBININTERVAL :
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 135 of /usr/local/git/PipeCoursework/test/pipe/common/dataLayer/GuiViewTest.java
Starting at line 147 of /usr/local/git/PipeCoursework/test/pipe/common/dataLayer/GuiViewTest.java

		int[] sizes = new int[components.length];
		for (int i = 0; i < components.length; i++){
			if (components[i] instanceof PlaceTransitionObject){
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 396 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 629 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java

	    } else {
		throw new IllegalArgumentException("value of attribute \"" + name + "\" is not an instance of Integer");
	    }
	    break;
	case LINE_TYPE:
	    if(value instanceof GrappaLine) {
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 359 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 601 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java

	    } else {
		throw new IllegalArgumentException("value of attribute \"" + name + "\" is not an instance of Integer");
	    }
	    break;
	case DOUBLE_TYPE:
	    if(value instanceof Double) {
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 352 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 594 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java

	    } else {
		throw new IllegalArgumentException("value of attribute \"" + name + "\" is not an instance of Color");
	    }
	    break;
	case DIR_TYPE:
	    if(value instanceof Integer) {
=====================================================================
Found a 7 line (25 tokens) duplication in the following files: 
Starting at line 240 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java
Starting at line 268 of /usr/local/git/PipeCoursework/src/att/grappa/Attribute.java

    public final boolean equalsValue(Attribute attr) {
	if(attr == null) {
	    return false;
	}
	if(this == attr) {
	    return true;
	}
=====================================================================
Found a 1 line (25 tokens) duplication in the following files: 
Starting at line 1600 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java
Starting at line 1602 of /usr/local/git/PipeCoursework/src/att/grappa/Element.java

	    patch.setRect(p.getX(), p.getY(), p.getWidth(), p.getHeight());
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 478 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 511 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 534 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

				((Element)(vec.elementAt(i))).delete();
			    }
			}
			subg.currentSelection = null;
			subg.getGraph().repaint();
		    } else if(text.startsWith("Remove")) {
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 313 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 323 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

			    Element el = subg.createElement(Grappa.EDGE,info,attrs);
			    if(el != null) {
				el.buildShape();
				subg.getGraph().repaint();
			    }
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 150 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java
Starting at line 615 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaAdapter.java

			    Object crnt = subg.currentSelection;
			    subg.currentSelection = new Vector();
			    ((Vector)(subg.currentSelection)).add(crnt);
=====================================================================
Found a 1 line (25 tokens) duplication in the following files: 
Starting at line 440 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java
Starting at line 448 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

		grpath.lineTo(x = (float)grpts[--pts].x, y = (float)grpts[pts].y);
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 410 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java
Starting at line 422 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaLine.java

		grpath.curveTo(
			       x = (float)grpts[pts].x, y = (float)grpts[pts++].y,
=====================================================================
Found a 1 line (25 tokens) duplication in the following files: 
Starting at line 1223 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaNexus.java
Starting at line 37 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaBox.java

	this(r.getX(),r.getY(),r.getWidth(),r.getHeight());
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 944 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java
Starting at line 963 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

		    if((grappaNexus = node.grappaNexus) == null || !node.selectable) continue;
		    if(grappaNexus.rawBounds2D().contains(pt)) {
			if(grappaNexus.contains(pt)) {
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 612 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java
Starting at line 637 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaStyle.java

	   ) {
	    if(styleStringBuffer == null) {
		styleStringBuffer = new StringBuffer();
	    } else {
		styleStringBuffer.append(',');
	    }
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 624 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 643 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java

			Enumeration enm = ((Node)elem).edgeElements();
			while(enm.hasMoreElements()) {
			    ((Element)(enm.nextElement())).highlight |= DELETION_MASK;
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 504 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaSupport.java
Starting at line 977 of /usr/local/git/PipeCoursework/src/att/grappa/GrappaPanel.java

	    Element subelem = null;

	    enm = subg.subgraphElements();
	    while(enm.hasMoreElements()) {
		if((subelem = reallyFindContainingElement((Subgraph)(enm.nextElement()), pt, stash)) != null && subelem.selectable) {
=====================================================================
Found a 1 line (25 tokens) duplication in the following files: 
Starting at line 1061 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 1075 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(7/*optMacroName*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
=====================================================================
Found a 1 line (25 tokens) duplication in the following files: 
Starting at line 873 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java
Starting at line 898 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

              CUP$Parser$result = new java_cup.runtime.Symbol(5/*optSubgHdr*/, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-0)).right, RESULT);
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 1507 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 1529 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	}
	if(graphdict != null) {
	    Enumeration enm = graphdict.elements();
	    while(enm.hasMoreElements()) {
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 929 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 933 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    } else if(hashCode == NODESEP_HASH && attrname.equals(NODESEP_ATTR)) {
		convtype = DOUBLE_TYPE;
	    } else if(hashCode == RANKSEP_HASH && attrname.equals(RANKSEP_ATTR)) {
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 427 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 548 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    return setAttribute(attr.getName(),attr.getStringValue());
	}
	Object oldValue = null;
	Attribute newAttr = null;
	Attribute crntAttr =  getLocalAttribute(attr.getName());
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 418 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 539 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    attributes = new Hashtable();
	}
	// check to see if attr is being passed down the subgraph chain
	Subgraph sg = getSubgraph();
	Attribute prntAttr = (sg==null)?null:sg.getLocalAttribute(attr.getName());
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 300 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 427 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    return setEdgeAttribute(attr.getName(),attr.getStringValue());
	}
	Object oldValue = null;
	Attribute newAttr = null;
	Attribute crntAttr = getEdgeAttribute(attr.getName());
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 291 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 418 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	    edgeAttributes = new Hashtable();
	}
	// check to see if attr is being passed down the subgraph chain
	Subgraph sg = getSubgraph();
	Attribute prntAttr = (sg==null)?null:sg.getEdgeAttribute(attr.getName());
=====================================================================
Found a 10 line (25 tokens) duplication in the following files: 
Starting at line 255 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java
Starting at line 667 of /usr/local/git/PipeCoursework/src/att/grappa/Subgraph.java

	if((attr = (Attribute)(edgeAttributes.get(key))) == null) return(null);
	return(attr.getValue());
    }

    /**
     * Gets an enumeration of the subgraph-specific edge attribute keys
     *
     * @return an enumeration of String objects.
     */
    public Enumeration getEdgeAttributeKeys() {
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 560 of /usr/local/git/PipeCoursework/src/circularbuffers/CircularByteBuffer.java
Starting at line 622 of /usr/local/git/PipeCoursework/src/circularbuffers/CircularByteBuffer.java

					if (inputStreamClosed) throw new IOException("InputStream has been closed; cannot skip bytes on a closed InputStream.");
					int available = CircularByteBuffer.this.available();
					if (available > 0){
						int length = Math.min((int)n, available);
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 1760 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1770 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                if(a.real==Double.NEGATIVE_INFINITY || a.imag==Double.NEGATIVE_INFINITY)test = true;
                return test;
        }

        public boolean isInfinite(){
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 1695 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1702 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

        public static Complex acsch(Complex a ){
                Complex c = a.inverse();
                Complex d = (Complex.square(a)).plus(1.0D);
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 1604 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 1675 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                d=Complex.plusOne().minus(a);
                c=c.over(d);
                c=Complex.log(c);
                c=c.over(2.0D);
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 845 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 863 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                    if(b.isInfinite() && a!=0.0D){
                        c.reset(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
                        return c;
                    }
                    if(Fmath.isInfinity(a) && !b.isZero()){
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 826 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 867 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                    if(Fmath.isInfinity(a) && !b.isZero()){
                        c.reset(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
                        return c;
                    }
=====================================================================
Found a 11 line (25 tokens) duplication in the following files: 
Starting at line 221 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java
Starting at line 251 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

                        }
                        catch(java.io.IOException e){
                                done = true;
                        }
                }
                return Complex.parseComplex(cstring);
        }

        // PRINT A COMPLEX NUMBER
        // Print to terminal window with text (message) and a line return
        public void println(String message){
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 2465 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 2491 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static double atanh(double a){
            double sgn = 1.0D;
            if(a<0.0D){
                sgn = -1.0D;
                a = -a;
            }
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 1520 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1896 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static void selectSort(double[] aa, double[] bb, int[] indices){
            int index = 0;
            int lastIndex = -1;
            int n = aa.length;
            int m = bb.length;
            if(m<n)throw new IllegalArgumentException("The second argument array, bb, (length = " + m + ") should be at least as long as the first argument array, aa, (length = " + n + ")");
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 1347 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1382 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            double[] bb = new double[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 1340 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1487 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

        public static void selectionSort(double[] aa, double[] bb, int[] indices){
            int index = 0;
            int lastIndex = -1;
            int n = aa.length;
            double holdb = 0.0D;
            int holdi = 0;
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 1331 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 284 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

            for(int i=0; i<aa.length; i++){
                    System.out.println(aa[i].toString() + "  ");
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 1322 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 299 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

            for(int i=0; i<aa.length; i++){
                    System.out.print(aa[i].toString() + "   ");
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 1314 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 284 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

            for(int i=0; i<aa.length; i++){
                    System.out.println(aa[i].toString() + "  ");
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 1305 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 299 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

            for(int i=0; i<aa.length; i++){
                    System.out.print(aa[i].toString() + "   ");
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 1297 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 284 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

            for(int i=0; i<aa.length; i++){
                    System.out.println(aa[i].toString() + "  ");
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 1288 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 299 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

            for(int i=0; i<aa.length; i++){
                    System.out.print(aa[i].toString() + "   ");
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 1280 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 284 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

            for(int i=0; i<aa.length; i++){
                    System.out.println(aa[i].toString() + "  ");
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 1271 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 299 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

            for(int i=0; i<aa.length; i++){
                    System.out.print(aa[i].toString() + "   ");
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 1263 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 284 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

            for(int i=0; i<aa.length; i++){
                    System.out.println(aa[i].toString() + "  ");
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 1254 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 299 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

            for(int i=0; i<aa.length; i++){
                    System.out.print(aa[i].toString() + "   ");
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 1246 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 284 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

            for(int i=0; i<aa.length; i++){
                    System.out.println(aa[i].toString() + "  ");
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 1237 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 299 of /usr/local/git/PipeCoursework/src/flanagan/complex/Complex.java

            for(int i=0; i<aa.length; i++){
                    System.out.print(aa[i].toString() + "   ");
=====================================================================
Found a 10 line (25 tokens) duplication in the following files: 
Starting at line 750 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 921 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                if(diff1>=0 && diff1<diff0 ){
                    diff0 = diff1;
                    nearest = array[i];
                }
            }
            return nearest;
        }

        // finds the index of nearest higher element value in array to the argument value
        public static int nearestHigherElementIndex(int[] array, int value){
=====================================================================
Found a 10 line (25 tokens) duplication in the following files: 
Starting at line 678 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 849 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

                if(diff1>=0 && diff1<diff0 ){
                    diff0 = diff1;
                    nearest = array[i];
                }
            }
            return nearest;
        }

        // finds the index of nearest lower element value in array to the argument value
        public static int nearestLowerElementIndex(int[] array, int value){
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 422 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java
Starting at line 1347 of /usr/local/git/PipeCoursework/src/flanagan/math/Fmath.java

            int[] indices = new int[n];
            for(int i=0; i<n; i++){
                bb[i]=aa[i];
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 729 of /usr/local/git/PipeCoursework/src/jama/EigenvalueDecomposition.java
Starting at line 790 of /usr/local/git/PipeCoursework/src/jama/EigenvalueDecomposition.java

                  } else {
   
                     // Solve complex equations
   
                     x = H[i][i+1];
                     y = H[i+1][i];
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 395 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 454 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

   public void setMatrix (int i0, int i1, int[] c, Matrix X) {
      try {
         for (int i = i0; i <= i1; i++) {
            for (int j = 0; j < c.length; j++) {
=====================================================================
Found a 18 line (25 tokens) duplication in the following files: 
Starting at line 298 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 320 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

               B[i][j] = A[r[i]][c[j]];
            }
         }
      } catch(ArrayIndexOutOfBoundsException e) {
         throw new ArrayIndexOutOfBoundsException("Submatrix indices");
      }
      return X;
   }

   /** Get a submatrix.
   @param i0   Initial row index
   @param i1   Final row index
   @param c    Array of column indices.
   @return     A(i0:i1,c(:))
   @exception  ArrayIndexOutOfBoundsException Submatrix indices
   */

   public Matrix getMatrix (int i0, int i1, int[] c) {
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 116 of /usr/local/git/PipeCoursework/src/jama/Matrix.java
Starting at line 173 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      for (int i = 0; i < m; i++) {
         if (A[i].length != n) {
=====================================================================
Found a 12 line (25 tokens) duplication in the following files: 
Starting at line 512 of /usr/local/git/PipeCoursework/src/java_cup/runtime/lr_parser.java
Starting at line 442 of /usr/local/git/PipeCoursework/src/att/grappa/Parser.java

    int act;

    /* the Symbol/stack element returned by a reduce */
    Symbol lhs_sym = null;

    /* information about production being reduced with */
    short handle_size, lhs_sym_num;

    /* set up direct reference to tables to drive the parser */
    production_tab = production_table();
    action_tab     = action_table();
    reduce_tab     = reduce_table();
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 273 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/AnnotationNote.java
Starting at line 299 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/AnnotationNote.java

	public void adjustTop(final int dy)
	{
		if (this.note.getPreferredSize().height <= this.note.getHeight() - dy)
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 260 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java
Starting at line 315 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

		if (!this.deleted)
		{
			if (this.getParent() != null)
			{
				this.getParent().remove(this.weightLabel);
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 58 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPathPoint.java
Starting at line 199 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/AnnotationNote.java

		if (CreateGui.getApp() != null)
		{
			this.addZoomController(CreateGui.getView().getZoomController());
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 2405 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 2434 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

			if (transitionName != null)
			{
				for (int i = 0; i < this.transitionsArray.size(); i++)
				{
					if (transitionName.equalsIgnoreCase(((Transition) this.transitionsArray.get(i)).getName()))
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 2253 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 2281 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

			if (placeName != null)
			{
				for (int i = 0; i < this.placesArray.size(); i++)
				{
					if (placeName.equalsIgnoreCase(((Place) this.placesArray.get(i)).getName()))
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 1821 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1865 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

					place.setCurrentMarking((this.currentMarkingVector[placeNo] + this.incidenceMatrix.get(placeNo,transitionNo)));				
				}
			}
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 770 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1263 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

			positionYInput = Double.valueOf(positionYTempStorage).doubleValue() *
								(false ? this.DISPLAY_SCALE_FACTORY : 1) +
								(false ? this.DISPLAY_SHIFT_FACTORY : 1);
		}

		if (idTempStorage.length() > 0)
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 764 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 1257 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

			positionXInput = Double.valueOf(positionXTempStorage).doubleValue() *
								(false ? this.DISPLAY_SCALE_FACTORX : 1) +
								(false ? this.DISPLAY_SHIFT_FACTORX : 1);
		}
		if (positionYTempStorage.length() > 0)
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 632 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java
Starting at line 3036 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

		if (this.transitionsArray != null && this.transitionsArray.size() > 0)
		{
			// we need to check all the arcs....
			for (int i = 0; i < this.transitionsArray.size(); i++)
			{
=====================================================================
Found a 13 line (25 tokens) duplication in the following files: 
Starting at line 29 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DoubleTupleWritable.java
Starting at line 45 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ComplexWritable.java

																					: thisImag == thatImag	? 0
																											: 1)
															: 1;
	}

	/**
	 * Returns true iff <code>o</code> is a ComplexWritable with the same
	 * value.
	 */
	@Override
	public boolean equals(final Object o)
	{
		if (!(o instanceof ComplexWritable))
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 127 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/FiringTaggedButton.java
Starting at line 829 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

		this.bounds = this.myPath.getBounds();
		this.bounds.grow(PetriNetObject.COMPONENT_DRAW_OFFSET, PetriNetObject.COMPONENT_DRAW_OFFSET);
		this.setBounds(this.bounds);
	}

}
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 93 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/FiringTaggedButton.java
Starting at line 568 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Arc.java

	public void paintComponent(final Graphics g)
	{
		super.paintComponent(g);
		final Graphics2D g2 = (Graphics2D) g;
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 1657 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 414 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

   public void setMatrix (int[] r, int[] c, Matrix X) {
      try {
         for (int i = 0; i < r.length; i++) {
            for (int j = 0; j < c.length; j++) {
=====================================================================
Found a 26 line (25 tokens) duplication in the following files: 
Starting at line 1599 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 1632 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

					this.A[i][c[j]] = X.get(i - i0, j);
				}
			}
		}
		catch (final ArrayIndexOutOfBoundsException e)
		{
			throw new ArrayIndexOutOfBoundsException("Submatrix indices");
		}
	}

// ######################################################################################
	/**
	 * Set a submatrix.
	 * 
	 * @param r
	 *            Array of row indices.
	 * @param j0
	 *            Initial column index
	 * @param j1
	 *            Final column index
	 * @param X
	 *            A(r(:),j0:j1)
	 * @exception ArrayIndexOutOfBoundsException
	 *                Submatrix indices
	 */
	public void setMatrix(final int[] r, final int j0, final int j1, final PNMatrix X)
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 1599 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 399 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

               A[i][j] = X.get(i-i0,j-j0);
            }
         }
      } catch(ArrayIndexOutOfBoundsException e) {
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 293 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 391 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java

				}
			}
			for (int j = 0; j < mLength; j++)
			{
				if (pMinus[j] != 0)
				{
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 55 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PNMatrix.java
Starting at line 116 of /usr/local/git/PipeCoursework/src/jama/Matrix.java

      	for (int i = 0; i < m; i++) {
      		if (A[i].length != n) {
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 747 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 821 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

		while (arcIterator.hasNext())
		{
			final ArcAngleCompare thisArc = (ArcAngleCompare) arcIterator.next();
			if (thisArc.sourceOrTarget())
=====================================================================
Found a 1 line (25 tokens) duplication in the following files: 
Starting at line 695 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 713 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

			if(thisArc.arc.isTagged()  && ((Place)thisArc.arc.getSource()).isTagged() ){
=====================================================================
Found a 18 line (25 tokens) duplication in the following files: 
Starting at line 181 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java
Starting at line 96 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Place.java

		this.setCentre((int) this.positionX, (int) this.positionY);
		this.updateBounds();

	}

	/**
	 * Create Petri-Net Place object
	 * 
	 * @param positionXInput
	 *            X-axis Position
	 * @param positionYInput
	 *            Y-axis Position
	 * @param idInput
	 *            Place id
	 * @param color
	 *            Color
	 */
	public Place(final double positionXInput, final double positionYInput, final String idInput) {
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 649 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LTIMapRed.java
Starting at line 659 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LTIMapRed.java

		size = MBstore.length;
		out.writeInt(size);
		for(int i = 0; i < size; i++) {
			out.writeDouble(MBstore[i]);
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 241 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LaplaceTransformInverter.java
Starting at line 569 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LTIMapRed.java

			for(int K = 1; K <= 12; K++) {
				int N = Ntr + K;
				double Y = N*H;
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 229 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LaplaceTransformInverter.java
Starting at line 479 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LTIMapRed.java

		double sum = !retDivS ? calculatedRTA.get(new Complex(X,0))/2.0 : calculatedCDF.get(new Complex(X,0))/2.0;
		
		
		for(int N = 1; N <= Ntr; N++) {
			double Y = N*H;
			double term = !retDivS ? calculatedRTA.get(new Complex(X,Y)) : calculatedCDF.get(new Complex(X,Y));
=====================================================================
Found a 19 line (25 tokens) duplication in the following files: 
Starting at line 215 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LaplaceTransformInverter.java
Starting at line 454 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LTIMapRed.java

	}
	
	/**
	 * Overrides method in Laplace Transform Inverter. 0Method performs the Gauss-Seidel
	 *  iterative method to solve linear equations of the for Ax=b. Rather than calculating
	 *  each L(s) value when required, it looks them up in an array of results calculated
	 *  by the distributed MapReduce job. 
	 * @param T Time 
	 * @param calcRTA true if want to calculate response time, otherwise calculates cdf
	 * @return probability
	 * @throws NotConvergingException
	 */
	protected double calculateSum(double T, boolean calcRTA) throws NotConvergingException {
		//System.out.println("LTIMapRed calcsum");
		//Check that MapReduce has produced correct number of results:
		//System.out.println("Checking size");
		retDivS = false;
		if(!calcRTA)
			retDivS = true;
=====================================================================
Found a 8 line (25 tokens) duplication in the following files: 
Starting at line 763 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 773 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

					newTransition.write(dataFile);
					//System.out.println("From: " + from.getIDNum() + ":(" + from + ")" + " To: " + current.getTo() + " Rate: " + current.getRate());
				} catch (IOException e){
					System.err.println("IO error when writing transitions to file.");
					throw new ImmediateAbortException();
				}			

			}
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 417 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 77 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/LargeStateSpaceGen.java

		if(intermediate.exists()){
			//System.out.println("About to delete " + intermediate);
			if(!intermediate.delete()){
				System.err.println("Could not delete intermediate file.");
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 271 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 335 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

						tangible = new Marking(sprime, numtangiblestates-1);
						tangibleStates.enqueue(tangible);
						addExplored(tangible, exploredStates, esoFile, false);
					}
					else{
						int id = identifyState(sprime, exploredStates);
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 99 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java
Starting at line 170 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/StateSpaceGenerator.java

		if(intermediate.exists()){
			if(!intermediate.delete()){
				System.err.println("\nCould not delete intermediate file.");
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 467 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/myNode.java
Starting at line 507 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/myNode.java

		for(i=0; i< tree.number_places; i++)
		{
			if (Markup[i]!=-1)
			{
=====================================================================
Found a 16 line (25 tokens) duplication in the following files: 
Starting at line 34 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/myNode.java
Starting at line 81 of /usr/local/git/PipeCoursework/src/pipe/dataLayer/calculations/myNode.java

	public myNode(int [] marking_array, myNode parent_node, myTree atree, int treeDepth) {
		int i;             //counter for 'for printing loop'

		//Node now knows its tree in order to use its attributes
		tree = atree;

		depth = treeDepth;

		//Update the count of nodes
		tree.nodeCount++;

		//Set up marking for this node
		Markup = marking_array;  //created in myTree

		//Assign the nodes parents
		parent = parent_node;
=====================================================================
Found a 1 line (25 tokens) duplication in the following files: 
Starting at line 252 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java
Starting at line 253 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

						createArc.getArcPath().addPoint(Grid.getModifiedX(e.getX()), Grid.getModifiedY(e.getY()), shiftDown);
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 166 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java
Starting at line 306 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

	public void validate() {
		Component[] children = getComponents();
		for (int i = 0; i < children.length; i++)
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 24 of /usr/local/git/PipeCoursework/src/pipe/gui/TransitionHandler.java
Starting at line 30 of /usr/local/git/PipeCoursework/src/pipe/gui/PlaceTransitionObjectHandler.java

  }
 
  public JPopupMenu getPopup(MouseEvent e) {
  	JPopupMenu popup = super.getPopup(e);
  	  	
  	JMenuItem menuItem = new JMenuItem(new LabelAction(contentPane, myObject));
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 49 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/EnterOptionsPane.java
Starting at line 61 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/EnterOptionsPane.java

		targetStatesField = new JTextField(20);
		c.weightx = 0.5;
		c.gridx = 1;
		c.gridwidth = 5;
		this.add(targetStatesField, c);
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 71 of /usr/local/git/PipeCoursework/src/pipe/io/TransitionRecord.java
Starting at line 77 of /usr/local/git/PipeCoursework/src/pipe/io/TransitionRecord.java

	public void write(RandomAccessFile outputfile) throws IOException{
		outputfile.writeInt(fromstate);
		outputfile.writeInt(tostate);
		outputfile.writeDouble(rate);
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 110 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java
Starting at line 114 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		bottomPanel.add(jtfTStop=new JTextField(5));
    bottomPanel.add(Box.createHorizontalStrut(10));
		bottomPanel.add(new JLabel("T Step:"));
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 726 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 762 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

		  	while (arcsTo.hasNext())
		  	{
		  		
		  		final Arc arc = (Arc)arcsTo.next();
		  		if(arc.isTagged())
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 413 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 514 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

			  		}
			  	}
			  	while (arcFromTransitions.hasNext()) 
			  	{
			  		final Arc arc = ((Arc)arcFromTransitions.next());
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 345 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java
Starting at line 236 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		modString += "\n\t}\n";		
	}
	
	private void transitions() {
		for(int i=0; i<transitions.length; i++) {
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 90 of /usr/local/git/PipeCoursework/src/pipe/modules/invariantAnalysis/InvariantAnalysis.java
Starting at line 73 of /usr/local/git/PipeCoursework/src/pipe/modules/classification/Classification.java

  ActionListener classifyButtonClick=new ActionListener() {
    public void actionPerformed(ActionEvent arg0) {
      DataLayer sourceDataLayer=sourceFilePanel.getDataLayer();
      String s="<h2>Petri net classification results</h2>";
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 212 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ConditionPlaceHandler.java
Starting at line 245 of /usr/local/git/PipeCoursework/src/pipe/gui/ModuleManager.java

					popup.add(menuItem);
					popup.show(e.getComponent(), e.getX(), e.getY());
				}
			}
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/ResultGeneration.java
Starting at line 165 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamacaTagged/DnamacaTagged.java

					String[] lines = p.split(result);
					

				    	for(int i=0; i<lines.length;i++)
						{
							if(lines[i].indexOf("(begin performance results)")>=0)
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 563 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 599 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

		  	while (arcsTo.hasNext())
		  	{
		  		
		  		final Arc arc = (Arc)arcsTo.next();
		  		if(arc.isTagged())
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 264 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 351 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java

			  		}
			  	}
			  	while (arcFromTransitions.hasNext()) 
			  	{
			  		final Arc arc = ((Arc)arcFromTransitions.next());
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 196 of /usr/local/git/PipeCoursework/src/pipe/modules/passageTimeForTaggedNet/TransModel.java
Starting at line 236 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		modString += "\n\t}\n";		
	}
	
	private void transitions() {
		for(int i=0; i<transitions.length; i++) {
=====================================================================
Found a 9 line (25 tokens) duplication in the following files: 
Starting at line 455 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java
Starting at line 471 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/QueryManager.java

							if (outgoingArc.isRequired() && outgoingArc.getTargetID() == null) {
								errormsg = "Please ensure that your query tree is fully \n"+
										   "connected by checking that all required (solid)\n"+
										   "arcs have been assigned to nodes.";
								throw new QueryException(errormsg);
							}
						}
						// check if an ArithCompNode has an operation assigned
						if (node instanceof ArithCompNode) {
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 129 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/EvaluationSettingsPanel.java
Starting at line 152 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/EvaluationSettingsPanel.java

				this.startTime.setEnabled(false);
				this.endTime.setEnabled(false);
				this.timeStep.setEnabled(false);
			}
=====================================================================
Found a 12 line (25 tokens) duplication in the following files: 
Starting at line 69 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/evaluator/gui/ServerSettingsBasicPanel.java
Starting at line 175 of /usr/local/git/PipeCoursework/src/pipe/modules/clientCommon/ServerPanel.java

	 }
	 
	 
	 /**
	  * This action listener responds to the buttons used in the "Add Server" pop up dialog
	  * i.e the Cancel / OK buttons 
	  */
	 
	 ActionListener addServClick = new ActionListener() {
		 public void actionPerformed(ActionEvent event)
		 {
			 if (event.getSource() == cancelButton)
=====================================================================
Found a 11 line (25 tokens) duplication in the following files: 
Starting at line 24 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeArcPathPointHandler.java
Starting at line 28 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeArcHandler.java

	public PerformanceTreeArcHandler(Container contentpane, PerformanceTreeArc obj) {
		super(contentpane, obj);
		enablePopup = true;
	}	
	
	/** 
	 * Creates the popup menu that the user will see when they right click on a component 
	 */
	public JPopupMenu getPopup(MouseEvent e) {	
		JPopupMenu popup;
		if (QueryManager.allowDeletionOfArcs)
=====================================================================
Found a 9 line (25 tokens) duplication in the following files: 
Starting at line 980 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 1009 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

				nextAction = (GuiAction)actions.get(nextActionKey);
				if (nextAction != selected){
					nextAction.setSelected(false);
				}
			}
		}
	}

	private void setAnimationMode(boolean on) {
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 426 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 324 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

		addMenuItem(animateMenu,((Action)actions.get("Animate")));

		//Help menu
		JMenu helpMenu = new JMenu("Help");
		helpMenu.setMnemonic('H');
		addMenuItem(helpMenu,((Action)actions.get("Help")));    
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 400 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryEditor.java
Starting at line 286 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

		addMenuItem(fileMenu,((Action)actions.get("Exit")));

		//View menu
		JMenu viewMenu = new JMenu("View");
		viewMenu.setMnemonic('V');
		addMenuItem(viewMenu,((Action)actions.get("Grid")));
=====================================================================
Found a 7 line (25 tokens) duplication in the following files: 
Starting at line 45 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryFileBrowser.java
Starting at line 36 of /usr/local/git/PipeCoursework/src/pipe/gui/widgets/FileBrowser.java

  public FileBrowser() {
    this(null);
  }
  
  
  public File openFile() {
    if (showOpenDialog(null)==JFileChooser.APPROVE_OPTION)
=====================================================================
Found a 1 line (25 tokens) duplication in the following files: 
Starting at line 511 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 252 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

						createArc.setEndPoint(Grid.getModifiedX(e.getX()), Grid.getModifiedY(e.getY()), shiftDown);
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 283 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/QueryView.java
Starting at line 306 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

	public void validate() {
		Component[] children = getComponents();
		for (int i = 0; i < children.length; i++)
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 1027 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/TextQueryEditor.java
Starting at line 97 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/PerformanceTreeSelectionObject.java

		Component netObj[] = edit_window.getComponents();

		for (int i=0; i<netObj.length; i++) {
			// Handle PerformanceTreeNodes
			if ((netObj[i] instanceof PerformanceTreeNode) && ((PerformanceTreeObject)netObj[i]).isSelectable()) {
=====================================================================
Found a 8 line (25 tokens) duplication in the following files: 
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java
Starting at line 108 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

	}

	public PerformanceTreeArc(	final double startPositionXInput,
								final double startPositionYInput,
								final double endPositionXInput,
								final double endPositionYInput,
								final PerformanceTreeNode sourceInput,
								final String labelInput,
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 599 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 387 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

		final double ABy = A.y - B.y;

		return Math.sqrt(ABx * ABx + ABy * ABy);
	}

	public int getNumPoints()
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 342 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 349 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java

	public void hidePoints() {
		if (!pointLock) {
			for (int i=0; i<pathPoints.size(); i++) {
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 238 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 252 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java

			PerformanceTreeArcPathPoint myLastPoint = (PerformanceTreeArcPathPoint)pathPoints.get(getEndIndex()-1);
			float distance = (float)getMod(myPoint.getPoint(), myLastPoint.getPoint())/ARC_CONTROL_POINT_CONSTANT;
			myPoint.setControl2((float)(myPoint.getPoint().x + Math.cos(anAngle)*distance),
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 164 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 607 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

					x[k1] = (int) ((ArcPathPoint) this.pathPoints.get(curveStartIndex + k1)).getPoint().x;
					y[k1] = (int) ((ArcPathPoint) this.pathPoints.get(curveStartIndex + k1)).getPoint().y;
=====================================================================
Found a 1 line (25 tokens) duplication in the following files: 
Starting at line 164 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 165 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java

					y[k1] = (int)((PerformanceTreeArcPathPoint)pathPoints.get(curveStartIndex + k1)).getPoint().y;
=====================================================================
Found a 7 line (25 tokens) duplication in the following files: 
Starting at line 143 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArcPath.java
Starting at line 580 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/ArcPath.java

		final int endIndex = this.getEndIndex();

		for (int c = 1; c <= endIndex;)
		{
			int curveStartIndex = 0;
			int curveEndIndex = 0;
			myCurrentPoint = (ArcPathPoint) this.pathPoints.get(c);
=====================================================================
Found a 12 line (25 tokens) duplication in the following files: 
Starting at line 450 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 205 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/PlaceTransitionObject.java

		final double zoomBy = this.getZoomController().getPercent() * 0.01;
		return (int) (zoomBy * this.componentWidth / 2.0);
	}

	/**
	 * Returns the distance between the outside of the component to the centre,
	 * in order to position the centre of the place where the mouse clicks on
	 * the screen
	 * 
	 * @return Top offset of Place
	 */
	public int centreOffsetTop()
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 332 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 334 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java

			else thisArc.arc.setSourceLocation(	this.positionX + centreOffsetLeft() + transformed.x,
												this.positionY + centreOffsetTop() + transformed.y);
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 281 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 773 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/Transition.java

		final ArrayList right = new ArrayList();

		arcIterator = this.arcAngleList.iterator();
		while (arcIterator.hasNext())
		{
=====================================================================
Found a 7 line (25 tokens) duplication in the following files: 
Starting at line 197 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java
Starting at line 429 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

	}

	@Override
	public void paintComponent(final Graphics g)
	{
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D) g;
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 268 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 324 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

		addMenuItem(animateMenu,((Action)actions.get("Animate")));

		//Help menu
		JMenu helpMenu = new JMenu("Help");
		helpMenu.setMnemonic('H');
		addMenuItem(helpMenu,((Action)actions.get("Help")));    
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 264 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroEditor.java
Starting at line 286 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiFrame.java

		addMenuItem(fileMenu,((Action)actions.get("Exit")));

		//View menu
		JMenu viewMenu = new JMenu("View");
		viewMenu.setMnemonic('V');
		addMenuItem(viewMenu,((Action)actions.get("Grid")));
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 115 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java
Starting at line 591 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java

	    		if (macroListSelectedIndices.length > 0) {
	    			int selectionIndex = macroListSelectedIndices[0];
	    			String selectedMacroName = (String)macroList.getModel().getElementAt(selectionIndex);
=====================================================================
Found a 1 line (25 tokens) duplication in the following files: 
Starting at line 522 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 252 of /usr/local/git/PipeCoursework/src/pipe/gui/GuiView.java

						createArc.setEndPoint(Grid.getModifiedX(e.getX()), Grid.getModifiedY(e.getY()), shiftDown);
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 273 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java
Starting at line 378 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroView.java

	public void zoom()
	{
		Component[] children = getComponents();
		for (int i = 0; i < children.length; i++)
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 103 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/InIntervalNode.java
Starting at line 108 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/DisconNode.java

			description += QueryManager.addColouring("a boolean value that has not been specified yet ");
			QueryManager.colourDown();
			description += QueryManager.addColouring(op);
			QueryManager.colourUp();
			description += QueryManager.addColouring("another boolean value that has also not been specified yet ");
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 87 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/OperationNode.java
Starting at line 69 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeNode.java

	public PerformanceTreeNode(	final double positionXInput,
								final double positionYInput,
								final String idInput,
								final PTNode typeInput) {
		super(positionXInput, positionYInput, idInput);
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 109 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PassageTimeDensityNode.java
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/InIntervalNode.java

				QueryManager.colourUp();
				description += child.printTextualRepresentation();
				QueryManager.colourDown();
				if (i.hasNext()) 
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 93 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PassageTimeDensityNode.java
Starting at line 77 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/NegationNode.java

				PerformanceTreeNode child = i.next();	
				// print out child's textual representation
				QueryManager.colourUp();
				description += child.printTextualRepresentation();
				QueryManager.colourDown();
			}
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 101 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ProbInIntervalNode.java
Starting at line 103 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/InIntervalNode.java

			description += QueryManager.addColouring("a numerical value that has not been specified yet ");
			QueryManager.colourDown();
			description += QueryManager.addColouring(op);
			QueryManager.colourUp();
			description += QueryManager.addColouring(" a numerical range that has not been specified yet ");
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 84 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ProbInIntervalNode.java
Starting at line 109 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PassageTimeDensityNode.java

					QueryManager.colourUp();
					description += child.printTextualRepresentation();
					QueryManager.colourDown();
					if (i.hasNext()) {
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 99 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/RangeNode.java
Starting at line 101 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ProbInIntervalNode.java

			description += QueryManager.addColouring("a passage time density that has not been specified yet ");
			QueryManager.colourDown();
			description += QueryManager.addColouring(op);
			QueryManager.colourUp();
			description += QueryManager.addColouring(" a certain range that has not been specified yet");
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 82 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/RangeNode.java
Starting at line 109 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PassageTimeDensityNode.java

					QueryManager.colourUp();
					description += child.printTextualRepresentation();
					QueryManager.colourDown();
					if (i.hasNext()) {
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 91 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ResultNode.java
Starting at line 75 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/FiringRateNode.java

		ArrayList children = getChildNodes();
		if (children != null) {
			PerformanceTreeNode child = (PerformanceTreeNode)children.get(0);
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 88 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/ResultNode.java
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PassageTimeDensityNode.java

	public String printTextualRepresentation() {
		String description = "";
		ArrayList children = getChildNodes();
		if (children != null) {
			PerformanceTreeNode child;	
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 213 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SequentialNode.java
Starting at line 256 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroNode.java

			arc = new PerformanceTreeArc(arcStartPointX, arcStartPointY, arcEndPointX, arcEndPointY, this, role, showArcLabels);
			arc.setRequired(false);
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 100 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/StatesAtTimeNode.java
Starting at line 99 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/RangeNode.java

			description += QueryManager.addColouring("a numerical value that has not been specified yet");
			QueryManager.colourDown();
			description += QueryManager.addColouring(op);
			QueryManager.colourUp();
			description += QueryManager.addColouring(" another numerical value that has also not been specified yet");
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 83 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/StatesAtTimeNode.java
Starting at line 109 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PassageTimeDensityNode.java

					QueryManager.colourUp();
					description += child.printTextualRepresentation();
					QueryManager.colourDown();
					if (i.hasNext()) {
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 102 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateProbNode.java
Starting at line 100 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/StatesAtTimeNode.java

			description += QueryManager.addColouring("an unspecified numerical value ");
			QueryManager.colourDown();
			description += QueryManager.addColouring(op);
			QueryManager.colourUp();
			description += QueryManager.addColouring(" a range that has not been specified yet either");
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateProbNode.java
Starting at line 109 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PassageTimeDensityNode.java

					QueryManager.colourUp();
					description += child.printTextualRepresentation();
					QueryManager.colourDown();
					if (i.hasNext()) {
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 100 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateStatesNode.java
Starting at line 102 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SteadyStateProbNode.java

			description += QueryManager.addColouring("a state function that has not been specified yet ");
			QueryManager.colourDown();
			description += QueryManager.addColouring(op);
			QueryManager.colourUp();
			description += QueryManager.addColouring("the set of all states in the model ");
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 95 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/SubsetNode.java
Starting at line 109 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/operationnodes/PassageTimeDensityNode.java

					QueryManager.colourUp();
					description += child.printTextualRepresentation();
					QueryManager.colourDown();
					if (i.hasNext()) {
=====================================================================
Found a 11 line (25 tokens) duplication in the following files: 
Starting at line 105 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/ValueNode.java
Starting at line 380 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/PerformanceTreeArc.java

					QueryManager.getProgressView().add(this.arcLabel);
				}
			}
		}
		else
		{
			// we're in macro mode, so we want the label to be put on MacroView
			MacroView macroView = MacroManager.getView();
			if (macroView != null)
			{
				macroView.remove(this.arcLabel);
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 848 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 537 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/macros/MacroManager.java

			    popupDialog.dispose();
		    }
	    };   
	    okButton.addActionListener(okButtonListener);
	    okButtonPanel.add(okButton);
	    contentPane.add(okButtonPanel);
=====================================================================
Found a 7 line (25 tokens) duplication in the following files: 
Starting at line 415 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java
Starting at line 492 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/gui/performancetrees/valuenodes/labels/StateLabelManager.java

															"Edit State Label",
															true);

		// text panel
		JPanel stateLabelNamePanel = new JPanel();
		stateLabelNamePanel.setLayout(new SpringLayout());
		JLabel stateLabelSelectionLabel = new JLabel("State Label: ", SwingConstants.TRAILING);
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 480 of /usr/local/git/PipeCoursework/src/pipe/modules/queryeditor/io/QueryLoader.java
Starting at line 921 of /usr/local/git/PipeCoursework/src/pipe/common/dataLayer/DataLayer.java

		if (nodelist.getLength() > 0)
		{
			tempArc.getArcPath().purgePathPoints();
			for (int i = 1; i < nodelist.getLength() - 1; i++)
=====================================================================
Found a 7 line (25 tokens) duplication in the following files: 
Starting at line 317 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/RTA.java
Starting at line 469 of /usr/local/git/PipeCoursework/src/pipe/modules/rta/AnalyseResponse.java

		}
		catch(FileNotFoundException e) {
			e.printStackTrace();
		}
		catch(IOException e) {
			e.printStackTrace();
		}
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 110 of /usr/local/git/PipeCoursework/src/pipe/modules/simulation/Simulation.java
Starting at line 90 of /usr/local/git/PipeCoursework/src/pipe/modules/invariantAnalysis/InvariantAnalysis.java

  ActionListener analyseButtonClick=new ActionListener() {
    public void actionPerformed(ActionEvent arg0) {
      DataLayer sourceDataLayer=sourceFilePanel.getDataLayer();
      String s="<h2>Petri net invariant analysis results</h2>";
=====================================================================
Found a 8 line (25 tokens) duplication in the following files: 
Starting at line 67 of /usr/local/git/PipeCoursework/src/pipe/modules/stateSpace/StateSpace.java
Starting at line 85 of /usr/local/git/PipeCoursework/src/pipe/modules/invariantAnalysis/InvariantAnalysis.java

  }
  
  /**
   * Classify button click handler
   */
  ActionListener analyseButtonClick=new ActionListener() {
    public void actionPerformed(ActionEvent arg0) {
      DataLayer sourceDataLayer=sourceFilePanel.getDataLayer();
=====================================================================
Found a 9 line (25 tokens) duplication in the following files: 
Starting at line 45 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/Analyse.java
Starting at line 51 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Analyse.java

	}
	
	public void setServer(String serverAddr, int serverPort)
	{
	  this.serverAddr = serverAddr;
	  this.serverPort = serverPort;
	}
	
	public void setPassageParameters(ArrayList sourceStateGroups, ArrayList destStateGroups, AnalysisSettings analysisSetting, Boolean cacheFlag)
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 66 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/FileBrowserPanel.java
Starting at line 86 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/FileBrowserPanel.java

			  int length = transitions.length;			  
			  names = new String[length];			
				
			  for (i=0; i< length; i++)
				  names[i] = transitions[i].getName();
=====================================================================
Found a 10 line (25 tokens) duplication in the following files: 
Starting at line 48 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/Analyse.java
Starting at line 45 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/Analyse.java

	  }
	  
	  
	  public void setServer(String serverAddr, int serverPort)
	  {
		  this.serverAddr = serverAddr;
		  this.serverPort = serverPort;
	  }
	  
	  public void setStateMeasure(PerformanceMeasure performanceMeasure)
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 175 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/ConditionPlaceHandler.java
Starting at line 245 of /usr/local/git/PipeCoursework/src/pipe/gui/ModuleManager.java

					popup.add(menuItem);
					popup.show(e.getComponent(), e.getX(), e.getY());
				}
			}
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 170 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 153 of /usr/local/git/PipeCoursework/src/pipe/modules/steadyState/SteadyState.java

	    	if(pnmlData==null) return;
	      
	    	else if(!pnmlData.getPetriNetObjects().hasNext())
	    		statusMesg+="No Petri net objects defined!";
	      
	    	else if (selectedServer == -1)
=====================================================================
Found a 20 line (25 tokens) duplication in the following files: 
Starting at line 102 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TaggedModule.java
Starting at line 107 of /usr/local/git/PipeCoursework/src/pipe/modules/passage/Passage.java

    setupPanel.add(serverPanel.getPanel() );

    
    // 3 Add Source - Destination States selection panel
    setupPanel.add( getStatesPanel() );   
    
    // 4 Add Passage time parameters
    setupPanel.add( getAnalysisPanel() );
/*
    clearCacheBox = new JCheckBox("Clear cached values from server"); 
    setupPanel.add(clearCacheBox);
    
    autoTimeBox = new JCheckBox("Automatically determine time range"); 
    setupPanel.add(autoTimeBox);

    autoTimeBox.addItemListener(this);
 */   
    
    // 5 Add Analyse button
    setupPanel.add(new ButtonBar("Analyse",analyseButtonClick));
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 419 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java
Starting at line 429 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java

	  	while (arcsTo.hasNext())
	  	{
	  		currArc = arcsTo.next();
	  		if(currArc.placeId==tagInputPlace)
		  		condition += " && " + currArc.placeId + " > " + ((currArc.weight-1)+1);
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 221 of /usr/local/git/PipeCoursework/src/pipe/modules/tagged/TransMod.java
Starting at line 236 of /usr/local/git/PipeCoursework/src/pipe/modules/dnamaca/Dnamaca.java

		modString += "\n\t}\n";		
	}
	
	private void transitions() {
		for(int i=0; i<transitions.length; i++) {
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 237 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/DrmaaExecutor.java
Starting at line 244 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/DrmaaExecutor.java

			ServerLoggingHandler.logger.log(Level.WARNING, "Couldn't calculate node for " +
															this.subtree.getType() + " " +
															this.subtree.getID());
			throw e;
		}
		catch (final FileNotFoundException e)
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 164 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/DrmaaExecutor.java
Starting at line 210 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/DrmaaExecutor.java

					final String[] extraArgs = {coeffFilePath1, coeffFilePath2, this.workPath};

					exitInfo = drmSession.submitJob(this.toolPath, null, extraArgs, this.resultsDirPath);
					break;
				}
=====================================================================
Found a 8 line (25 tokens) duplication in the following files: 
Starting at line 326 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java
Starting at line 335 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java
Starting at line 344 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java
Starting at line 357 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java
Starting at line 393 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java
Starting at line 407 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/PerformanceQueryServerAction.java

											this.paths.getDnamacaPath(),
											this.workPath,
											this.resultsDirPath,
											this.settings,
											this.maxProcessors,
											this.resultSender);
					break;
				case ININTERVAL :
=====================================================================
Found a 10 line (25 tokens) duplication in the following files: 
Starting at line 60 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/RangeNode.java
Starting at line 82 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/nodeanalyser/ArithOp.java

			case ARITHOP :
			case MACRO :
			case NUM :

				return child;
			default :
				throw new InvalidNodeAnalyserException(child.getType() +
														" doesn't return type num node, Can't create range node");
		}
	}
=====================================================================
Found a 9 line (25 tokens) duplication in the following files: 
Starting at line 89 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/SubtreeHelper.java
Starting at line 43 of /usr/local/git/PipeCoursework/src/pipe/common/PTNode.java

			case PERCENTILE :
			case STEADYSTATESTATES :
			case STATESATTIME :
			case ININTERVAL :
			case DISCON :
			case ARITHCOMP :
			case ARITHOP :
			case NEGATION :
			case SUBSET :
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 90 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java
Starting at line 636 of /usr/local/git/PipeCoursework/src/pipe/server/performancequery/structure/TranslateQueryTree.java

			this.modFiles.append(this.performanceMeasures.states.get(i));

			if (this.exStateGrps != null && !this.exStateGrps.isEmpty())
			{
				this.modFiles.append(" : ").append(StringHelper.SENTINEL);
=====================================================================
Found a 7 line (25 tokens) duplication in the following files: 
Starting at line 24 of /usr/local/git/PipeCoursework/test/pipe/gui/GuiFrameTest.java
Starting at line 38 of /usr/local/git/PipeCoursework/test/pipe/common/dataLayer/GuiViewTest.java

		view = CreateGui.getView();
		frame.setVisible(true);
	}

	protected void tearDown() throws Exception {
		super.tearDown();
		tester = null;
